{"version":3,"file":"util.js","sourceRoot":"","sources":["../src/util.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,GAAG,aAAa,EAAE,CAAC;AAEhC;;;GAGG;AACH,MAAM,UAAU,aAAa;IAC3B,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;QAAE,OAAO,IAAI,CAAC;KAAE;IACjD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAAE,OAAO,MAAM,CAAC;KAAE;IACrD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAAE,OAAO,MAAM,CAAC;KAAE;IACrD,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACpD,CAAC;AAAA,CAAC;AAEF;;;GAGG;AACH,MAAM,UAAU,oBAAoB,CAAC,CAAM;IACzC,OAAO,CACL,CAAC,YAAY,WAAW;QACxB,CAAC,YAAY,WAAW;QACxB,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,YAAY,WAAW,CAAC;QACjD,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,YAAY,eAAe,CAAC,CAC1D,CAAC;AACJ,CAAC","sourcesContent":["const globals = getGlobalThis();\n\n/**\n * Get the global scope for browsers that do not support globalThis \n * https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n */\nexport function getGlobalThis() {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\n/**\n * Test if an object is transferable\n * @param x Object\n */\nexport function isTransferableObject(x: any) {\n  return (\n    x instanceof ArrayBuffer ||\n    x instanceof MessagePort ||\n    (globals.ImageBitmap && x instanceof ImageBitmap) ||\n    (globals.OffscreenCanvas && x instanceof OffscreenCanvas)\n  );\n}"]}