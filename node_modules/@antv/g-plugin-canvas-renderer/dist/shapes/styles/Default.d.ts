import { CanvasContext, CSSGradientValue, CSSRGB, DisplayObject, GlobalRuntime, ParsedBaseStyleProps, Pattern } from '@antv/g-lite';
import type { ImagePool } from '@antv/g-plugin-image-loader';
import { CanvasRendererPlugin } from '../../CanvasRendererPlugin';
import type { StyleRenderer } from './interfaces';
export declare class DefaultRenderer implements StyleRenderer {
    private imagePool;
    constructor(imagePool: ImagePool);
    render(context: CanvasRenderingContext2D, parsedStyle: ParsedBaseStyleProps, object: DisplayObject, canvasContext: CanvasContext, plugin: CanvasRendererPlugin, runtime: GlobalRuntime): void;
    private clearShadowAndFilter;
}
/**
 * apply before fill and stroke but only once
 */
export declare function setShadowAndFilter(object: DisplayObject, context: CanvasRenderingContext2D, hasShadow: boolean): void;
export declare function getPattern(pattern: Pattern, object: DisplayObject, context: CanvasRenderingContext2D, canvasContext: CanvasContext, plugin: CanvasRendererPlugin, runtime: GlobalRuntime, imagePool: ImagePool): CanvasPattern;
export declare function getColor(parsedColor: CSSGradientValue, object: DisplayObject, context: CanvasRenderingContext2D, imagePool: ImagePool): string | CanvasGradient;
export declare function applyFill(context: CanvasRenderingContext2D, object: DisplayObject, fill: CSSRGB | CSSGradientValue[] | Pattern, fillRule: 'nonzero' | 'evenodd', canvasContext: CanvasContext, plugin: CanvasRendererPlugin, runtime: GlobalRuntime, imagePool: ImagePool, skipFill?: boolean): void;
export declare function applyStroke(context: CanvasRenderingContext2D, object: DisplayObject, stroke: CSSRGB | CSSGradientValue[] | Pattern, canvasContext: CanvasContext, plugin: CanvasRendererPlugin, runtime: GlobalRuntime, imagePool: ImagePool, skipStroke?: boolean): void;
