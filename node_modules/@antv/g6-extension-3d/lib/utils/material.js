"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMaterial = void 0;
const g_plugin_3d_1 = require("@antv/g-plugin-3d");
const cache_1 = require("./cache");
const map_1 = require("./map");
const texture_1 = require("./texture");
const MATERIAL_CACHE = new map_1.TupleMap();
const MATERIAL_MAP = {
    basic: g_plugin_3d_1.MeshBasicMaterial,
    point: g_plugin_3d_1.PointMaterial,
    lambert: g_plugin_3d_1.MeshLambertMaterial,
    phong: g_plugin_3d_1.MeshPhongMaterial,
};
/**
 * <zh/> 基于配置创建材质，支持缓存
 *
 * <en/> Create material based on configuration, support cache
 * @param plugin - <zh/> 插件对象 <en/> plugin
 * @param options - <zh/> 材质配置 <en/> material configuration
 * @param texture - <zh/> 纹理 <en/> texture
 * @returns <zh/> 材质对象 <en/> material object
 */
function createMaterial(plugin, options, texture) {
    const key = (0, cache_1.getCacheKey)(options);
    if (MATERIAL_CACHE.has(key, texture)) {
        return MATERIAL_CACHE.get(key, texture);
    }
    const device = plugin.getDevice();
    const { type, map = texture, ...opts } = options;
    const Ctor = MATERIAL_MAP[type];
    // @ts-expect-error ignore
    const material = new Ctor(device, { map: (0, texture_1.createTexture)(plugin, map), ...opts });
    MATERIAL_CACHE.set(key, texture, material);
    return material;
}
exports.createMaterial = createMaterial;
//# sourceMappingURL=material.js.map