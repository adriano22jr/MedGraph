{"version":3,"file":"index.umd.min.js","sources":["../../../node_modules/.pnpm/node_modules/tslib/tslib.es6.js","../../../node_modules/.pnpm/@antv+util@3.3.5/node_modules/@antv/util/esm/lodash/is-nil.js","../../../node_modules/.pnpm/@antv+util@3.3.5/node_modules/@antv/util/esm/lodash/is-type.js","../../../node_modules/.pnpm/@antv+util@3.3.5/node_modules/@antv/util/esm/lodash/clamp.js","../../../node_modules/.pnpm/@antv+util@3.3.5/node_modules/@antv/util/esm/lodash/is-number.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec3.js","../../../node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/vec4.js","../../../node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/@antv+g-device-api@1.6.10/node_modules/@antv/g-device-api/es/index.js","../src/packages/g-plugin-3d/src/geometries/ProceduralGeometry.ts","../src/packages/g-plugin-3d/src/geometries/util.ts","../src/packages/g-plugin-3d/src/geometries/CubeGeometry.ts","../src/packages/g-plugin-3d/src/materials/MeshBasicMaterial.ts","../src/packages/g-plugin-3d/src/geometries/SphereGeometry.ts","../src/packages/g-plugin-3d/src/geometries/TorusGeometry.ts","../src/packages/g-plugin-3d/src/geometries/PlaneGeometry.ts","../src/packages/g-plugin-3d/src/geometries/CylinderGeometry.ts","../src/packages/g-plugin-3d/src/geometries/ConeGeometry.ts","../src/packages/g-plugin-3d/src/geometries/CapsuleGeometry.ts","../src/packages/g-plugin-3d/src/lights/AmbientLight.ts","../src/packages/g-plugin-3d/src/lights/DirectionalLight.ts","../src/packages/g-plugin-3d/src/materials/MeshPhongMaterial.ts","../src/packages/g-plugin-3d/src/materials/MeshLambertMaterial.ts","../src/packages/g-plugin-3d/src/materials/PointMaterial.ts","../src/packages/g-plugin-3d/src/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n","// isFinite,\nvar isNil = function (value) {\n    /**\n     * isNil(null) => true\n     * isNil() => true\n     */\n    return value === null || value === undefined;\n};\nexport default isNil;\n//# sourceMappingURL=is-nil.js.map","var toString = {}.toString;\nvar isType = function (value, type) { return toString.call(value) === '[object ' + type + ']'; };\nexport default isType;\n//# sourceMappingURL=is-type.js.map","var clamp = function (a, min, max) {\n    if (a < min) {\n        return min;\n    }\n    else if (a > max) {\n        return max;\n    }\n    return a;\n};\nexport default clamp;\n//# sourceMappingURL=clamp.js.map","/**\n * 判断是否数字\n * @return {Boolean} 是否数字\n */\nimport isType from './is-type';\nvar isNumber = function (value) {\n    return isType(value, 'Number');\n};\nexport default isNumber;\n//# sourceMappingURL=is-number.js.map","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { isNil, isNumber, clamp } from '@antv/util';\nimport { __read, __extends, __values, __assign, __awaiter, __generator, __spreadArray, __rest } from 'tslib';\nimport EventEmitter from 'eventemitter3';\n\n/**\n * ported from @luma.gl/constants\n *\n * Standard WebGL and WebGL2 constants\n * These constants are also defined on the WebGLRenderingContext interface.\n */\nvar GL;\n(function (GL) {\n    // Clearing buffers\n    // Constants passed to clear() to clear buffer masks.\n    GL[GL[\"DEPTH_BUFFER_BIT\"] = 256] = \"DEPTH_BUFFER_BIT\";\n    GL[GL[\"STENCIL_BUFFER_BIT\"] = 1024] = \"STENCIL_BUFFER_BIT\";\n    GL[GL[\"COLOR_BUFFER_BIT\"] = 16384] = \"COLOR_BUFFER_BIT\";\n    // Rendering primitives\n    // Constants passed to drawElements() or drawArrays() to specify what kind of primitive to render.\n    GL[GL[\"POINTS\"] = 0] = \"POINTS\";\n    GL[GL[\"LINES\"] = 1] = \"LINES\";\n    GL[GL[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    GL[GL[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    GL[GL[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    GL[GL[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    GL[GL[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n    // Blending modes\n    // Constants passed to blendFunc() or blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately).\n    GL[GL[\"ZERO\"] = 0] = \"ZERO\";\n    GL[GL[\"ONE\"] = 1] = \"ONE\";\n    GL[GL[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\n    GL[GL[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\n    GL[GL[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    GL[GL[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    GL[GL[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n    GL[GL[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n    GL[GL[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\n    GL[GL[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\n    GL[GL[\"SRC_ALPHA_SATURATE\"] = 776] = \"SRC_ALPHA_SATURATE\";\n    GL[GL[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\n    GL[GL[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\n    GL[GL[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\n    GL[GL[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\n    // Blending equations\n    // Constants passed to blendEquation() or blendEquationSeparate() to control\n    // how the blending is calculated (for both, RBG and alpha, or separately).\n    GL[GL[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\n    GL[GL[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\n    GL[GL[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\n    // Getting GL parameter information\n    // Constants passed to getParameter() to specify what information to return.\n    GL[GL[\"BLEND_EQUATION\"] = 32777] = \"BLEND_EQUATION\";\n    GL[GL[\"BLEND_EQUATION_RGB\"] = 32777] = \"BLEND_EQUATION_RGB\";\n    GL[GL[\"BLEND_EQUATION_ALPHA\"] = 34877] = \"BLEND_EQUATION_ALPHA\";\n    GL[GL[\"BLEND_DST_RGB\"] = 32968] = \"BLEND_DST_RGB\";\n    GL[GL[\"BLEND_SRC_RGB\"] = 32969] = \"BLEND_SRC_RGB\";\n    GL[GL[\"BLEND_DST_ALPHA\"] = 32970] = \"BLEND_DST_ALPHA\";\n    GL[GL[\"BLEND_SRC_ALPHA\"] = 32971] = \"BLEND_SRC_ALPHA\";\n    GL[GL[\"BLEND_COLOR\"] = 32773] = \"BLEND_COLOR\";\n    GL[GL[\"ARRAY_BUFFER_BINDING\"] = 34964] = \"ARRAY_BUFFER_BINDING\";\n    GL[GL[\"ELEMENT_ARRAY_BUFFER_BINDING\"] = 34965] = \"ELEMENT_ARRAY_BUFFER_BINDING\";\n    GL[GL[\"LINE_WIDTH\"] = 2849] = \"LINE_WIDTH\";\n    GL[GL[\"ALIASED_POINT_SIZE_RANGE\"] = 33901] = \"ALIASED_POINT_SIZE_RANGE\";\n    GL[GL[\"ALIASED_LINE_WIDTH_RANGE\"] = 33902] = \"ALIASED_LINE_WIDTH_RANGE\";\n    GL[GL[\"CULL_FACE_MODE\"] = 2885] = \"CULL_FACE_MODE\";\n    GL[GL[\"FRONT_FACE\"] = 2886] = \"FRONT_FACE\";\n    GL[GL[\"DEPTH_RANGE\"] = 2928] = \"DEPTH_RANGE\";\n    GL[GL[\"DEPTH_WRITEMASK\"] = 2930] = \"DEPTH_WRITEMASK\";\n    GL[GL[\"DEPTH_CLEAR_VALUE\"] = 2931] = \"DEPTH_CLEAR_VALUE\";\n    GL[GL[\"DEPTH_FUNC\"] = 2932] = \"DEPTH_FUNC\";\n    GL[GL[\"STENCIL_CLEAR_VALUE\"] = 2961] = \"STENCIL_CLEAR_VALUE\";\n    GL[GL[\"STENCIL_FUNC\"] = 2962] = \"STENCIL_FUNC\";\n    GL[GL[\"STENCIL_FAIL\"] = 2964] = \"STENCIL_FAIL\";\n    GL[GL[\"STENCIL_PASS_DEPTH_FAIL\"] = 2965] = \"STENCIL_PASS_DEPTH_FAIL\";\n    GL[GL[\"STENCIL_PASS_DEPTH_PASS\"] = 2966] = \"STENCIL_PASS_DEPTH_PASS\";\n    GL[GL[\"STENCIL_REF\"] = 2967] = \"STENCIL_REF\";\n    GL[GL[\"STENCIL_VALUE_MASK\"] = 2963] = \"STENCIL_VALUE_MASK\";\n    GL[GL[\"STENCIL_WRITEMASK\"] = 2968] = \"STENCIL_WRITEMASK\";\n    GL[GL[\"STENCIL_BACK_FUNC\"] = 34816] = \"STENCIL_BACK_FUNC\";\n    GL[GL[\"STENCIL_BACK_FAIL\"] = 34817] = \"STENCIL_BACK_FAIL\";\n    GL[GL[\"STENCIL_BACK_PASS_DEPTH_FAIL\"] = 34818] = \"STENCIL_BACK_PASS_DEPTH_FAIL\";\n    GL[GL[\"STENCIL_BACK_PASS_DEPTH_PASS\"] = 34819] = \"STENCIL_BACK_PASS_DEPTH_PASS\";\n    GL[GL[\"STENCIL_BACK_REF\"] = 36003] = \"STENCIL_BACK_REF\";\n    GL[GL[\"STENCIL_BACK_VALUE_MASK\"] = 36004] = \"STENCIL_BACK_VALUE_MASK\";\n    GL[GL[\"STENCIL_BACK_WRITEMASK\"] = 36005] = \"STENCIL_BACK_WRITEMASK\";\n    GL[GL[\"VIEWPORT\"] = 2978] = \"VIEWPORT\";\n    GL[GL[\"SCISSOR_BOX\"] = 3088] = \"SCISSOR_BOX\";\n    GL[GL[\"COLOR_CLEAR_VALUE\"] = 3106] = \"COLOR_CLEAR_VALUE\";\n    GL[GL[\"COLOR_WRITEMASK\"] = 3107] = \"COLOR_WRITEMASK\";\n    GL[GL[\"UNPACK_ALIGNMENT\"] = 3317] = \"UNPACK_ALIGNMENT\";\n    GL[GL[\"PACK_ALIGNMENT\"] = 3333] = \"PACK_ALIGNMENT\";\n    GL[GL[\"MAX_TEXTURE_SIZE\"] = 3379] = \"MAX_TEXTURE_SIZE\";\n    GL[GL[\"MAX_VIEWPORT_DIMS\"] = 3386] = \"MAX_VIEWPORT_DIMS\";\n    GL[GL[\"SUBPIXEL_BITS\"] = 3408] = \"SUBPIXEL_BITS\";\n    GL[GL[\"RED_BITS\"] = 3410] = \"RED_BITS\";\n    GL[GL[\"GREEN_BITS\"] = 3411] = \"GREEN_BITS\";\n    GL[GL[\"BLUE_BITS\"] = 3412] = \"BLUE_BITS\";\n    GL[GL[\"ALPHA_BITS\"] = 3413] = \"ALPHA_BITS\";\n    GL[GL[\"DEPTH_BITS\"] = 3414] = \"DEPTH_BITS\";\n    GL[GL[\"STENCIL_BITS\"] = 3415] = \"STENCIL_BITS\";\n    GL[GL[\"POLYGON_OFFSET_UNITS\"] = 10752] = \"POLYGON_OFFSET_UNITS\";\n    GL[GL[\"POLYGON_OFFSET_FACTOR\"] = 32824] = \"POLYGON_OFFSET_FACTOR\";\n    GL[GL[\"TEXTURE_BINDING_2D\"] = 32873] = \"TEXTURE_BINDING_2D\";\n    GL[GL[\"SAMPLE_BUFFERS\"] = 32936] = \"SAMPLE_BUFFERS\";\n    GL[GL[\"SAMPLES\"] = 32937] = \"SAMPLES\";\n    GL[GL[\"SAMPLE_COVERAGE_VALUE\"] = 32938] = \"SAMPLE_COVERAGE_VALUE\";\n    GL[GL[\"SAMPLE_COVERAGE_INVERT\"] = 32939] = \"SAMPLE_COVERAGE_INVERT\";\n    GL[GL[\"COMPRESSED_TEXTURE_FORMATS\"] = 34467] = \"COMPRESSED_TEXTURE_FORMATS\";\n    GL[GL[\"VENDOR\"] = 7936] = \"VENDOR\";\n    GL[GL[\"RENDERER\"] = 7937] = \"RENDERER\";\n    GL[GL[\"VERSION\"] = 7938] = \"VERSION\";\n    GL[GL[\"IMPLEMENTATION_COLOR_READ_TYPE\"] = 35738] = \"IMPLEMENTATION_COLOR_READ_TYPE\";\n    GL[GL[\"IMPLEMENTATION_COLOR_READ_FORMAT\"] = 35739] = \"IMPLEMENTATION_COLOR_READ_FORMAT\";\n    GL[GL[\"BROWSER_DEFAULT_WEBGL\"] = 37444] = \"BROWSER_DEFAULT_WEBGL\";\n    // Buffers\n    // Constants passed to bufferData(), bufferSubData(), bindBuffer(), or\n    // getBufferParameter().\n    GL[GL[\"STATIC_DRAW\"] = 35044] = \"STATIC_DRAW\";\n    GL[GL[\"STREAM_DRAW\"] = 35040] = \"STREAM_DRAW\";\n    GL[GL[\"DYNAMIC_DRAW\"] = 35048] = \"DYNAMIC_DRAW\";\n    GL[GL[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n    GL[GL[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n    GL[GL[\"BUFFER_SIZE\"] = 34660] = \"BUFFER_SIZE\";\n    GL[GL[\"BUFFER_USAGE\"] = 34661] = \"BUFFER_USAGE\";\n    // Vertex attributes\n    // Constants passed to getVertexAttrib().\n    GL[GL[\"CURRENT_VERTEX_ATTRIB\"] = 34342] = \"CURRENT_VERTEX_ATTRIB\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_ENABLED\"] = 34338] = \"VERTEX_ATTRIB_ARRAY_ENABLED\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_SIZE\"] = 34339] = \"VERTEX_ATTRIB_ARRAY_SIZE\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_STRIDE\"] = 34340] = \"VERTEX_ATTRIB_ARRAY_STRIDE\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_TYPE\"] = 34341] = \"VERTEX_ATTRIB_ARRAY_TYPE\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_NORMALIZED\"] = 34922] = \"VERTEX_ATTRIB_ARRAY_NORMALIZED\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_POINTER\"] = 34373] = \"VERTEX_ATTRIB_ARRAY_POINTER\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\"] = 34975] = \"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\";\n    // Culling\n    // Constants passed to cullFace().\n    GL[GL[\"CULL_FACE\"] = 2884] = \"CULL_FACE\";\n    GL[GL[\"FRONT\"] = 1028] = \"FRONT\";\n    GL[GL[\"BACK\"] = 1029] = \"BACK\";\n    GL[GL[\"FRONT_AND_BACK\"] = 1032] = \"FRONT_AND_BACK\";\n    // Enabling and disabling\n    // Constants passed to enable() or disable().\n    GL[GL[\"BLEND\"] = 3042] = \"BLEND\";\n    GL[GL[\"DEPTH_TEST\"] = 2929] = \"DEPTH_TEST\";\n    GL[GL[\"DITHER\"] = 3024] = \"DITHER\";\n    GL[GL[\"POLYGON_OFFSET_FILL\"] = 32823] = \"POLYGON_OFFSET_FILL\";\n    GL[GL[\"SAMPLE_ALPHA_TO_COVERAGE\"] = 32926] = \"SAMPLE_ALPHA_TO_COVERAGE\";\n    GL[GL[\"SAMPLE_COVERAGE\"] = 32928] = \"SAMPLE_COVERAGE\";\n    GL[GL[\"SCISSOR_TEST\"] = 3089] = \"SCISSOR_TEST\";\n    GL[GL[\"STENCIL_TEST\"] = 2960] = \"STENCIL_TEST\";\n    // Errors\n    // Constants returned from getError().\n    GL[GL[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n    GL[GL[\"INVALID_ENUM\"] = 1280] = \"INVALID_ENUM\";\n    GL[GL[\"INVALID_VALUE\"] = 1281] = \"INVALID_VALUE\";\n    GL[GL[\"INVALID_OPERATION\"] = 1282] = \"INVALID_OPERATION\";\n    GL[GL[\"OUT_OF_MEMORY\"] = 1285] = \"OUT_OF_MEMORY\";\n    GL[GL[\"CONTEXT_LOST_WEBGL\"] = 37442] = \"CONTEXT_LOST_WEBGL\";\n    // Front face directions\n    // Constants passed to frontFace().\n    GL[GL[\"CW\"] = 2304] = \"CW\";\n    GL[GL[\"CCW\"] = 2305] = \"CCW\";\n    // Hints\n    // Constants passed to hint()\n    GL[GL[\"DONT_CARE\"] = 4352] = \"DONT_CARE\";\n    GL[GL[\"FASTEST\"] = 4353] = \"FASTEST\";\n    GL[GL[\"NICEST\"] = 4354] = \"NICEST\";\n    GL[GL[\"GENERATE_MIPMAP_HINT\"] = 33170] = \"GENERATE_MIPMAP_HINT\";\n    // Data types\n    GL[GL[\"BYTE\"] = 5120] = \"BYTE\";\n    GL[GL[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    GL[GL[\"SHORT\"] = 5122] = \"SHORT\";\n    GL[GL[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    GL[GL[\"INT\"] = 5124] = \"INT\";\n    GL[GL[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    GL[GL[\"FLOAT\"] = 5126] = \"FLOAT\";\n    GL[GL[\"DOUBLE\"] = 5130] = \"DOUBLE\";\n    // Pixel formats\n    GL[GL[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n    GL[GL[\"ALPHA\"] = 6406] = \"ALPHA\";\n    GL[GL[\"RGB\"] = 6407] = \"RGB\";\n    GL[GL[\"RGBA\"] = 6408] = \"RGBA\";\n    GL[GL[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n    GL[GL[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n    // Pixel types\n    // UNSIGNED_BYTE = 0x1401,\n    GL[GL[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n    GL[GL[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n    GL[GL[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n    // Shaders\n    // Constants passed to createShader() or getShaderParameter()\n    GL[GL[\"FRAGMENT_SHADER\"] = 35632] = \"FRAGMENT_SHADER\";\n    GL[GL[\"VERTEX_SHADER\"] = 35633] = \"VERTEX_SHADER\";\n    GL[GL[\"COMPILE_STATUS\"] = 35713] = \"COMPILE_STATUS\";\n    GL[GL[\"DELETE_STATUS\"] = 35712] = \"DELETE_STATUS\";\n    GL[GL[\"LINK_STATUS\"] = 35714] = \"LINK_STATUS\";\n    GL[GL[\"VALIDATE_STATUS\"] = 35715] = \"VALIDATE_STATUS\";\n    GL[GL[\"ATTACHED_SHADERS\"] = 35717] = \"ATTACHED_SHADERS\";\n    GL[GL[\"ACTIVE_ATTRIBUTES\"] = 35721] = \"ACTIVE_ATTRIBUTES\";\n    GL[GL[\"ACTIVE_UNIFORMS\"] = 35718] = \"ACTIVE_UNIFORMS\";\n    GL[GL[\"MAX_VERTEX_ATTRIBS\"] = 34921] = \"MAX_VERTEX_ATTRIBS\";\n    GL[GL[\"MAX_VERTEX_UNIFORM_VECTORS\"] = 36347] = \"MAX_VERTEX_UNIFORM_VECTORS\";\n    GL[GL[\"MAX_VARYING_VECTORS\"] = 36348] = \"MAX_VARYING_VECTORS\";\n    GL[GL[\"MAX_COMBINED_TEXTURE_IMAGE_UNITS\"] = 35661] = \"MAX_COMBINED_TEXTURE_IMAGE_UNITS\";\n    GL[GL[\"MAX_VERTEX_TEXTURE_IMAGE_UNITS\"] = 35660] = \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\";\n    GL[GL[\"MAX_TEXTURE_IMAGE_UNITS\"] = 34930] = \"MAX_TEXTURE_IMAGE_UNITS\";\n    GL[GL[\"MAX_FRAGMENT_UNIFORM_VECTORS\"] = 36349] = \"MAX_FRAGMENT_UNIFORM_VECTORS\";\n    GL[GL[\"SHADER_TYPE\"] = 35663] = \"SHADER_TYPE\";\n    GL[GL[\"SHADING_LANGUAGE_VERSION\"] = 35724] = \"SHADING_LANGUAGE_VERSION\";\n    GL[GL[\"CURRENT_PROGRAM\"] = 35725] = \"CURRENT_PROGRAM\";\n    // Depth or stencil tests\n    // Constants passed to depthFunc() or stencilFunc().\n    GL[GL[\"NEVER\"] = 512] = \"NEVER\";\n    GL[GL[\"ALWAYS\"] = 519] = \"ALWAYS\";\n    GL[GL[\"LESS\"] = 513] = \"LESS\";\n    GL[GL[\"EQUAL\"] = 514] = \"EQUAL\";\n    GL[GL[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    GL[GL[\"GREATER\"] = 516] = \"GREATER\";\n    GL[GL[\"GEQUAL\"] = 518] = \"GEQUAL\";\n    GL[GL[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    // Stencil actions\n    // Constants passed to stencilOp().\n    GL[GL[\"KEEP\"] = 7680] = \"KEEP\";\n    GL[GL[\"REPLACE\"] = 7681] = \"REPLACE\";\n    GL[GL[\"INCR\"] = 7682] = \"INCR\";\n    GL[GL[\"DECR\"] = 7683] = \"DECR\";\n    GL[GL[\"INVERT\"] = 5386] = \"INVERT\";\n    GL[GL[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\n    GL[GL[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\n    // Textures\n    // Constants passed to texParameteri(),\n    // texParameterf(), bindTexture(), texImage2D(), and others.\n    GL[GL[\"NEAREST\"] = 9728] = \"NEAREST\";\n    GL[GL[\"LINEAR\"] = 9729] = \"LINEAR\";\n    GL[GL[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\n    GL[GL[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n    GL[GL[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\n    GL[GL[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\n    GL[GL[\"TEXTURE_MAG_FILTER\"] = 10240] = \"TEXTURE_MAG_FILTER\";\n    GL[GL[\"TEXTURE_MIN_FILTER\"] = 10241] = \"TEXTURE_MIN_FILTER\";\n    GL[GL[\"TEXTURE_WRAP_S\"] = 10242] = \"TEXTURE_WRAP_S\";\n    GL[GL[\"TEXTURE_WRAP_T\"] = 10243] = \"TEXTURE_WRAP_T\";\n    GL[GL[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n    GL[GL[\"TEXTURE\"] = 5890] = \"TEXTURE\";\n    GL[GL[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n    GL[GL[\"TEXTURE_BINDING_CUBE_MAP\"] = 34068] = \"TEXTURE_BINDING_CUBE_MAP\";\n    GL[GL[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n    GL[GL[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n    GL[GL[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n    GL[GL[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n    GL[GL[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n    GL[GL[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n    GL[GL[\"MAX_CUBE_MAP_TEXTURE_SIZE\"] = 34076] = \"MAX_CUBE_MAP_TEXTURE_SIZE\";\n    // TEXTURE0 - 31 0x84C0 - 0x84DF A texture unit.\n    GL[GL[\"TEXTURE0\"] = 33984] = \"TEXTURE0\";\n    GL[GL[\"ACTIVE_TEXTURE\"] = 34016] = \"ACTIVE_TEXTURE\";\n    GL[GL[\"REPEAT\"] = 10497] = \"REPEAT\";\n    GL[GL[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\n    GL[GL[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n    // Emulation\n    GL[GL[\"TEXTURE_WIDTH\"] = 4096] = \"TEXTURE_WIDTH\";\n    GL[GL[\"TEXTURE_HEIGHT\"] = 4097] = \"TEXTURE_HEIGHT\";\n    // Uniform types\n    GL[GL[\"FLOAT_VEC2\"] = 35664] = \"FLOAT_VEC2\";\n    GL[GL[\"FLOAT_VEC3\"] = 35665] = \"FLOAT_VEC3\";\n    GL[GL[\"FLOAT_VEC4\"] = 35666] = \"FLOAT_VEC4\";\n    GL[GL[\"INT_VEC2\"] = 35667] = \"INT_VEC2\";\n    GL[GL[\"INT_VEC3\"] = 35668] = \"INT_VEC3\";\n    GL[GL[\"INT_VEC4\"] = 35669] = \"INT_VEC4\";\n    GL[GL[\"BOOL\"] = 35670] = \"BOOL\";\n    GL[GL[\"BOOL_VEC2\"] = 35671] = \"BOOL_VEC2\";\n    GL[GL[\"BOOL_VEC3\"] = 35672] = \"BOOL_VEC3\";\n    GL[GL[\"BOOL_VEC4\"] = 35673] = \"BOOL_VEC4\";\n    GL[GL[\"FLOAT_MAT2\"] = 35674] = \"FLOAT_MAT2\";\n    GL[GL[\"FLOAT_MAT3\"] = 35675] = \"FLOAT_MAT3\";\n    GL[GL[\"FLOAT_MAT4\"] = 35676] = \"FLOAT_MAT4\";\n    GL[GL[\"SAMPLER_2D\"] = 35678] = \"SAMPLER_2D\";\n    GL[GL[\"SAMPLER_CUBE\"] = 35680] = \"SAMPLER_CUBE\";\n    // Shader precision-specified types\n    GL[GL[\"LOW_FLOAT\"] = 36336] = \"LOW_FLOAT\";\n    GL[GL[\"MEDIUM_FLOAT\"] = 36337] = \"MEDIUM_FLOAT\";\n    GL[GL[\"HIGH_FLOAT\"] = 36338] = \"HIGH_FLOAT\";\n    GL[GL[\"LOW_INT\"] = 36339] = \"LOW_INT\";\n    GL[GL[\"MEDIUM_INT\"] = 36340] = \"MEDIUM_INT\";\n    GL[GL[\"HIGH_INT\"] = 36341] = \"HIGH_INT\";\n    // Framebuffers and renderbuffers\n    GL[GL[\"FRAMEBUFFER\"] = 36160] = \"FRAMEBUFFER\";\n    GL[GL[\"RENDERBUFFER\"] = 36161] = \"RENDERBUFFER\";\n    GL[GL[\"RGBA4\"] = 32854] = \"RGBA4\";\n    GL[GL[\"RGB5_A1\"] = 32855] = \"RGB5_A1\";\n    GL[GL[\"RGB565\"] = 36194] = \"RGB565\";\n    GL[GL[\"DEPTH_COMPONENT16\"] = 33189] = \"DEPTH_COMPONENT16\";\n    GL[GL[\"STENCIL_INDEX\"] = 6401] = \"STENCIL_INDEX\";\n    GL[GL[\"STENCIL_INDEX8\"] = 36168] = \"STENCIL_INDEX8\";\n    GL[GL[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n    GL[GL[\"RENDERBUFFER_WIDTH\"] = 36162] = \"RENDERBUFFER_WIDTH\";\n    GL[GL[\"RENDERBUFFER_HEIGHT\"] = 36163] = \"RENDERBUFFER_HEIGHT\";\n    GL[GL[\"RENDERBUFFER_INTERNAL_FORMAT\"] = 36164] = \"RENDERBUFFER_INTERNAL_FORMAT\";\n    GL[GL[\"RENDERBUFFER_RED_SIZE\"] = 36176] = \"RENDERBUFFER_RED_SIZE\";\n    GL[GL[\"RENDERBUFFER_GREEN_SIZE\"] = 36177] = \"RENDERBUFFER_GREEN_SIZE\";\n    GL[GL[\"RENDERBUFFER_BLUE_SIZE\"] = 36178] = \"RENDERBUFFER_BLUE_SIZE\";\n    GL[GL[\"RENDERBUFFER_ALPHA_SIZE\"] = 36179] = \"RENDERBUFFER_ALPHA_SIZE\";\n    GL[GL[\"RENDERBUFFER_DEPTH_SIZE\"] = 36180] = \"RENDERBUFFER_DEPTH_SIZE\";\n    GL[GL[\"RENDERBUFFER_STENCIL_SIZE\"] = 36181] = \"RENDERBUFFER_STENCIL_SIZE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\"] = 36048] = \"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\"] = 36049] = \"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\"] = 36050] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\"] = 36051] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\";\n    GL[GL[\"COLOR_ATTACHMENT0\"] = 36064] = \"COLOR_ATTACHMENT0\";\n    GL[GL[\"DEPTH_ATTACHMENT\"] = 36096] = \"DEPTH_ATTACHMENT\";\n    GL[GL[\"STENCIL_ATTACHMENT\"] = 36128] = \"STENCIL_ATTACHMENT\";\n    GL[GL[\"DEPTH_STENCIL_ATTACHMENT\"] = 33306] = \"DEPTH_STENCIL_ATTACHMENT\";\n    GL[GL[\"NONE\"] = 0] = \"NONE\";\n    GL[GL[\"FRAMEBUFFER_COMPLETE\"] = 36053] = \"FRAMEBUFFER_COMPLETE\";\n    GL[GL[\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\"] = 36054] = \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";\n    GL[GL[\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\"] = 36055] = \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";\n    GL[GL[\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\"] = 36057] = \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";\n    GL[GL[\"FRAMEBUFFER_UNSUPPORTED\"] = 36061] = \"FRAMEBUFFER_UNSUPPORTED\";\n    GL[GL[\"FRAMEBUFFER_BINDING\"] = 36006] = \"FRAMEBUFFER_BINDING\";\n    GL[GL[\"RENDERBUFFER_BINDING\"] = 36007] = \"RENDERBUFFER_BINDING\";\n    GL[GL[\"READ_FRAMEBUFFER\"] = 36008] = \"READ_FRAMEBUFFER\";\n    GL[GL[\"DRAW_FRAMEBUFFER\"] = 36009] = \"DRAW_FRAMEBUFFER\";\n    GL[GL[\"MAX_RENDERBUFFER_SIZE\"] = 34024] = \"MAX_RENDERBUFFER_SIZE\";\n    GL[GL[\"INVALID_FRAMEBUFFER_OPERATION\"] = 1286] = \"INVALID_FRAMEBUFFER_OPERATION\";\n    // Pixel storage modes\n    // Constants passed to pixelStorei().\n    GL[GL[\"UNPACK_FLIP_Y_WEBGL\"] = 37440] = \"UNPACK_FLIP_Y_WEBGL\";\n    GL[GL[\"UNPACK_PREMULTIPLY_ALPHA_WEBGL\"] = 37441] = \"UNPACK_PREMULTIPLY_ALPHA_WEBGL\";\n    GL[GL[\"UNPACK_COLORSPACE_CONVERSION_WEBGL\"] = 37443] = \"UNPACK_COLORSPACE_CONVERSION_WEBGL\";\n    // /////////////////////////////////////////////////////\n    // Additional constants defined WebGL 2\n    // These constants are defined on the WebGL2RenderingContext interface.\n    // All WebGL 1 constants are also available in a WebGL 2 context.\n    // /////////////////////////////////////////////////////\n    // Getting GL parameter information\n    // Constants passed to getParameter()\n    // to specify what information to return.\n    GL[GL[\"READ_BUFFER\"] = 3074] = \"READ_BUFFER\";\n    GL[GL[\"UNPACK_ROW_LENGTH\"] = 3314] = \"UNPACK_ROW_LENGTH\";\n    GL[GL[\"UNPACK_SKIP_ROWS\"] = 3315] = \"UNPACK_SKIP_ROWS\";\n    GL[GL[\"UNPACK_SKIP_PIXELS\"] = 3316] = \"UNPACK_SKIP_PIXELS\";\n    GL[GL[\"PACK_ROW_LENGTH\"] = 3330] = \"PACK_ROW_LENGTH\";\n    GL[GL[\"PACK_SKIP_ROWS\"] = 3331] = \"PACK_SKIP_ROWS\";\n    GL[GL[\"PACK_SKIP_PIXELS\"] = 3332] = \"PACK_SKIP_PIXELS\";\n    GL[GL[\"TEXTURE_BINDING_3D\"] = 32874] = \"TEXTURE_BINDING_3D\";\n    GL[GL[\"UNPACK_SKIP_IMAGES\"] = 32877] = \"UNPACK_SKIP_IMAGES\";\n    GL[GL[\"UNPACK_IMAGE_HEIGHT\"] = 32878] = \"UNPACK_IMAGE_HEIGHT\";\n    GL[GL[\"MAX_3D_TEXTURE_SIZE\"] = 32883] = \"MAX_3D_TEXTURE_SIZE\";\n    GL[GL[\"MAX_ELEMENTS_VERTICES\"] = 33000] = \"MAX_ELEMENTS_VERTICES\";\n    GL[GL[\"MAX_ELEMENTS_INDICES\"] = 33001] = \"MAX_ELEMENTS_INDICES\";\n    GL[GL[\"MAX_TEXTURE_LOD_BIAS\"] = 34045] = \"MAX_TEXTURE_LOD_BIAS\";\n    GL[GL[\"MAX_FRAGMENT_UNIFORM_COMPONENTS\"] = 35657] = \"MAX_FRAGMENT_UNIFORM_COMPONENTS\";\n    GL[GL[\"MAX_VERTEX_UNIFORM_COMPONENTS\"] = 35658] = \"MAX_VERTEX_UNIFORM_COMPONENTS\";\n    GL[GL[\"MAX_ARRAY_TEXTURE_LAYERS\"] = 35071] = \"MAX_ARRAY_TEXTURE_LAYERS\";\n    GL[GL[\"MIN_PROGRAM_TEXEL_OFFSET\"] = 35076] = \"MIN_PROGRAM_TEXEL_OFFSET\";\n    GL[GL[\"MAX_PROGRAM_TEXEL_OFFSET\"] = 35077] = \"MAX_PROGRAM_TEXEL_OFFSET\";\n    GL[GL[\"MAX_VARYING_COMPONENTS\"] = 35659] = \"MAX_VARYING_COMPONENTS\";\n    GL[GL[\"FRAGMENT_SHADER_DERIVATIVE_HINT\"] = 35723] = \"FRAGMENT_SHADER_DERIVATIVE_HINT\";\n    GL[GL[\"RASTERIZER_DISCARD\"] = 35977] = \"RASTERIZER_DISCARD\";\n    GL[GL[\"VERTEX_ARRAY_BINDING\"] = 34229] = \"VERTEX_ARRAY_BINDING\";\n    GL[GL[\"MAX_VERTEX_OUTPUT_COMPONENTS\"] = 37154] = \"MAX_VERTEX_OUTPUT_COMPONENTS\";\n    GL[GL[\"MAX_FRAGMENT_INPUT_COMPONENTS\"] = 37157] = \"MAX_FRAGMENT_INPUT_COMPONENTS\";\n    GL[GL[\"MAX_SERVER_WAIT_TIMEOUT\"] = 37137] = \"MAX_SERVER_WAIT_TIMEOUT\";\n    GL[GL[\"MAX_ELEMENT_INDEX\"] = 36203] = \"MAX_ELEMENT_INDEX\";\n    // Textures\n    // Constants passed to texParameteri(),\n    // texParameterf(), bindTexture(), texImage2D(), and others.\n    GL[GL[\"RED\"] = 6403] = \"RED\";\n    GL[GL[\"RGB8\"] = 32849] = \"RGB8\";\n    GL[GL[\"RGBA8\"] = 32856] = \"RGBA8\";\n    GL[GL[\"RGB10_A2\"] = 32857] = \"RGB10_A2\";\n    GL[GL[\"TEXTURE_3D\"] = 32879] = \"TEXTURE_3D\";\n    GL[GL[\"TEXTURE_WRAP_R\"] = 32882] = \"TEXTURE_WRAP_R\";\n    GL[GL[\"TEXTURE_MIN_LOD\"] = 33082] = \"TEXTURE_MIN_LOD\";\n    GL[GL[\"TEXTURE_MAX_LOD\"] = 33083] = \"TEXTURE_MAX_LOD\";\n    GL[GL[\"TEXTURE_BASE_LEVEL\"] = 33084] = \"TEXTURE_BASE_LEVEL\";\n    GL[GL[\"TEXTURE_MAX_LEVEL\"] = 33085] = \"TEXTURE_MAX_LEVEL\";\n    GL[GL[\"TEXTURE_COMPARE_MODE\"] = 34892] = \"TEXTURE_COMPARE_MODE\";\n    GL[GL[\"TEXTURE_COMPARE_FUNC\"] = 34893] = \"TEXTURE_COMPARE_FUNC\";\n    GL[GL[\"SRGB\"] = 35904] = \"SRGB\";\n    GL[GL[\"SRGB8\"] = 35905] = \"SRGB8\";\n    GL[GL[\"SRGB8_ALPHA8\"] = 35907] = \"SRGB8_ALPHA8\";\n    GL[GL[\"COMPARE_REF_TO_TEXTURE\"] = 34894] = \"COMPARE_REF_TO_TEXTURE\";\n    GL[GL[\"RGBA32F\"] = 34836] = \"RGBA32F\";\n    GL[GL[\"RGB32F\"] = 34837] = \"RGB32F\";\n    GL[GL[\"RGBA16F\"] = 34842] = \"RGBA16F\";\n    GL[GL[\"RGB16F\"] = 34843] = \"RGB16F\";\n    GL[GL[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n    GL[GL[\"TEXTURE_BINDING_2D_ARRAY\"] = 35869] = \"TEXTURE_BINDING_2D_ARRAY\";\n    GL[GL[\"R11F_G11F_B10F\"] = 35898] = \"R11F_G11F_B10F\";\n    GL[GL[\"RGB9_E5\"] = 35901] = \"RGB9_E5\";\n    GL[GL[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\n    GL[GL[\"RGB32UI\"] = 36209] = \"RGB32UI\";\n    GL[GL[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\n    GL[GL[\"RGB16UI\"] = 36215] = \"RGB16UI\";\n    GL[GL[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\n    GL[GL[\"RGB8UI\"] = 36221] = \"RGB8UI\";\n    GL[GL[\"RGBA32I\"] = 36226] = \"RGBA32I\";\n    GL[GL[\"RGB32I\"] = 36227] = \"RGB32I\";\n    GL[GL[\"RGBA16I\"] = 36232] = \"RGBA16I\";\n    GL[GL[\"RGB16I\"] = 36233] = \"RGB16I\";\n    GL[GL[\"RGBA8I\"] = 36238] = \"RGBA8I\";\n    GL[GL[\"RGB8I\"] = 36239] = \"RGB8I\";\n    GL[GL[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n    GL[GL[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n    GL[GL[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n    GL[GL[\"R8\"] = 33321] = \"R8\";\n    GL[GL[\"RG8\"] = 33323] = \"RG8\";\n    GL[GL[\"R16F\"] = 33325] = \"R16F\";\n    GL[GL[\"R32F\"] = 33326] = \"R32F\";\n    GL[GL[\"RG16F\"] = 33327] = \"RG16F\";\n    GL[GL[\"RG32F\"] = 33328] = \"RG32F\";\n    GL[GL[\"R8I\"] = 33329] = \"R8I\";\n    GL[GL[\"R8UI\"] = 33330] = \"R8UI\";\n    GL[GL[\"R16I\"] = 33331] = \"R16I\";\n    GL[GL[\"R16UI\"] = 33332] = \"R16UI\";\n    GL[GL[\"R32I\"] = 33333] = \"R32I\";\n    GL[GL[\"R32UI\"] = 33334] = \"R32UI\";\n    GL[GL[\"RG8I\"] = 33335] = \"RG8I\";\n    GL[GL[\"RG8UI\"] = 33336] = \"RG8UI\";\n    GL[GL[\"RG16I\"] = 33337] = \"RG16I\";\n    GL[GL[\"RG16UI\"] = 33338] = \"RG16UI\";\n    GL[GL[\"RG32I\"] = 33339] = \"RG32I\";\n    GL[GL[\"RG32UI\"] = 33340] = \"RG32UI\";\n    GL[GL[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\n    GL[GL[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\n    GL[GL[\"RGB8_SNORM\"] = 36758] = \"RGB8_SNORM\";\n    GL[GL[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\n    GL[GL[\"RGB10_A2UI\"] = 36975] = \"RGB10_A2UI\";\n    /* covered by extension\n      COMPRESSED_R11_EAC  = 0x9270,\n      COMPRESSED_SIGNED_R11_EAC = 0x9271,\n      COMPRESSED_RG11_EAC = 0x9272,\n      COMPRESSED_SIGNED_RG11_EAC  = 0x9273,\n      COMPRESSED_RGB8_ETC2  = 0x9274,\n      COMPRESSED_SRGB8_ETC2 = 0x9275,\n      COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2  = 0x9276,\n      COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC  = 0x9277,\n      COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\n      COMPRESSED_SRGB8_ALPHA8_ETC2_EAC  = 0x9279,\n      */\n    GL[GL[\"TEXTURE_IMMUTABLE_FORMAT\"] = 37167] = \"TEXTURE_IMMUTABLE_FORMAT\";\n    GL[GL[\"TEXTURE_IMMUTABLE_LEVELS\"] = 33503] = \"TEXTURE_IMMUTABLE_LEVELS\";\n    // Pixel types\n    GL[GL[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n    GL[GL[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n    GL[GL[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n    GL[GL[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n    GL[GL[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n    GL[GL[\"HALF_FLOAT\"] = 5131] = \"HALF_FLOAT\";\n    GL[GL[\"RG\"] = 33319] = \"RG\";\n    GL[GL[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n    GL[GL[\"INT_2_10_10_10_REV\"] = 36255] = \"INT_2_10_10_10_REV\";\n    // Queries\n    GL[GL[\"CURRENT_QUERY\"] = 34917] = \"CURRENT_QUERY\";\n    GL[GL[\"QUERY_RESULT\"] = 34918] = \"QUERY_RESULT\";\n    GL[GL[\"QUERY_RESULT_AVAILABLE\"] = 34919] = \"QUERY_RESULT_AVAILABLE\";\n    GL[GL[\"ANY_SAMPLES_PASSED\"] = 35887] = \"ANY_SAMPLES_PASSED\";\n    GL[GL[\"ANY_SAMPLES_PASSED_CONSERVATIVE\"] = 36202] = \"ANY_SAMPLES_PASSED_CONSERVATIVE\";\n    // Draw buffers\n    GL[GL[\"MAX_DRAW_BUFFERS\"] = 34852] = \"MAX_DRAW_BUFFERS\";\n    GL[GL[\"DRAW_BUFFER0\"] = 34853] = \"DRAW_BUFFER0\";\n    GL[GL[\"DRAW_BUFFER1\"] = 34854] = \"DRAW_BUFFER1\";\n    GL[GL[\"DRAW_BUFFER2\"] = 34855] = \"DRAW_BUFFER2\";\n    GL[GL[\"DRAW_BUFFER3\"] = 34856] = \"DRAW_BUFFER3\";\n    GL[GL[\"DRAW_BUFFER4\"] = 34857] = \"DRAW_BUFFER4\";\n    GL[GL[\"DRAW_BUFFER5\"] = 34858] = \"DRAW_BUFFER5\";\n    GL[GL[\"DRAW_BUFFER6\"] = 34859] = \"DRAW_BUFFER6\";\n    GL[GL[\"DRAW_BUFFER7\"] = 34860] = \"DRAW_BUFFER7\";\n    GL[GL[\"DRAW_BUFFER8\"] = 34861] = \"DRAW_BUFFER8\";\n    GL[GL[\"DRAW_BUFFER9\"] = 34862] = \"DRAW_BUFFER9\";\n    GL[GL[\"DRAW_BUFFER10\"] = 34863] = \"DRAW_BUFFER10\";\n    GL[GL[\"DRAW_BUFFER11\"] = 34864] = \"DRAW_BUFFER11\";\n    GL[GL[\"DRAW_BUFFER12\"] = 34865] = \"DRAW_BUFFER12\";\n    GL[GL[\"DRAW_BUFFER13\"] = 34866] = \"DRAW_BUFFER13\";\n    GL[GL[\"DRAW_BUFFER14\"] = 34867] = \"DRAW_BUFFER14\";\n    GL[GL[\"DRAW_BUFFER15\"] = 34868] = \"DRAW_BUFFER15\";\n    GL[GL[\"MAX_COLOR_ATTACHMENTS\"] = 36063] = \"MAX_COLOR_ATTACHMENTS\";\n    GL[GL[\"COLOR_ATTACHMENT1\"] = 36065] = \"COLOR_ATTACHMENT1\";\n    GL[GL[\"COLOR_ATTACHMENT2\"] = 36066] = \"COLOR_ATTACHMENT2\";\n    GL[GL[\"COLOR_ATTACHMENT3\"] = 36067] = \"COLOR_ATTACHMENT3\";\n    GL[GL[\"COLOR_ATTACHMENT4\"] = 36068] = \"COLOR_ATTACHMENT4\";\n    GL[GL[\"COLOR_ATTACHMENT5\"] = 36069] = \"COLOR_ATTACHMENT5\";\n    GL[GL[\"COLOR_ATTACHMENT6\"] = 36070] = \"COLOR_ATTACHMENT6\";\n    GL[GL[\"COLOR_ATTACHMENT7\"] = 36071] = \"COLOR_ATTACHMENT7\";\n    GL[GL[\"COLOR_ATTACHMENT8\"] = 36072] = \"COLOR_ATTACHMENT8\";\n    GL[GL[\"COLOR_ATTACHMENT9\"] = 36073] = \"COLOR_ATTACHMENT9\";\n    GL[GL[\"COLOR_ATTACHMENT10\"] = 36074] = \"COLOR_ATTACHMENT10\";\n    GL[GL[\"COLOR_ATTACHMENT11\"] = 36075] = \"COLOR_ATTACHMENT11\";\n    GL[GL[\"COLOR_ATTACHMENT12\"] = 36076] = \"COLOR_ATTACHMENT12\";\n    GL[GL[\"COLOR_ATTACHMENT13\"] = 36077] = \"COLOR_ATTACHMENT13\";\n    GL[GL[\"COLOR_ATTACHMENT14\"] = 36078] = \"COLOR_ATTACHMENT14\";\n    GL[GL[\"COLOR_ATTACHMENT15\"] = 36079] = \"COLOR_ATTACHMENT15\";\n    // Samplers\n    GL[GL[\"SAMPLER_3D\"] = 35679] = \"SAMPLER_3D\";\n    GL[GL[\"SAMPLER_2D_SHADOW\"] = 35682] = \"SAMPLER_2D_SHADOW\";\n    GL[GL[\"SAMPLER_2D_ARRAY\"] = 36289] = \"SAMPLER_2D_ARRAY\";\n    GL[GL[\"SAMPLER_2D_ARRAY_SHADOW\"] = 36292] = \"SAMPLER_2D_ARRAY_SHADOW\";\n    GL[GL[\"SAMPLER_CUBE_SHADOW\"] = 36293] = \"SAMPLER_CUBE_SHADOW\";\n    GL[GL[\"INT_SAMPLER_2D\"] = 36298] = \"INT_SAMPLER_2D\";\n    GL[GL[\"INT_SAMPLER_3D\"] = 36299] = \"INT_SAMPLER_3D\";\n    GL[GL[\"INT_SAMPLER_CUBE\"] = 36300] = \"INT_SAMPLER_CUBE\";\n    GL[GL[\"INT_SAMPLER_2D_ARRAY\"] = 36303] = \"INT_SAMPLER_2D_ARRAY\";\n    GL[GL[\"UNSIGNED_INT_SAMPLER_2D\"] = 36306] = \"UNSIGNED_INT_SAMPLER_2D\";\n    GL[GL[\"UNSIGNED_INT_SAMPLER_3D\"] = 36307] = \"UNSIGNED_INT_SAMPLER_3D\";\n    GL[GL[\"UNSIGNED_INT_SAMPLER_CUBE\"] = 36308] = \"UNSIGNED_INT_SAMPLER_CUBE\";\n    GL[GL[\"UNSIGNED_INT_SAMPLER_2D_ARRAY\"] = 36311] = \"UNSIGNED_INT_SAMPLER_2D_ARRAY\";\n    GL[GL[\"MAX_SAMPLES\"] = 36183] = \"MAX_SAMPLES\";\n    GL[GL[\"SAMPLER_BINDING\"] = 35097] = \"SAMPLER_BINDING\";\n    // Buffers\n    GL[GL[\"PIXEL_PACK_BUFFER\"] = 35051] = \"PIXEL_PACK_BUFFER\";\n    GL[GL[\"PIXEL_UNPACK_BUFFER\"] = 35052] = \"PIXEL_UNPACK_BUFFER\";\n    GL[GL[\"PIXEL_PACK_BUFFER_BINDING\"] = 35053] = \"PIXEL_PACK_BUFFER_BINDING\";\n    GL[GL[\"PIXEL_UNPACK_BUFFER_BINDING\"] = 35055] = \"PIXEL_UNPACK_BUFFER_BINDING\";\n    GL[GL[\"COPY_READ_BUFFER\"] = 36662] = \"COPY_READ_BUFFER\";\n    GL[GL[\"COPY_WRITE_BUFFER\"] = 36663] = \"COPY_WRITE_BUFFER\";\n    GL[GL[\"COPY_READ_BUFFER_BINDING\"] = 36662] = \"COPY_READ_BUFFER_BINDING\";\n    GL[GL[\"COPY_WRITE_BUFFER_BINDING\"] = 36663] = \"COPY_WRITE_BUFFER_BINDING\";\n    // Data types\n    GL[GL[\"FLOAT_MAT2x3\"] = 35685] = \"FLOAT_MAT2x3\";\n    GL[GL[\"FLOAT_MAT2x4\"] = 35686] = \"FLOAT_MAT2x4\";\n    GL[GL[\"FLOAT_MAT3x2\"] = 35687] = \"FLOAT_MAT3x2\";\n    GL[GL[\"FLOAT_MAT3x4\"] = 35688] = \"FLOAT_MAT3x4\";\n    GL[GL[\"FLOAT_MAT4x2\"] = 35689] = \"FLOAT_MAT4x2\";\n    GL[GL[\"FLOAT_MAT4x3\"] = 35690] = \"FLOAT_MAT4x3\";\n    GL[GL[\"UNSIGNED_INT_VEC2\"] = 36294] = \"UNSIGNED_INT_VEC2\";\n    GL[GL[\"UNSIGNED_INT_VEC3\"] = 36295] = \"UNSIGNED_INT_VEC3\";\n    GL[GL[\"UNSIGNED_INT_VEC4\"] = 36296] = \"UNSIGNED_INT_VEC4\";\n    GL[GL[\"UNSIGNED_NORMALIZED\"] = 35863] = \"UNSIGNED_NORMALIZED\";\n    GL[GL[\"SIGNED_NORMALIZED\"] = 36764] = \"SIGNED_NORMALIZED\";\n    // Vertex attributes\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_INTEGER\"] = 35069] = \"VERTEX_ATTRIB_ARRAY_INTEGER\";\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_DIVISOR\"] = 35070] = \"VERTEX_ATTRIB_ARRAY_DIVISOR\";\n    // Transform feedback\n    GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_MODE\"] = 35967] = \"TRANSFORM_FEEDBACK_BUFFER_MODE\";\n    GL[GL[\"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\"] = 35968] = \"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\";\n    GL[GL[\"TRANSFORM_FEEDBACK_VARYINGS\"] = 35971] = \"TRANSFORM_FEEDBACK_VARYINGS\";\n    GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_START\"] = 35972] = \"TRANSFORM_FEEDBACK_BUFFER_START\";\n    GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_SIZE\"] = 35973] = \"TRANSFORM_FEEDBACK_BUFFER_SIZE\";\n    GL[GL[\"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\"] = 35976] = \"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\";\n    GL[GL[\"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\"] = 35978] = \"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\";\n    GL[GL[\"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\"] = 35979] = \"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\";\n    GL[GL[\"INTERLEAVED_ATTRIBS\"] = 35980] = \"INTERLEAVED_ATTRIBS\";\n    GL[GL[\"SEPARATE_ATTRIBS\"] = 35981] = \"SEPARATE_ATTRIBS\";\n    GL[GL[\"TRANSFORM_FEEDBACK_BUFFER\"] = 35982] = \"TRANSFORM_FEEDBACK_BUFFER\";\n    GL[GL[\"TRANSFORM_FEEDBACK_BUFFER_BINDING\"] = 35983] = \"TRANSFORM_FEEDBACK_BUFFER_BINDING\";\n    GL[GL[\"TRANSFORM_FEEDBACK\"] = 36386] = \"TRANSFORM_FEEDBACK\";\n    GL[GL[\"TRANSFORM_FEEDBACK_PAUSED\"] = 36387] = \"TRANSFORM_FEEDBACK_PAUSED\";\n    GL[GL[\"TRANSFORM_FEEDBACK_ACTIVE\"] = 36388] = \"TRANSFORM_FEEDBACK_ACTIVE\";\n    GL[GL[\"TRANSFORM_FEEDBACK_BINDING\"] = 36389] = \"TRANSFORM_FEEDBACK_BINDING\";\n    // Framebuffers and renderbuffers\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\"] = 33296] = \"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\"] = 33297] = \"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_RED_SIZE\"] = 33298] = \"FRAMEBUFFER_ATTACHMENT_RED_SIZE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\"] = 33299] = \"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\"] = 33300] = \"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\"] = 33301] = \"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\"] = 33302] = \"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\"] = 33303] = \"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\";\n    GL[GL[\"FRAMEBUFFER_DEFAULT\"] = 33304] = \"FRAMEBUFFER_DEFAULT\";\n    // DEPTH_STENCIL_ATTACHMENT  = 0x821A,\n    // DEPTH_STENCIL = 0x84F9,\n    GL[GL[\"DEPTH24_STENCIL8\"] = 35056] = \"DEPTH24_STENCIL8\";\n    GL[GL[\"DRAW_FRAMEBUFFER_BINDING\"] = 36006] = \"DRAW_FRAMEBUFFER_BINDING\";\n    GL[GL[\"READ_FRAMEBUFFER_BINDING\"] = 36010] = \"READ_FRAMEBUFFER_BINDING\";\n    GL[GL[\"RENDERBUFFER_SAMPLES\"] = 36011] = \"RENDERBUFFER_SAMPLES\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\"] = 36052] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\";\n    GL[GL[\"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\"] = 36182] = \"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\";\n    // Uniforms\n    GL[GL[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n    GL[GL[\"UNIFORM_BUFFER_BINDING\"] = 35368] = \"UNIFORM_BUFFER_BINDING\";\n    GL[GL[\"UNIFORM_BUFFER_START\"] = 35369] = \"UNIFORM_BUFFER_START\";\n    GL[GL[\"UNIFORM_BUFFER_SIZE\"] = 35370] = \"UNIFORM_BUFFER_SIZE\";\n    GL[GL[\"MAX_VERTEX_UNIFORM_BLOCKS\"] = 35371] = \"MAX_VERTEX_UNIFORM_BLOCKS\";\n    GL[GL[\"MAX_FRAGMENT_UNIFORM_BLOCKS\"] = 35373] = \"MAX_FRAGMENT_UNIFORM_BLOCKS\";\n    GL[GL[\"MAX_COMBINED_UNIFORM_BLOCKS\"] = 35374] = \"MAX_COMBINED_UNIFORM_BLOCKS\";\n    GL[GL[\"MAX_UNIFORM_BUFFER_BINDINGS\"] = 35375] = \"MAX_UNIFORM_BUFFER_BINDINGS\";\n    GL[GL[\"MAX_UNIFORM_BLOCK_SIZE\"] = 35376] = \"MAX_UNIFORM_BLOCK_SIZE\";\n    GL[GL[\"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\"] = 35377] = \"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\";\n    GL[GL[\"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\"] = 35379] = \"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\";\n    GL[GL[\"UNIFORM_BUFFER_OFFSET_ALIGNMENT\"] = 35380] = \"UNIFORM_BUFFER_OFFSET_ALIGNMENT\";\n    GL[GL[\"ACTIVE_UNIFORM_BLOCKS\"] = 35382] = \"ACTIVE_UNIFORM_BLOCKS\";\n    GL[GL[\"UNIFORM_TYPE\"] = 35383] = \"UNIFORM_TYPE\";\n    GL[GL[\"UNIFORM_SIZE\"] = 35384] = \"UNIFORM_SIZE\";\n    GL[GL[\"UNIFORM_BLOCK_INDEX\"] = 35386] = \"UNIFORM_BLOCK_INDEX\";\n    GL[GL[\"UNIFORM_OFFSET\"] = 35387] = \"UNIFORM_OFFSET\";\n    GL[GL[\"UNIFORM_ARRAY_STRIDE\"] = 35388] = \"UNIFORM_ARRAY_STRIDE\";\n    GL[GL[\"UNIFORM_MATRIX_STRIDE\"] = 35389] = \"UNIFORM_MATRIX_STRIDE\";\n    GL[GL[\"UNIFORM_IS_ROW_MAJOR\"] = 35390] = \"UNIFORM_IS_ROW_MAJOR\";\n    GL[GL[\"UNIFORM_BLOCK_BINDING\"] = 35391] = \"UNIFORM_BLOCK_BINDING\";\n    GL[GL[\"UNIFORM_BLOCK_DATA_SIZE\"] = 35392] = \"UNIFORM_BLOCK_DATA_SIZE\";\n    GL[GL[\"UNIFORM_BLOCK_ACTIVE_UNIFORMS\"] = 35394] = \"UNIFORM_BLOCK_ACTIVE_UNIFORMS\";\n    GL[GL[\"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\"] = 35395] = \"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\";\n    GL[GL[\"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\"] = 35396] = \"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\";\n    GL[GL[\"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\"] = 35398] = \"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\";\n    // Sync objects\n    GL[GL[\"OBJECT_TYPE\"] = 37138] = \"OBJECT_TYPE\";\n    GL[GL[\"SYNC_CONDITION\"] = 37139] = \"SYNC_CONDITION\";\n    GL[GL[\"SYNC_STATUS\"] = 37140] = \"SYNC_STATUS\";\n    GL[GL[\"SYNC_FLAGS\"] = 37141] = \"SYNC_FLAGS\";\n    GL[GL[\"SYNC_FENCE\"] = 37142] = \"SYNC_FENCE\";\n    GL[GL[\"SYNC_GPU_COMMANDS_COMPLETE\"] = 37143] = \"SYNC_GPU_COMMANDS_COMPLETE\";\n    GL[GL[\"UNSIGNALED\"] = 37144] = \"UNSIGNALED\";\n    GL[GL[\"SIGNALED\"] = 37145] = \"SIGNALED\";\n    GL[GL[\"ALREADY_SIGNALED\"] = 37146] = \"ALREADY_SIGNALED\";\n    GL[GL[\"TIMEOUT_EXPIRED\"] = 37147] = \"TIMEOUT_EXPIRED\";\n    GL[GL[\"CONDITION_SATISFIED\"] = 37148] = \"CONDITION_SATISFIED\";\n    GL[GL[\"WAIT_FAILED\"] = 37149] = \"WAIT_FAILED\";\n    GL[GL[\"SYNC_FLUSH_COMMANDS_BIT\"] = 1] = \"SYNC_FLUSH_COMMANDS_BIT\";\n    // Miscellaneous constants\n    GL[GL[\"COLOR\"] = 6144] = \"COLOR\";\n    GL[GL[\"DEPTH\"] = 6145] = \"DEPTH\";\n    GL[GL[\"STENCIL\"] = 6146] = \"STENCIL\";\n    GL[GL[\"MIN\"] = 32775] = \"MIN\";\n    GL[GL[\"MAX\"] = 32776] = \"MAX\";\n    GL[GL[\"DEPTH_COMPONENT24\"] = 33190] = \"DEPTH_COMPONENT24\";\n    GL[GL[\"STREAM_READ\"] = 35041] = \"STREAM_READ\";\n    GL[GL[\"STREAM_COPY\"] = 35042] = \"STREAM_COPY\";\n    GL[GL[\"STATIC_READ\"] = 35045] = \"STATIC_READ\";\n    GL[GL[\"STATIC_COPY\"] = 35046] = \"STATIC_COPY\";\n    GL[GL[\"DYNAMIC_READ\"] = 35049] = \"DYNAMIC_READ\";\n    GL[GL[\"DYNAMIC_COPY\"] = 35050] = \"DYNAMIC_COPY\";\n    GL[GL[\"DEPTH_COMPONENT32F\"] = 36012] = \"DEPTH_COMPONENT32F\";\n    GL[GL[\"DEPTH32F_STENCIL8\"] = 36013] = \"DEPTH32F_STENCIL8\";\n    GL[GL[\"INVALID_INDEX\"] = 4294967295] = \"INVALID_INDEX\";\n    GL[GL[\"TIMEOUT_IGNORED\"] = -1] = \"TIMEOUT_IGNORED\";\n    GL[GL[\"MAX_CLIENT_WAIT_TIMEOUT_WEBGL\"] = 37447] = \"MAX_CLIENT_WAIT_TIMEOUT_WEBGL\";\n    // Constants defined in WebGL extensions\n    // ANGLE_instanced_arrays\n    GL[GL[\"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\"] = 35070] = \"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\";\n    // WEBGL_debug_renderer_info\n    GL[GL[\"UNMASKED_VENDOR_WEBGL\"] = 37445] = \"UNMASKED_VENDOR_WEBGL\";\n    GL[GL[\"UNMASKED_RENDERER_WEBGL\"] = 37446] = \"UNMASKED_RENDERER_WEBGL\";\n    // EXT_texture_filter_anisotropic\n    GL[GL[\"MAX_TEXTURE_MAX_ANISOTROPY_EXT\"] = 34047] = \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\";\n    GL[GL[\"TEXTURE_MAX_ANISOTROPY_EXT\"] = 34046] = \"TEXTURE_MAX_ANISOTROPY_EXT\";\n    // WEBGL_compressed_texture_s3tc\n    GL[GL[\"COMPRESSED_RGB_S3TC_DXT1_EXT\"] = 33776] = \"COMPRESSED_RGB_S3TC_DXT1_EXT\";\n    GL[GL[\"COMPRESSED_RGBA_S3TC_DXT1_EXT\"] = 33777] = \"COMPRESSED_RGBA_S3TC_DXT1_EXT\";\n    GL[GL[\"COMPRESSED_RGBA_S3TC_DXT3_EXT\"] = 33778] = \"COMPRESSED_RGBA_S3TC_DXT3_EXT\";\n    GL[GL[\"COMPRESSED_RGBA_S3TC_DXT5_EXT\"] = 33779] = \"COMPRESSED_RGBA_S3TC_DXT5_EXT\";\n    // WEBGL_compressed_texture_es3\n    GL[GL[\"COMPRESSED_R11_EAC\"] = 37488] = \"COMPRESSED_R11_EAC\";\n    GL[GL[\"COMPRESSED_SIGNED_R11_EAC\"] = 37489] = \"COMPRESSED_SIGNED_R11_EAC\";\n    GL[GL[\"COMPRESSED_RG11_EAC\"] = 37490] = \"COMPRESSED_RG11_EAC\";\n    GL[GL[\"COMPRESSED_SIGNED_RG11_EAC\"] = 37491] = \"COMPRESSED_SIGNED_RG11_EAC\";\n    GL[GL[\"COMPRESSED_RGB8_ETC2\"] = 37492] = \"COMPRESSED_RGB8_ETC2\";\n    GL[GL[\"COMPRESSED_RGBA8_ETC2_EAC\"] = 37493] = \"COMPRESSED_RGBA8_ETC2_EAC\";\n    GL[GL[\"COMPRESSED_SRGB8_ETC2\"] = 37494] = \"COMPRESSED_SRGB8_ETC2\";\n    GL[GL[\"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\"] = 37495] = \"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\";\n    GL[GL[\"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\"] = 37496] = \"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\";\n    GL[GL[\"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\"] = 37497] = \"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\";\n    // WEBGL_compressed_texture_pvrtc\n    GL[GL[\"COMPRESSED_RGB_PVRTC_4BPPV1_IMG\"] = 35840] = \"COMPRESSED_RGB_PVRTC_4BPPV1_IMG\";\n    GL[GL[\"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\"] = 35842] = \"COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\";\n    GL[GL[\"COMPRESSED_RGB_PVRTC_2BPPV1_IMG\"] = 35841] = \"COMPRESSED_RGB_PVRTC_2BPPV1_IMG\";\n    GL[GL[\"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\"] = 35843] = \"COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\";\n    // WEBGL_compressed_texture_etc1\n    GL[GL[\"COMPRESSED_RGB_ETC1_WEBGL\"] = 36196] = \"COMPRESSED_RGB_ETC1_WEBGL\";\n    // WEBGL_compressed_texture_atc\n    GL[GL[\"COMPRESSED_RGB_ATC_WEBGL\"] = 35986] = \"COMPRESSED_RGB_ATC_WEBGL\";\n    GL[GL[\"COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL\"] = 35986] = \"COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL\";\n    GL[GL[\"COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\"] = 34798] = \"COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\";\n    // WEBGL_depth_texture\n    GL[GL[\"UNSIGNED_INT_24_8_WEBGL\"] = 34042] = \"UNSIGNED_INT_24_8_WEBGL\";\n    // OES_texture_half_float\n    GL[GL[\"HALF_FLOAT_OES\"] = 36193] = \"HALF_FLOAT_OES\";\n    // WEBGL_color_buffer_float\n    GL[GL[\"RGBA32F_EXT\"] = 34836] = \"RGBA32F_EXT\";\n    GL[GL[\"RGB32F_EXT\"] = 34837] = \"RGB32F_EXT\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT\"] = 33297] = \"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT\";\n    GL[GL[\"UNSIGNED_NORMALIZED_EXT\"] = 35863] = \"UNSIGNED_NORMALIZED_EXT\";\n    // EXT_blend_minmax\n    GL[GL[\"MIN_EXT\"] = 32775] = \"MIN_EXT\";\n    GL[GL[\"MAX_EXT\"] = 32776] = \"MAX_EXT\";\n    // EXT_sRGB\n    GL[GL[\"SRGB_EXT\"] = 35904] = \"SRGB_EXT\";\n    GL[GL[\"SRGB_ALPHA_EXT\"] = 35906] = \"SRGB_ALPHA_EXT\";\n    GL[GL[\"SRGB8_ALPHA8_EXT\"] = 35907] = \"SRGB8_ALPHA8_EXT\";\n    GL[GL[\"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT\"] = 33296] = \"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT\";\n    // OES_standard_derivatives\n    GL[GL[\"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\"] = 35723] = \"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\";\n    // WEBGL_draw_buffers\n    GL[GL[\"COLOR_ATTACHMENT0_WEBGL\"] = 36064] = \"COLOR_ATTACHMENT0_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT1_WEBGL\"] = 36065] = \"COLOR_ATTACHMENT1_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT2_WEBGL\"] = 36066] = \"COLOR_ATTACHMENT2_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT3_WEBGL\"] = 36067] = \"COLOR_ATTACHMENT3_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT4_WEBGL\"] = 36068] = \"COLOR_ATTACHMENT4_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT5_WEBGL\"] = 36069] = \"COLOR_ATTACHMENT5_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT6_WEBGL\"] = 36070] = \"COLOR_ATTACHMENT6_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT7_WEBGL\"] = 36071] = \"COLOR_ATTACHMENT7_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT8_WEBGL\"] = 36072] = \"COLOR_ATTACHMENT8_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT9_WEBGL\"] = 36073] = \"COLOR_ATTACHMENT9_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT10_WEBGL\"] = 36074] = \"COLOR_ATTACHMENT10_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT11_WEBGL\"] = 36075] = \"COLOR_ATTACHMENT11_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT12_WEBGL\"] = 36076] = \"COLOR_ATTACHMENT12_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT13_WEBGL\"] = 36077] = \"COLOR_ATTACHMENT13_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT14_WEBGL\"] = 36078] = \"COLOR_ATTACHMENT14_WEBGL\";\n    GL[GL[\"COLOR_ATTACHMENT15_WEBGL\"] = 36079] = \"COLOR_ATTACHMENT15_WEBGL\";\n    GL[GL[\"DRAW_BUFFER0_WEBGL\"] = 34853] = \"DRAW_BUFFER0_WEBGL\";\n    GL[GL[\"DRAW_BUFFER1_WEBGL\"] = 34854] = \"DRAW_BUFFER1_WEBGL\";\n    GL[GL[\"DRAW_BUFFER2_WEBGL\"] = 34855] = \"DRAW_BUFFER2_WEBGL\";\n    GL[GL[\"DRAW_BUFFER3_WEBGL\"] = 34856] = \"DRAW_BUFFER3_WEBGL\";\n    GL[GL[\"DRAW_BUFFER4_WEBGL\"] = 34857] = \"DRAW_BUFFER4_WEBGL\";\n    GL[GL[\"DRAW_BUFFER5_WEBGL\"] = 34858] = \"DRAW_BUFFER5_WEBGL\";\n    GL[GL[\"DRAW_BUFFER6_WEBGL\"] = 34859] = \"DRAW_BUFFER6_WEBGL\";\n    GL[GL[\"DRAW_BUFFER7_WEBGL\"] = 34860] = \"DRAW_BUFFER7_WEBGL\";\n    GL[GL[\"DRAW_BUFFER8_WEBGL\"] = 34861] = \"DRAW_BUFFER8_WEBGL\";\n    GL[GL[\"DRAW_BUFFER9_WEBGL\"] = 34862] = \"DRAW_BUFFER9_WEBGL\";\n    GL[GL[\"DRAW_BUFFER10_WEBGL\"] = 34863] = \"DRAW_BUFFER10_WEBGL\";\n    GL[GL[\"DRAW_BUFFER11_WEBGL\"] = 34864] = \"DRAW_BUFFER11_WEBGL\";\n    GL[GL[\"DRAW_BUFFER12_WEBGL\"] = 34865] = \"DRAW_BUFFER12_WEBGL\";\n    GL[GL[\"DRAW_BUFFER13_WEBGL\"] = 34866] = \"DRAW_BUFFER13_WEBGL\";\n    GL[GL[\"DRAW_BUFFER14_WEBGL\"] = 34867] = \"DRAW_BUFFER14_WEBGL\";\n    GL[GL[\"DRAW_BUFFER15_WEBGL\"] = 34868] = \"DRAW_BUFFER15_WEBGL\";\n    GL[GL[\"MAX_COLOR_ATTACHMENTS_WEBGL\"] = 36063] = \"MAX_COLOR_ATTACHMENTS_WEBGL\";\n    GL[GL[\"MAX_DRAW_BUFFERS_WEBGL\"] = 34852] = \"MAX_DRAW_BUFFERS_WEBGL\";\n    // OES_vertex_array_object\n    GL[GL[\"VERTEX_ARRAY_BINDING_OES\"] = 34229] = \"VERTEX_ARRAY_BINDING_OES\";\n    // EXT_disjoint_timer_query\n    GL[GL[\"QUERY_COUNTER_BITS_EXT\"] = 34916] = \"QUERY_COUNTER_BITS_EXT\";\n    GL[GL[\"CURRENT_QUERY_EXT\"] = 34917] = \"CURRENT_QUERY_EXT\";\n    GL[GL[\"QUERY_RESULT_EXT\"] = 34918] = \"QUERY_RESULT_EXT\";\n    GL[GL[\"QUERY_RESULT_AVAILABLE_EXT\"] = 34919] = \"QUERY_RESULT_AVAILABLE_EXT\";\n    GL[GL[\"TIME_ELAPSED_EXT\"] = 35007] = \"TIME_ELAPSED_EXT\";\n    GL[GL[\"TIMESTAMP_EXT\"] = 36392] = \"TIMESTAMP_EXT\";\n    GL[GL[\"GPU_DISJOINT_EXT\"] = 36795] = \"GPU_DISJOINT_EXT\";\n})(GL || (GL = {}));\n\nvar ResourceType;\n(function (ResourceType) {\n    ResourceType[ResourceType[\"Buffer\"] = 0] = \"Buffer\";\n    ResourceType[ResourceType[\"Texture\"] = 1] = \"Texture\";\n    ResourceType[ResourceType[\"RenderTarget\"] = 2] = \"RenderTarget\";\n    ResourceType[ResourceType[\"Sampler\"] = 3] = \"Sampler\";\n    ResourceType[ResourceType[\"Program\"] = 4] = \"Program\";\n    ResourceType[ResourceType[\"Bindings\"] = 5] = \"Bindings\";\n    ResourceType[ResourceType[\"InputLayout\"] = 6] = \"InputLayout\";\n    ResourceType[ResourceType[\"RenderPipeline\"] = 7] = \"RenderPipeline\";\n    ResourceType[ResourceType[\"ComputePipeline\"] = 8] = \"ComputePipeline\";\n    ResourceType[ResourceType[\"Readback\"] = 9] = \"Readback\";\n    ResourceType[ResourceType[\"QueryPool\"] = 10] = \"QueryPool\";\n    ResourceType[ResourceType[\"RenderBundle\"] = 11] = \"RenderBundle\";\n})(ResourceType || (ResourceType = {}));\nvar CompareFunction;\n(function (CompareFunction) {\n    CompareFunction[CompareFunction[\"NEVER\"] = 512] = \"NEVER\";\n    CompareFunction[CompareFunction[\"LESS\"] = 513] = \"LESS\";\n    CompareFunction[CompareFunction[\"EQUAL\"] = 514] = \"EQUAL\";\n    CompareFunction[CompareFunction[\"LEQUAL\"] = 515] = \"LEQUAL\";\n    CompareFunction[CompareFunction[\"GREATER\"] = 516] = \"GREATER\";\n    CompareFunction[CompareFunction[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\n    CompareFunction[CompareFunction[\"GEQUAL\"] = 518] = \"GEQUAL\";\n    CompareFunction[CompareFunction[\"ALWAYS\"] = 519] = \"ALWAYS\";\n})(CompareFunction || (CompareFunction = {}));\nvar FrontFace;\n(function (FrontFace) {\n    FrontFace[FrontFace[\"CCW\"] = 2305] = \"CCW\";\n    FrontFace[FrontFace[\"CW\"] = 2304] = \"CW\";\n})(FrontFace || (FrontFace = {}));\nvar CullMode;\n(function (CullMode) {\n    CullMode[CullMode[\"NONE\"] = 0] = \"NONE\";\n    CullMode[CullMode[\"FRONT\"] = 1] = \"FRONT\";\n    CullMode[CullMode[\"BACK\"] = 2] = \"BACK\";\n    CullMode[CullMode[\"FRONT_AND_BACK\"] = 3] = \"FRONT_AND_BACK\";\n})(CullMode || (CullMode = {}));\n/**\n * Blend factor RGBA components.\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendfactor\n */\nvar BlendFactor;\n(function (BlendFactor) {\n    /**\n     * (0, 0, 0, 0)\n     */\n    BlendFactor[BlendFactor[\"ZERO\"] = 0] = \"ZERO\";\n    /**\n     * (1, 1, 1, 1)\n     */\n    BlendFactor[BlendFactor[\"ONE\"] = 1] = \"ONE\";\n    /**\n     * (Rsrc, Gsrc, Bsrc, Asrc)\n     */\n    BlendFactor[BlendFactor[\"SRC\"] = 768] = \"SRC\";\n    /**\n     * (1 - Rsrc, 1 - Gsrc, 1 - Bsrc, 1 - Asrc)\n     */\n    BlendFactor[BlendFactor[\"ONE_MINUS_SRC\"] = 769] = \"ONE_MINUS_SRC\";\n    /**\n     * (Rdst, Gdst, Bdst, Adst)\n     */\n    BlendFactor[BlendFactor[\"DST\"] = 774] = \"DST\";\n    /**\n     * (1 - Rdst, 1 - Gdst, 1 - Bdst, 1 - Adst)\n     */\n    BlendFactor[BlendFactor[\"ONE_MINUS_DST\"] = 775] = \"ONE_MINUS_DST\";\n    /**\n     * (Asrc, Asrc, Asrc, Asrc)\n     */\n    BlendFactor[BlendFactor[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    /**\n     * (1 - Asrc, 1 - Asrc, 1 - Asrc, 1 - Asrc)\n     */\n    BlendFactor[BlendFactor[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    /**\n     * (Adst, Adst, Adst, Adst)\n     */\n    BlendFactor[BlendFactor[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n    /**\n     * (1 - Adst, 1 - Adst, 1 - Adst, 1 - Adst)\n     */\n    BlendFactor[BlendFactor[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n    /**\n     * (Rconst, Gconst, Bconst, Aconst)\n     */\n    BlendFactor[BlendFactor[\"CONST\"] = 32769] = \"CONST\";\n    /**\n     * (1 - Rconst, 1 - Gconst, 1 - Bconst, 1 - Aconst)\n     */\n    BlendFactor[BlendFactor[\"ONE_MINUS_CONSTANT\"] = 32770] = \"ONE_MINUS_CONSTANT\";\n    /**\n     * (min(Asrc, 1 - Adst), min(Asrc, 1 - Adst), min(Asrc, 1 - Adst), 1)\n     */\n    BlendFactor[BlendFactor[\"SRC_ALPHA_SATURATE\"] = 776] = \"SRC_ALPHA_SATURATE\";\n})(BlendFactor || (BlendFactor = {}));\n/**\n * Defines the algorithm used to combine source and destination blend factors.\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendoperation\n */\nvar BlendMode;\n(function (BlendMode) {\n    /**\n     * RGBAsrc × RGBAsrcFactor + RGBAdst × RGBAdstFactor\n     */\n    BlendMode[BlendMode[\"ADD\"] = 32774] = \"ADD\";\n    /**\n     * RGBAsrc × RGBAsrcFactor - RGBAdst × RGBAdstFactor\n     */\n    BlendMode[BlendMode[\"SUBSTRACT\"] = 32778] = \"SUBSTRACT\";\n    /**\n     * RGBAdst × RGBAdstFactor - RGBAsrc × RGBAsrcFactor\n     */\n    BlendMode[BlendMode[\"REVERSE_SUBSTRACT\"] = 32779] = \"REVERSE_SUBSTRACT\";\n    // TODO: WebGL 1 should use ext\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation#parameters\n    /**\n     * min(RGBAsrc, RGBAdst)\n     */\n    BlendMode[BlendMode[\"MIN\"] = 32775] = \"MIN\";\n    /**\n     * max(RGBAsrc, RGBAdst)\n     */\n    BlendMode[BlendMode[\"MAX\"] = 32776] = \"MAX\";\n})(BlendMode || (BlendMode = {}));\nvar AddressMode;\n(function (AddressMode) {\n    AddressMode[AddressMode[\"CLAMP_TO_EDGE\"] = 0] = \"CLAMP_TO_EDGE\";\n    AddressMode[AddressMode[\"REPEAT\"] = 1] = \"REPEAT\";\n    AddressMode[AddressMode[\"MIRRORED_REPEAT\"] = 2] = \"MIRRORED_REPEAT\";\n})(AddressMode || (AddressMode = {}));\nvar FilterMode;\n(function (FilterMode) {\n    FilterMode[FilterMode[\"POINT\"] = 0] = \"POINT\";\n    FilterMode[FilterMode[\"BILINEAR\"] = 1] = \"BILINEAR\";\n})(FilterMode || (FilterMode = {}));\nvar MipmapFilterMode;\n(function (MipmapFilterMode) {\n    MipmapFilterMode[MipmapFilterMode[\"NO_MIP\"] = 0] = \"NO_MIP\";\n    MipmapFilterMode[MipmapFilterMode[\"NEAREST\"] = 1] = \"NEAREST\";\n    MipmapFilterMode[MipmapFilterMode[\"LINEAR\"] = 2] = \"LINEAR\";\n})(MipmapFilterMode || (MipmapFilterMode = {}));\nvar PrimitiveTopology;\n(function (PrimitiveTopology) {\n    PrimitiveTopology[PrimitiveTopology[\"POINTS\"] = 0] = \"POINTS\";\n    PrimitiveTopology[PrimitiveTopology[\"TRIANGLES\"] = 1] = \"TRIANGLES\";\n    PrimitiveTopology[PrimitiveTopology[\"TRIANGLE_STRIP\"] = 2] = \"TRIANGLE_STRIP\";\n    PrimitiveTopology[PrimitiveTopology[\"LINES\"] = 3] = \"LINES\";\n    PrimitiveTopology[PrimitiveTopology[\"LINE_STRIP\"] = 4] = \"LINE_STRIP\";\n})(PrimitiveTopology || (PrimitiveTopology = {}));\n/**\n * @see https://www.w3.org/TR/webgpu/#buffer-usage\n */\nvar BufferUsage;\n(function (BufferUsage) {\n    BufferUsage[BufferUsage[\"MAP_READ\"] = 1] = \"MAP_READ\";\n    BufferUsage[BufferUsage[\"MAP_WRITE\"] = 2] = \"MAP_WRITE\";\n    BufferUsage[BufferUsage[\"COPY_SRC\"] = 4] = \"COPY_SRC\";\n    BufferUsage[BufferUsage[\"COPY_DST\"] = 8] = \"COPY_DST\";\n    BufferUsage[BufferUsage[\"INDEX\"] = 16] = \"INDEX\";\n    BufferUsage[BufferUsage[\"VERTEX\"] = 32] = \"VERTEX\";\n    BufferUsage[BufferUsage[\"UNIFORM\"] = 64] = \"UNIFORM\";\n    BufferUsage[BufferUsage[\"STORAGE\"] = 128] = \"STORAGE\";\n    BufferUsage[BufferUsage[\"INDIRECT\"] = 256] = \"INDIRECT\";\n    BufferUsage[BufferUsage[\"QUERY_RESOLVE\"] = 512] = \"QUERY_RESOLVE\";\n})(BufferUsage || (BufferUsage = {}));\nvar BufferFrequencyHint;\n(function (BufferFrequencyHint) {\n    BufferFrequencyHint[BufferFrequencyHint[\"STATIC\"] = 1] = \"STATIC\";\n    BufferFrequencyHint[BufferFrequencyHint[\"DYNAMIC\"] = 2] = \"DYNAMIC\";\n})(BufferFrequencyHint || (BufferFrequencyHint = {}));\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpuvertexstepmode\n */\nvar VertexStepMode;\n(function (VertexStepMode) {\n    VertexStepMode[VertexStepMode[\"VERTEX\"] = 1] = \"VERTEX\";\n    VertexStepMode[VertexStepMode[\"INSTANCE\"] = 2] = \"INSTANCE\";\n})(VertexStepMode || (VertexStepMode = {}));\nvar TextureEvent;\n(function (TextureEvent) {\n    TextureEvent[\"LOADED\"] = \"loaded\";\n})(TextureEvent || (TextureEvent = {}));\nvar TextureDimension;\n(function (TextureDimension) {\n    TextureDimension[TextureDimension[\"TEXTURE_2D\"] = 0] = \"TEXTURE_2D\";\n    TextureDimension[TextureDimension[\"TEXTURE_2D_ARRAY\"] = 1] = \"TEXTURE_2D_ARRAY\";\n    TextureDimension[TextureDimension[\"TEXTURE_3D\"] = 2] = \"TEXTURE_3D\";\n    TextureDimension[TextureDimension[\"TEXTURE_CUBE_MAP\"] = 3] = \"TEXTURE_CUBE_MAP\";\n})(TextureDimension || (TextureDimension = {}));\nvar TextureUsage;\n(function (TextureUsage) {\n    TextureUsage[TextureUsage[\"SAMPLED\"] = 1] = \"SAMPLED\";\n    TextureUsage[TextureUsage[\"RENDER_TARGET\"] = 2] = \"RENDER_TARGET\";\n    TextureUsage[TextureUsage[\"STORAGE\"] = 4] = \"STORAGE\";\n})(TextureUsage || (TextureUsage = {}));\nvar ChannelWriteMask;\n(function (ChannelWriteMask) {\n    ChannelWriteMask[ChannelWriteMask[\"NONE\"] = 0] = \"NONE\";\n    ChannelWriteMask[ChannelWriteMask[\"RED\"] = 1] = \"RED\";\n    ChannelWriteMask[ChannelWriteMask[\"GREEN\"] = 2] = \"GREEN\";\n    ChannelWriteMask[ChannelWriteMask[\"BLUE\"] = 4] = \"BLUE\";\n    ChannelWriteMask[ChannelWriteMask[\"ALPHA\"] = 8] = \"ALPHA\";\n    ChannelWriteMask[ChannelWriteMask[\"RGB\"] = 7] = \"RGB\";\n    ChannelWriteMask[ChannelWriteMask[\"ALL\"] = 15] = \"ALL\";\n})(ChannelWriteMask || (ChannelWriteMask = {}));\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpustenciloperation\n */\nvar StencilOp;\n(function (StencilOp) {\n    StencilOp[StencilOp[\"KEEP\"] = 7680] = \"KEEP\";\n    StencilOp[StencilOp[\"ZERO\"] = 0] = \"ZERO\";\n    StencilOp[StencilOp[\"REPLACE\"] = 7681] = \"REPLACE\";\n    StencilOp[StencilOp[\"INVERT\"] = 5386] = \"INVERT\";\n    StencilOp[StencilOp[\"INCREMENT_CLAMP\"] = 7682] = \"INCREMENT_CLAMP\";\n    StencilOp[StencilOp[\"DECREMENT_CLAMP\"] = 7683] = \"DECREMENT_CLAMP\";\n    StencilOp[StencilOp[\"INCREMENT_WRAP\"] = 34055] = \"INCREMENT_WRAP\";\n    StencilOp[StencilOp[\"DECREMENT_WRAP\"] = 34056] = \"DECREMENT_WRAP\";\n})(StencilOp || (StencilOp = {}));\nfunction makeTextureDescriptor2D(format, width, height, mipLevelCount) {\n    var dimension = TextureDimension.TEXTURE_2D;\n    var depthOrArrayLayers = 1;\n    var usage = TextureUsage.SAMPLED;\n    return {\n        dimension: dimension,\n        format: format,\n        width: width,\n        height: height,\n        depthOrArrayLayers: depthOrArrayLayers,\n        mipLevelCount: mipLevelCount,\n        usage: usage,\n    };\n}\nvar SamplerFormatKind;\n(function (SamplerFormatKind) {\n    SamplerFormatKind[SamplerFormatKind[\"Float\"] = 0] = \"Float\";\n    SamplerFormatKind[SamplerFormatKind[\"UnfilterableFloat\"] = 1] = \"UnfilterableFloat\";\n    SamplerFormatKind[SamplerFormatKind[\"Uint\"] = 2] = \"Uint\";\n    SamplerFormatKind[SamplerFormatKind[\"Sint\"] = 3] = \"Sint\";\n    SamplerFormatKind[SamplerFormatKind[\"Depth\"] = 4] = \"Depth\";\n})(SamplerFormatKind || (SamplerFormatKind = {}));\nvar ViewportOrigin;\n(function (ViewportOrigin) {\n    ViewportOrigin[ViewportOrigin[\"LOWER_LEFT\"] = 0] = \"LOWER_LEFT\";\n    ViewportOrigin[ViewportOrigin[\"UPPER_LEFT\"] = 1] = \"UPPER_LEFT\";\n})(ViewportOrigin || (ViewportOrigin = {}));\nvar ClipSpaceNearZ;\n(function (ClipSpaceNearZ) {\n    ClipSpaceNearZ[ClipSpaceNearZ[\"NEGATIVE_ONE\"] = 0] = \"NEGATIVE_ONE\";\n    ClipSpaceNearZ[ClipSpaceNearZ[\"ZERO\"] = 1] = \"ZERO\";\n})(ClipSpaceNearZ || (ClipSpaceNearZ = {}));\nvar QueryPoolType;\n(function (QueryPoolType) {\n    QueryPoolType[QueryPoolType[\"OcclusionConservative\"] = 0] = \"OcclusionConservative\";\n})(QueryPoolType || (QueryPoolType = {}));\n\nvar FormatTypeFlags;\n(function (FormatTypeFlags) {\n    FormatTypeFlags[FormatTypeFlags[\"U8\"] = 1] = \"U8\";\n    FormatTypeFlags[FormatTypeFlags[\"U16\"] = 2] = \"U16\";\n    FormatTypeFlags[FormatTypeFlags[\"U32\"] = 3] = \"U32\";\n    FormatTypeFlags[FormatTypeFlags[\"S8\"] = 4] = \"S8\";\n    FormatTypeFlags[FormatTypeFlags[\"S16\"] = 5] = \"S16\";\n    FormatTypeFlags[FormatTypeFlags[\"S32\"] = 6] = \"S32\";\n    FormatTypeFlags[FormatTypeFlags[\"F16\"] = 7] = \"F16\";\n    FormatTypeFlags[FormatTypeFlags[\"F32\"] = 8] = \"F32\";\n    // Compressed texture formats.\n    FormatTypeFlags[FormatTypeFlags[\"BC1\"] = 65] = \"BC1\";\n    FormatTypeFlags[FormatTypeFlags[\"BC2\"] = 66] = \"BC2\";\n    FormatTypeFlags[FormatTypeFlags[\"BC3\"] = 67] = \"BC3\";\n    FormatTypeFlags[FormatTypeFlags[\"BC4_UNORM\"] = 68] = \"BC4_UNORM\";\n    FormatTypeFlags[FormatTypeFlags[\"BC4_SNORM\"] = 69] = \"BC4_SNORM\";\n    FormatTypeFlags[FormatTypeFlags[\"BC5_UNORM\"] = 70] = \"BC5_UNORM\";\n    FormatTypeFlags[FormatTypeFlags[\"BC5_SNORM\"] = 71] = \"BC5_SNORM\";\n    // Special-case packed texture formats.\n    FormatTypeFlags[FormatTypeFlags[\"U16_PACKED_5551\"] = 97] = \"U16_PACKED_5551\";\n    FormatTypeFlags[FormatTypeFlags[\"U16_PACKED_565\"] = 98] = \"U16_PACKED_565\";\n    // Depth/stencil texture formats.\n    FormatTypeFlags[FormatTypeFlags[\"D24\"] = 129] = \"D24\";\n    FormatTypeFlags[FormatTypeFlags[\"D32F\"] = 130] = \"D32F\";\n    FormatTypeFlags[FormatTypeFlags[\"D24S8\"] = 131] = \"D24S8\";\n    FormatTypeFlags[FormatTypeFlags[\"D32FS8\"] = 132] = \"D32FS8\";\n})(FormatTypeFlags || (FormatTypeFlags = {}));\nvar FormatCompFlags;\n(function (FormatCompFlags) {\n    FormatCompFlags[FormatCompFlags[\"R\"] = 1] = \"R\";\n    FormatCompFlags[FormatCompFlags[\"RG\"] = 2] = \"RG\";\n    FormatCompFlags[FormatCompFlags[\"RGB\"] = 3] = \"RGB\";\n    FormatCompFlags[FormatCompFlags[\"RGBA\"] = 4] = \"RGBA\";\n    FormatCompFlags[FormatCompFlags[\"A\"] = 5] = \"A\";\n})(FormatCompFlags || (FormatCompFlags = {}));\nfunction getFormatCompFlagsComponentCount(n) {\n    // The number of components is the flag value. Easy.\n    return n;\n}\nvar FormatFlags;\n(function (FormatFlags) {\n    FormatFlags[FormatFlags[\"None\"] = 0] = \"None\";\n    FormatFlags[FormatFlags[\"Normalized\"] = 1] = \"Normalized\";\n    FormatFlags[FormatFlags[\"sRGB\"] = 2] = \"sRGB\";\n    FormatFlags[FormatFlags[\"Depth\"] = 4] = \"Depth\";\n    FormatFlags[FormatFlags[\"Stencil\"] = 8] = \"Stencil\";\n    FormatFlags[FormatFlags[\"RenderTarget\"] = 16] = \"RenderTarget\";\n    FormatFlags[FormatFlags[\"Luminance\"] = 32] = \"Luminance\";\n})(FormatFlags || (FormatFlags = {}));\nfunction makeFormat(type, comp, flags) {\n    return (type << 16) | (comp << 8) | flags;\n}\nvar Format;\n(function (Format) {\n    Format[Format[\"ALPHA\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.A, FormatFlags.None)] = \"ALPHA\";\n    Format[Format[\"U8_LUMINANCE\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.A, FormatFlags.Luminance)] = \"U8_LUMINANCE\";\n    Format[Format[\"F16_LUMINANCE\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.A, FormatFlags.Luminance)] = \"F16_LUMINANCE\";\n    Format[Format[\"F32_LUMINANCE\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.A, FormatFlags.Luminance)] = \"F32_LUMINANCE\";\n    Format[Format[\"F16_R\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.R, FormatFlags.None)] = \"F16_R\";\n    Format[Format[\"F16_RG\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.RG, FormatFlags.None)] = \"F16_RG\";\n    Format[Format[\"F16_RGB\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.RGB, FormatFlags.None)] = \"F16_RGB\";\n    Format[Format[\"F16_RGBA\"] = makeFormat(FormatTypeFlags.F16, FormatCompFlags.RGBA, FormatFlags.None)] = \"F16_RGBA\";\n    Format[Format[\"F32_R\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.R, FormatFlags.None)] = \"F32_R\";\n    Format[Format[\"F32_RG\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.RG, FormatFlags.None)] = \"F32_RG\";\n    Format[Format[\"F32_RGB\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.RGB, FormatFlags.None)] = \"F32_RGB\";\n    Format[Format[\"F32_RGBA\"] = makeFormat(FormatTypeFlags.F32, FormatCompFlags.RGBA, FormatFlags.None)] = \"F32_RGBA\";\n    Format[Format[\"U8_R\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.R, FormatFlags.None)] = \"U8_R\";\n    Format[Format[\"U8_R_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.R, FormatFlags.Normalized)] = \"U8_R_NORM\";\n    Format[Format[\"U8_RG\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RG, FormatFlags.None)] = \"U8_RG\";\n    Format[Format[\"U8_RG_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RG, FormatFlags.Normalized)] = \"U8_RG_NORM\";\n    Format[Format[\"U8_RGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.None)] = \"U8_RGB\";\n    Format[Format[\"U8_RGB_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"U8_RGB_NORM\";\n    Format[Format[\"U8_RGB_SRGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.sRGB | FormatFlags.Normalized)] = \"U8_RGB_SRGB\";\n    Format[Format[\"U8_RGBA\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.None)] = \"U8_RGBA\";\n    Format[Format[\"U8_RGBA_NORM\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"U8_RGBA_NORM\";\n    Format[Format[\"U8_RGBA_SRGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.sRGB | FormatFlags.Normalized)] = \"U8_RGBA_SRGB\";\n    Format[Format[\"U16_R\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.R, FormatFlags.None)] = \"U16_R\";\n    Format[Format[\"U16_R_NORM\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.R, FormatFlags.Normalized)] = \"U16_R_NORM\";\n    Format[Format[\"U16_RG_NORM\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RG, FormatFlags.Normalized)] = \"U16_RG_NORM\";\n    Format[Format[\"U16_RGBA_NORM\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"U16_RGBA_NORM\";\n    Format[Format[\"U16_RGBA\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RGBA, FormatFlags.None)] = \"U16_RGBA\";\n    Format[Format[\"U16_RGB\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RGB, FormatFlags.None)] = \"U16_RGB\";\n    Format[Format[\"U16_RG\"] = makeFormat(FormatTypeFlags.U16, FormatCompFlags.RG, FormatFlags.None)] = \"U16_RG\";\n    Format[Format[\"U32_R\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.R, FormatFlags.None)] = \"U32_R\";\n    Format[Format[\"U32_RG\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.RG, FormatFlags.None)] = \"U32_RG\";\n    Format[Format[\"U32_RGB\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.RGB, FormatFlags.None)] = \"U32_RGB\";\n    Format[Format[\"U32_RGBA\"] = makeFormat(FormatTypeFlags.U32, FormatCompFlags.RGBA, FormatFlags.None)] = \"U32_RGBA\";\n    Format[Format[\"S8_R\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.R, FormatFlags.None)] = \"S8_R\";\n    Format[Format[\"S8_R_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.R, FormatFlags.Normalized)] = \"S8_R_NORM\";\n    Format[Format[\"S8_RG_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.RG, FormatFlags.Normalized)] = \"S8_RG_NORM\";\n    Format[Format[\"S8_RGB_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"S8_RGB_NORM\";\n    Format[Format[\"S8_RGBA_NORM\"] = makeFormat(FormatTypeFlags.S8, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"S8_RGBA_NORM\";\n    Format[Format[\"S16_R\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.R, FormatFlags.None)] = \"S16_R\";\n    Format[Format[\"S16_RG\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RG, FormatFlags.None)] = \"S16_RG\";\n    Format[Format[\"S16_RG_NORM\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RG, FormatFlags.Normalized)] = \"S16_RG_NORM\";\n    Format[Format[\"S16_RGB_NORM\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"S16_RGB_NORM\";\n    Format[Format[\"S16_RGBA\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RGBA, FormatFlags.None)] = \"S16_RGBA\";\n    Format[Format[\"S16_RGBA_NORM\"] = makeFormat(FormatTypeFlags.S16, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"S16_RGBA_NORM\";\n    Format[Format[\"S32_R\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.R, FormatFlags.None)] = \"S32_R\";\n    Format[Format[\"S32_RG\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.RG, FormatFlags.None)] = \"S32_RG\";\n    Format[Format[\"S32_RGB\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.RGB, FormatFlags.None)] = \"S32_RGB\";\n    Format[Format[\"S32_RGBA\"] = makeFormat(FormatTypeFlags.S32, FormatCompFlags.RGBA, FormatFlags.None)] = \"S32_RGBA\";\n    // Packed texture formats.\n    Format[Format[\"U16_RGBA_5551\"] = makeFormat(FormatTypeFlags.U16_PACKED_5551, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"U16_RGBA_5551\";\n    Format[Format[\"U16_RGB_565\"] = makeFormat(FormatTypeFlags.U16_PACKED_565, FormatCompFlags.RGB, FormatFlags.Normalized)] = \"U16_RGB_565\";\n    // Compressed\n    Format[Format[\"BC1\"] = makeFormat(FormatTypeFlags.BC1, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"BC1\";\n    Format[Format[\"BC1_SRGB\"] = makeFormat(FormatTypeFlags.BC1, FormatCompFlags.RGBA, FormatFlags.Normalized | FormatFlags.sRGB)] = \"BC1_SRGB\";\n    Format[Format[\"BC2\"] = makeFormat(FormatTypeFlags.BC2, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"BC2\";\n    Format[Format[\"BC2_SRGB\"] = makeFormat(FormatTypeFlags.BC2, FormatCompFlags.RGBA, FormatFlags.Normalized | FormatFlags.sRGB)] = \"BC2_SRGB\";\n    Format[Format[\"BC3\"] = makeFormat(FormatTypeFlags.BC3, FormatCompFlags.RGBA, FormatFlags.Normalized)] = \"BC3\";\n    Format[Format[\"BC3_SRGB\"] = makeFormat(FormatTypeFlags.BC3, FormatCompFlags.RGBA, FormatFlags.Normalized | FormatFlags.sRGB)] = \"BC3_SRGB\";\n    Format[Format[\"BC4_UNORM\"] = makeFormat(FormatTypeFlags.BC4_UNORM, FormatCompFlags.R, FormatFlags.Normalized)] = \"BC4_UNORM\";\n    Format[Format[\"BC4_SNORM\"] = makeFormat(FormatTypeFlags.BC4_SNORM, FormatCompFlags.R, FormatFlags.Normalized)] = \"BC4_SNORM\";\n    Format[Format[\"BC5_UNORM\"] = makeFormat(FormatTypeFlags.BC5_UNORM, FormatCompFlags.RG, FormatFlags.Normalized)] = \"BC5_UNORM\";\n    Format[Format[\"BC5_SNORM\"] = makeFormat(FormatTypeFlags.BC5_SNORM, FormatCompFlags.RG, FormatFlags.Normalized)] = \"BC5_SNORM\";\n    // Depth/Stencil\n    Format[Format[\"D24\"] = makeFormat(FormatTypeFlags.D24, FormatCompFlags.R, FormatFlags.Depth)] = \"D24\";\n    Format[Format[\"D24_S8\"] = makeFormat(FormatTypeFlags.D24S8, FormatCompFlags.RG, FormatFlags.Depth | FormatFlags.Stencil)] = \"D24_S8\";\n    Format[Format[\"D32F\"] = makeFormat(FormatTypeFlags.D32F, FormatCompFlags.R, FormatFlags.Depth)] = \"D32F\";\n    Format[Format[\"D32F_S8\"] = makeFormat(FormatTypeFlags.D32FS8, FormatCompFlags.RG, FormatFlags.Depth | FormatFlags.Stencil)] = \"D32F_S8\";\n    // Special RT formats for preferred backend support.\n    Format[Format[\"U8_RGB_RT\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGB, FormatFlags.RenderTarget | FormatFlags.Normalized)] = \"U8_RGB_RT\";\n    Format[Format[\"U8_RGBA_RT\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.RenderTarget | FormatFlags.Normalized)] = \"U8_RGBA_RT\";\n    Format[Format[\"U8_RGBA_RT_SRGB\"] = makeFormat(FormatTypeFlags.U8, FormatCompFlags.RGBA, FormatFlags.RenderTarget | FormatFlags.Normalized | FormatFlags.sRGB)] = \"U8_RGBA_RT_SRGB\";\n})(Format || (Format = {}));\nfunction getFormatCompFlags(fmt) {\n    return (fmt >>> 8) & 0xff;\n}\nfunction getFormatTypeFlags(fmt) {\n    return (fmt >>> 16) & 0xff;\n}\nfunction getFormatFlags(fmt) {\n    return fmt & 0xff;\n}\nfunction getFormatTypeFlagsByteSize(typeFlags) {\n    switch (typeFlags) {\n        case FormatTypeFlags.F32:\n        case FormatTypeFlags.U32:\n        case FormatTypeFlags.S32:\n            return 4;\n        case FormatTypeFlags.U16:\n        case FormatTypeFlags.S16:\n        case FormatTypeFlags.F16:\n            return 2;\n        case FormatTypeFlags.U8:\n        case FormatTypeFlags.S8:\n            return 1;\n        default:\n            throw new Error('whoops');\n    }\n}\n/**\n * Gets the byte size for an individual component.\n * e.g. for F32_RGB, this will return \"4\", since F32 has 4 bytes.\n */\nfunction getFormatCompByteSize(fmt) {\n    return getFormatTypeFlagsByteSize(getFormatTypeFlags(fmt));\n}\nfunction getFormatComponentCount(fmt) {\n    return getFormatCompFlagsComponentCount(getFormatCompFlags(fmt));\n}\nfunction getFormatByteSize(fmt) {\n    var typeByteSize = getFormatTypeFlagsByteSize(getFormatTypeFlags(fmt));\n    var componentCount = getFormatCompFlagsComponentCount(getFormatCompFlags(fmt));\n    return typeByteSize * componentCount;\n}\nfunction setFormatFlags(fmt, flags) {\n    return (fmt & 0xffffff00) | flags;\n}\nfunction setFormatComponentCount(fmt, compFlags) {\n    return (fmt & 0xffff00ff) | (compFlags << 8);\n}\nfunction getFormatSamplerKind(fmt) {\n    var flags = getFormatFlags(fmt);\n    if (flags & FormatFlags.Depth) {\n        return SamplerFormatKind.Depth;\n    }\n    if (flags & FormatFlags.Normalized) {\n        return SamplerFormatKind.Float;\n    }\n    var typeFlags = getFormatTypeFlags(fmt);\n    if (typeFlags === FormatTypeFlags.F16 || typeFlags === FormatTypeFlags.F32) {\n        return SamplerFormatKind.Float;\n    }\n    else if (typeFlags === FormatTypeFlags.U8 ||\n        typeFlags === FormatTypeFlags.U16 ||\n        typeFlags === FormatTypeFlags.U32) {\n        return SamplerFormatKind.Uint;\n    }\n    else if (typeFlags === FormatTypeFlags.S8 ||\n        typeFlags === FormatTypeFlags.S16 ||\n        typeFlags === FormatTypeFlags.S32) {\n        return SamplerFormatKind.Sint;\n    }\n    else {\n        throw new Error('whoops');\n    }\n}\n\nfunction assert(b, message) {\n    if (message === void 0) { message = ''; }\n    if (!b) {\n        // console.error(new Error().stack);\n        throw new Error(\"Assert fail: \".concat(message));\n    }\n}\nfunction assertExists(v) {\n    if (v !== undefined && v !== null)\n        return v;\n    else\n        throw new Error('Missing object');\n}\n\nfunction colorEqual(c0, c1) {\n    return c0.r === c1.r && c0.g === c1.g && c0.b === c1.b && c0.a === c1.a;\n}\nfunction colorCopy(dst, src) {\n    dst.r = src.r;\n    dst.g = src.g;\n    dst.b = src.b;\n    dst.a = src.a;\n}\nfunction colorNewCopy(src) {\n    var r = src.r, g = src.g, b = src.b, a = src.a;\n    return { r: r, g: g, b: b, a: a };\n}\nfunction colorNewFromRGBA(r, g, b, a) {\n    if (a === void 0) { a = 1.0; }\n    return { r: r, g: g, b: b, a: a };\n}\nvar TransparentBlack = colorNewFromRGBA(0, 0, 0, 0);\nvar OpaqueBlack = colorNewFromRGBA(0, 0, 0, 1);\nvar TransparentWhite = colorNewFromRGBA(1, 1, 1, 0);\nvar OpaqueWhite = colorNewFromRGBA(1, 1, 1, 1);\n\n/**\n * @see https://forum.babylonjs.com/t/reverse-depth-buffer-z-buffer/6905/2\n */\nvar IsDepthReversed = true;\nfunction reverseDepthForPerspectiveProjectionMatrix(m, isDepthReversed) {\n    if (isDepthReversed === void 0) { isDepthReversed = IsDepthReversed; }\n    if (isDepthReversed) {\n        m[10] = -m[10];\n        m[14] = -m[14];\n    }\n}\nfunction reverseDepthForOrthographicProjectionMatrix(m, isDepthReversed) {\n    if (isDepthReversed === void 0) { isDepthReversed = IsDepthReversed; }\n    if (isDepthReversed) {\n        m[10] = -m[10];\n        m[14] = -m[14] + 1;\n    }\n}\nfunction reverseDepthForCompareFunction(compareFunction, isDepthReversed) {\n    if (isDepthReversed === void 0) { isDepthReversed = IsDepthReversed; }\n    if (isDepthReversed) {\n        switch (compareFunction) {\n            case CompareFunction.LESS:\n                return CompareFunction.GREATER;\n            case CompareFunction.LEQUAL:\n                return CompareFunction.GEQUAL;\n            case CompareFunction.GEQUAL:\n                return CompareFunction.LEQUAL;\n            case CompareFunction.GREATER:\n                return CompareFunction.LESS;\n            default:\n                return compareFunction;\n        }\n    }\n    else {\n        return compareFunction;\n    }\n}\nfunction reverseDepthForClearValue(n, isDepthReversed) {\n    if (isDepthReversed === void 0) { isDepthReversed = IsDepthReversed; }\n    if (isDepthReversed) {\n        return 1.0 - n;\n    }\n    else {\n        return n;\n    }\n}\nfunction reverseDepthForDepthOffset(n, isDepthReversed) {\n    if (isDepthReversed === void 0) { isDepthReversed = IsDepthReversed; }\n    if (isDepthReversed) {\n        return -n;\n    }\n    else {\n        return n;\n    }\n}\nfunction compareDepthValues(a, b, op, isDepthReversed) {\n    if (isDepthReversed === void 0) { isDepthReversed = IsDepthReversed; }\n    op = reverseDepthForCompareFunction(op, isDepthReversed);\n    if (op === CompareFunction.LESS)\n        return a < b;\n    else if (op === CompareFunction.LEQUAL)\n        return a <= b;\n    else if (op === CompareFunction.GREATER)\n        return a > b;\n    else if (op === CompareFunction.GEQUAL)\n        return a >= b;\n    else\n        throw new Error('whoops');\n}\n\n// import { reverseDepthForCompareFunction } from './depth';\nfunction isPowerOfTwo(n) {\n    return !!(n && (n & (n - 1)) === 0);\n}\nfunction fallbackUndefined(v, fallback) {\n    return v !== null && v !== undefined ? v : fallback;\n}\nfunction nullify(v) {\n    return v === undefined ? null : v;\n}\nfunction fillArray(L, n, v) {\n    L.length = n;\n    L.fill(v);\n}\nfunction align(n, multiple) {\n    var mask = multiple - 1;\n    return (n + mask) & ~mask;\n}\nfunction alignNonPowerOfTwo(n, multiple) {\n    return (((n + multiple - 1) / multiple) | 0) * multiple;\n}\n// @see https://github.com/d3/d3-array#bisectRight\nfunction bisectRight(L, e, compare) {\n    var lo = 0, hi = L.length;\n    while (lo < hi) {\n        var mid = lo + ((hi - lo) >>> 1);\n        var cmp = compare(e, L[mid]);\n        if (cmp < 0)\n            hi = mid;\n        else\n            lo = mid + 1;\n    }\n    return lo;\n}\nfunction spliceBisectRight(L, e, compare) {\n    var idx = bisectRight(L, e, compare);\n    L.splice(idx, 0, e);\n}\nfunction setBitFlagEnabled(v, mask, enabled) {\n    if (enabled)\n        v |= mask;\n    else\n        v &= ~mask;\n    return v;\n}\nfunction nArray(n, c) {\n    var d = new Array(n);\n    for (var i = 0; i < n; i++)\n        d[i] = c();\n    return d;\n}\nfunction prependLineNo(str, lineStart) {\n    if (lineStart === void 0) { lineStart = 1; }\n    var lines = str.split('\\n');\n    return lines\n        .map(function (s, i) { return \"\".concat(leftPad('' + (lineStart + i), 4, ' '), \"  \").concat(s); })\n        .join('\\n');\n}\nfunction leftPad(S, spaces, ch) {\n    if (ch === void 0) { ch = '0'; }\n    while (S.length < spaces)\n        S = \"\".concat(ch).concat(S);\n    return S;\n}\nfunction range(start, count) {\n    var L = [];\n    for (var i = start; i < start + count; i++)\n        L.push(i);\n    return L;\n}\nfunction copyChannelBlendState(dst, src) {\n    dst.blendDstFactor = src.blendDstFactor;\n    dst.blendSrcFactor = src.blendSrcFactor;\n    dst.blendMode = src.blendMode;\n}\nfunction copyStencilFaceState(dst, src) {\n    if (dst === undefined) {\n        dst = {};\n    }\n    dst.compare = src.compare;\n    dst.depthFailOp = src.depthFailOp;\n    dst.passOp = src.passOp;\n    dst.failOp = src.failOp;\n    dst.mask = src.mask;\n    return dst;\n}\nfunction copyAttachmentState(dst, src) {\n    if (dst === undefined) {\n        dst = {\n            rgbBlendState: {},\n            alphaBlendState: {},\n            channelWriteMask: 0,\n        };\n    }\n    copyChannelBlendState(dst.rgbBlendState, src.rgbBlendState);\n    copyChannelBlendState(dst.alphaBlendState, src.alphaBlendState);\n    dst.channelWriteMask = src.channelWriteMask;\n    return dst;\n}\nfunction copyAttachmentsState(dst, src) {\n    if (dst.length !== src.length)\n        dst.length = src.length;\n    for (var i = 0; i < src.length; i++)\n        dst[i] = copyAttachmentState(dst[i], src[i]);\n}\nfunction setMegaStateFlags(dst, src) {\n    if (src.attachmentsState !== undefined) {\n        copyAttachmentsState(dst.attachmentsState, src.attachmentsState);\n    }\n    if (dst.blendConstant && src.blendConstant) {\n        colorCopy(dst.blendConstant, src.blendConstant);\n    }\n    dst.depthCompare = fallbackUndefined(src.depthCompare, dst.depthCompare);\n    dst.depthWrite = fallbackUndefined(src.depthWrite, dst.depthWrite);\n    dst.stencilWrite = fallbackUndefined(src.stencilWrite, dst.stencilWrite);\n    if (dst.stencilFront && src.stencilFront) {\n        copyStencilFaceState(dst.stencilFront, src.stencilFront);\n    }\n    if (dst.stencilBack && src.stencilBack) {\n        copyStencilFaceState(dst.stencilBack, src.stencilBack);\n    }\n    dst.cullMode = fallbackUndefined(src.cullMode, dst.cullMode);\n    dst.frontFace = fallbackUndefined(src.frontFace, dst.frontFace);\n    dst.polygonOffset = fallbackUndefined(src.polygonOffset, dst.polygonOffset);\n}\nfunction copyMegaState(src) {\n    var dst = Object.assign({}, src);\n    // Copy fields that need copying.\n    dst.attachmentsState = [];\n    copyAttachmentsState(dst.attachmentsState, src.attachmentsState);\n    dst.blendConstant = dst.blendConstant && colorNewCopy(dst.blendConstant);\n    dst.stencilFront = copyStencilFaceState(undefined, src.stencilFront);\n    dst.stencilBack = copyStencilFaceState(undefined, src.stencilBack);\n    return dst;\n}\nfunction copyAttachmentStateFromSimple(dst, src) {\n    if (src.channelWriteMask !== undefined) {\n        dst.channelWriteMask = src.channelWriteMask;\n    }\n    if (src.rgbBlendMode !== undefined) {\n        dst.rgbBlendState.blendMode = src.rgbBlendMode;\n    }\n    if (src.alphaBlendMode !== undefined) {\n        dst.alphaBlendState.blendMode = src.alphaBlendMode;\n    }\n    if (src.rgbBlendSrcFactor !== undefined) {\n        dst.rgbBlendState.blendSrcFactor = src.rgbBlendSrcFactor;\n    }\n    if (src.alphaBlendSrcFactor !== undefined) {\n        dst.alphaBlendState.blendSrcFactor = src.alphaBlendSrcFactor;\n    }\n    if (src.rgbBlendDstFactor !== undefined) {\n        dst.rgbBlendState.blendDstFactor = src.rgbBlendDstFactor;\n    }\n    if (src.alphaBlendDstFactor !== undefined) {\n        dst.alphaBlendState.blendDstFactor = src.alphaBlendDstFactor;\n    }\n}\nvar defaultBlendState = {\n    blendMode: BlendMode.ADD,\n    blendSrcFactor: BlendFactor.ONE,\n    blendDstFactor: BlendFactor.ZERO,\n};\nvar defaultMegaState = {\n    attachmentsState: [\n        {\n            channelWriteMask: ChannelWriteMask.ALL,\n            rgbBlendState: defaultBlendState,\n            alphaBlendState: defaultBlendState,\n        },\n    ],\n    blendConstant: colorNewCopy(TransparentBlack),\n    depthWrite: true,\n    depthCompare: CompareFunction.LEQUAL,\n    stencilWrite: false,\n    stencilFront: {\n        compare: CompareFunction.ALWAYS,\n        passOp: StencilOp.KEEP,\n        depthFailOp: StencilOp.KEEP,\n        failOp: StencilOp.KEEP,\n    },\n    stencilBack: {\n        compare: CompareFunction.ALWAYS,\n        passOp: StencilOp.KEEP,\n        depthFailOp: StencilOp.KEEP,\n        failOp: StencilOp.KEEP,\n    },\n    cullMode: CullMode.NONE,\n    frontFace: FrontFace.CCW,\n    polygonOffset: false,\n};\nfunction makeMegaState(other, src) {\n    if (other === void 0) { other = null; }\n    if (src === void 0) { src = defaultMegaState; }\n    var dst = copyMegaState(src);\n    if (other !== null)\n        setMegaStateFlags(dst, other);\n    return dst;\n}\nvar fullscreenMegaState = makeMegaState({ depthCompare: CompareFunction.ALWAYS, depthWrite: false }, defaultMegaState);\nfunction setAttachmentStateSimple(dst, simple) {\n    if (dst.attachmentsState === undefined) {\n        dst.attachmentsState = [];\n        copyAttachmentsState(dst.attachmentsState, defaultMegaState.attachmentsState);\n    }\n    copyAttachmentStateFromSimple(dst.attachmentsState[0], simple);\n    return dst;\n}\nvar defaultBindingLayoutSamplerDescriptor = {\n    texture: null,\n    sampler: null,\n    formatKind: SamplerFormatKind.Float,\n    dimension: TextureDimension.TEXTURE_2D,\n};\n\nfunction arrayEqual(a, b, e) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; i++)\n        if (!e(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction arrayCopy(a, copyFunc) {\n    var b = Array(a.length);\n    for (var i = 0; i < a.length; i++)\n        b[i] = copyFunc(a[i]);\n    return b;\n}\nfunction textureBindingEquals(a, b) {\n    return a.texture === b.texture && a.binding === b.binding;\n}\nfunction bufferBindingEquals(a, b) {\n    return (a.buffer === b.buffer &&\n        a.size === b.size &&\n        a.binding === b.binding &&\n        a.offset === b.offset);\n}\nfunction samplerBindingEquals(a, b) {\n    if (a === null)\n        return b === null;\n    if (b === null)\n        return false;\n    return (a.sampler === b.sampler &&\n        a.texture === b.texture &&\n        a.dimension === b.dimension &&\n        a.formatKind === b.formatKind &&\n        a.comparison === b.comparison);\n}\nfunction bindingsDescriptorEquals(a, b) {\n    a.samplerBindings = a.samplerBindings || [];\n    a.uniformBufferBindings = a.uniformBufferBindings || [];\n    a.storageBufferBindings = a.storageBufferBindings || [];\n    a.storageTextureBindings = a.storageTextureBindings || [];\n    b.samplerBindings = b.samplerBindings || [];\n    b.uniformBufferBindings = b.uniformBufferBindings || [];\n    b.storageBufferBindings = b.storageBufferBindings || [];\n    b.storageTextureBindings = b.storageTextureBindings || [];\n    if (a.samplerBindings.length !== b.samplerBindings.length)\n        return false;\n    if (!arrayEqual(a.samplerBindings, b.samplerBindings, samplerBindingEquals))\n        return false;\n    if (!arrayEqual(a.uniformBufferBindings, b.uniformBufferBindings, bufferBindingEquals))\n        return false;\n    if (!arrayEqual(a.storageBufferBindings, b.storageBufferBindings, bufferBindingEquals))\n        return false;\n    if (!arrayEqual(a.storageTextureBindings, b.storageTextureBindings, textureBindingEquals))\n        return false;\n    return true;\n}\nfunction channelBlendStateEquals(a, b) {\n    return (a.blendMode == b.blendMode &&\n        a.blendSrcFactor === b.blendSrcFactor &&\n        a.blendDstFactor === b.blendDstFactor);\n}\nfunction attachmentStateEquals(a, b) {\n    if (!channelBlendStateEquals(a.rgbBlendState, b.rgbBlendState))\n        return false;\n    if (!channelBlendStateEquals(a.alphaBlendState, b.alphaBlendState))\n        return false;\n    if (a.channelWriteMask !== b.channelWriteMask)\n        return false;\n    return true;\n}\nfunction stencilFaceStateEquals(a, b) {\n    return (a.compare == b.compare &&\n        a.depthFailOp === b.depthFailOp &&\n        a.failOp === b.failOp &&\n        a.passOp === b.passOp &&\n        a.mask === b.mask);\n}\nfunction megaStateDescriptorEquals(a, b) {\n    if (!arrayEqual(a.attachmentsState, b.attachmentsState, attachmentStateEquals))\n        return false;\n    if (a.blendConstant &&\n        b.blendConstant &&\n        !colorEqual(a.blendConstant, b.blendConstant))\n        return false;\n    if (a.stencilFront &&\n        b.stencilFront &&\n        !stencilFaceStateEquals(a.stencilFront, b.stencilFront))\n        return false;\n    if (a.stencilBack &&\n        b.stencilBack &&\n        !stencilFaceStateEquals(a.stencilBack, b.stencilBack))\n        return false;\n    return (a.depthCompare === b.depthCompare &&\n        a.depthWrite === b.depthWrite &&\n        a.stencilWrite === b.stencilWrite &&\n        a.cullMode === b.cullMode &&\n        a.frontFace === b.frontFace &&\n        a.polygonOffset === b.polygonOffset);\n}\nfunction programEquals(a, b) {\n    return a.id === b.id;\n}\nfunction formatEquals(a, b) {\n    return a === b;\n}\nfunction renderPipelineDescriptorEquals(a, b) {\n    if (a.topology !== b.topology)\n        return false;\n    if (a.inputLayout !== b.inputLayout)\n        return false;\n    if (a.sampleCount !== b.sampleCount)\n        return false;\n    if (a.megaStateDescriptor &&\n        b.megaStateDescriptor &&\n        !megaStateDescriptorEquals(a.megaStateDescriptor, b.megaStateDescriptor))\n        return false;\n    if (!programEquals(a.program, b.program))\n        return false;\n    if (!arrayEqual(a.colorAttachmentFormats, b.colorAttachmentFormats, formatEquals))\n        return false;\n    if (a.depthStencilAttachmentFormat !== b.depthStencilAttachmentFormat)\n        return false;\n    return true;\n}\nfunction vertexAttributeDescriptorEquals(a, b) {\n    return (a.offset === b.offset &&\n        a.shaderLocation === b.shaderLocation &&\n        a.format === b.format &&\n        a.divisor === b.divisor);\n}\nfunction inputLayoutBufferDescriptorEquals(a, b) {\n    if (isNil(a))\n        return isNil(b);\n    if (isNil(b))\n        return false;\n    return (a.arrayStride === b.arrayStride &&\n        a.stepMode === b.stepMode &&\n        arrayEqual(a.attributes, b.attributes, vertexAttributeDescriptorEquals));\n}\nfunction inputLayoutDescriptorEquals(a, b) {\n    if (a.indexBufferFormat !== b.indexBufferFormat)\n        return false;\n    if (!arrayEqual(a.vertexBufferDescriptors, b.vertexBufferDescriptors, inputLayoutBufferDescriptorEquals))\n        return false;\n    if (!programEquals(a.program, b.program))\n        return false;\n    return true;\n}\nfunction samplerDescriptorEquals(a, b) {\n    return (a.addressModeU === b.addressModeU &&\n        a.addressModeV === b.addressModeV &&\n        a.minFilter === b.minFilter &&\n        a.magFilter === b.magFilter &&\n        a.mipmapFilter === b.mipmapFilter &&\n        a.lodMinClamp === b.lodMinClamp &&\n        a.lodMaxClamp === b.lodMaxClamp &&\n        a.maxAnisotropy === b.maxAnisotropy &&\n        a.compareFunction === b.compareFunction);\n}\nfunction samplerBindingCopy(a) {\n    var sampler = a.sampler;\n    var texture = a.texture;\n    var dimension = a.dimension;\n    var formatKind = a.formatKind;\n    var comparison = a.comparison;\n    return { sampler: sampler, texture: texture, dimension: dimension, formatKind: formatKind, comparison: comparison };\n}\nfunction bufferBindingCopy(a) {\n    var buffer = a.buffer;\n    var size = a.size;\n    var binding = a.binding;\n    var offset = a.offset;\n    return { binding: binding, buffer: buffer, offset: offset, size: size };\n}\nfunction textureBindingCopy(a) {\n    var binding = a.binding;\n    var texture = a.texture;\n    return { binding: binding, texture: texture };\n}\nfunction bindingsDescriptorCopy(a) {\n    var samplerBindings = a.samplerBindings && arrayCopy(a.samplerBindings, samplerBindingCopy);\n    var uniformBufferBindings = a.uniformBufferBindings &&\n        arrayCopy(a.uniformBufferBindings, bufferBindingCopy);\n    var storageBufferBindings = a.storageBufferBindings &&\n        arrayCopy(a.storageBufferBindings, bufferBindingCopy);\n    var storageTextureBindings = a.storageTextureBindings &&\n        arrayCopy(a.storageTextureBindings, textureBindingCopy);\n    return {\n        samplerBindings: samplerBindings,\n        uniformBufferBindings: uniformBufferBindings,\n        storageBufferBindings: storageBufferBindings,\n        storageTextureBindings: storageTextureBindings,\n        pipeline: a.pipeline,\n    };\n}\nfunction renderPipelineDescriptorCopy(a) {\n    var inputLayout = a.inputLayout;\n    var program = a.program;\n    var topology = a.topology;\n    var megaStateDescriptor = a.megaStateDescriptor && copyMegaState(a.megaStateDescriptor);\n    var colorAttachmentFormats = a.colorAttachmentFormats.slice();\n    var depthStencilAttachmentFormat = a.depthStencilAttachmentFormat;\n    var sampleCount = a.sampleCount;\n    return {\n        inputLayout: inputLayout,\n        megaStateDescriptor: megaStateDescriptor,\n        program: program,\n        topology: topology,\n        colorAttachmentFormats: colorAttachmentFormats,\n        depthStencilAttachmentFormat: depthStencilAttachmentFormat,\n        sampleCount: sampleCount,\n    };\n}\nfunction vertexAttributeDescriptorCopy(a) {\n    var shaderLocation = a.shaderLocation;\n    var format = a.format;\n    var offset = a.offset;\n    var divisor = a.divisor;\n    return {\n        shaderLocation: shaderLocation,\n        format: format,\n        offset: offset,\n        divisor: divisor,\n    };\n}\nfunction inputLayoutBufferDescriptorCopy(a) {\n    if (!isNil(a)) {\n        var arrayStride = a.arrayStride;\n        var stepMode = a.stepMode;\n        var attributes = arrayCopy(a.attributes, vertexAttributeDescriptorCopy);\n        return { arrayStride: arrayStride, stepMode: stepMode, attributes: attributes };\n    }\n    else {\n        return a;\n    }\n}\nfunction inputLayoutDescriptorCopy(a) {\n    var vertexBufferDescriptors = arrayCopy(a.vertexBufferDescriptors, inputLayoutBufferDescriptorCopy);\n    var indexBufferFormat = a.indexBufferFormat;\n    var program = a.program;\n    return {\n        vertexBufferDescriptors: vertexBufferDescriptors,\n        indexBufferFormat: indexBufferFormat,\n        program: program,\n    };\n}\n\nvar _a;\n// if array name then clean the array brackets\nvar UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\nfunction parseUniformName(name) {\n    // Shortcut to avoid redundant or bad matches\n    if (name[name.length - 1] !== ']') {\n        return {\n            name: name,\n            length: 1,\n            isArray: false,\n        };\n    }\n    var matches = name.match(UNIFORM_NAME_REGEXP);\n    if (!matches || matches.length < 2) {\n        throw new Error(\"Failed to parse GLSL uniform name \".concat(name));\n    }\n    return {\n        name: matches[1],\n        length: Number(matches[2]) || 1,\n        isArray: Boolean(matches[2]),\n    };\n}\nfunction getSamplerSetter() {\n    var cache = null;\n    return function (gl, location, \n    // eslint-disable-next-line\n    value) {\n        var update = cache !== value;\n        if (update) {\n            gl.uniform1i(location, value);\n            cache = value;\n        }\n        return update;\n    };\n}\nfunction getArraySetter(functionName, toArray, size, uniformSetter) {\n    var cache = null;\n    var cacheLength = null;\n    // eslint-disable-next-line\n    return function (gl, location, value) {\n        var arrayValue = toArray(value, size);\n        var length = arrayValue.length;\n        var update = false;\n        if (cache === null) {\n            cache = new Float32Array(length);\n            cacheLength = length;\n            update = true;\n        }\n        else {\n            assert(cacheLength === length, 'Uniform length cannot change.');\n            for (var i = 0; i < length; ++i) {\n                if (arrayValue[i] !== cache[i]) {\n                    update = true;\n                    break;\n                }\n            }\n        }\n        if (update) {\n            uniformSetter(gl, functionName, location, arrayValue);\n            cache.set(arrayValue);\n        }\n        return update;\n    };\n}\nfunction setVectorUniform(gl, functionName, location, \n// eslint-disable-next-line\nvalue) {\n    gl[functionName](location, value);\n}\nfunction setMatrixUniform(gl, functionName, location, \n// eslint-disable-next-line\nvalue) {\n    gl[functionName](location, false, value);\n}\nvar FLOAT_ARRAY = {};\nvar INT_ARRAY = {};\nvar UINT_ARRAY = {};\nvar array1 = [0];\nfunction toTypedArray(value, uniformLength, Type, \n// eslint-disable-next-line\ncache) {\n    // convert boolean uniforms to Number\n    if (uniformLength === 1 && typeof value === 'boolean') {\n        value = value ? 1 : 0;\n    }\n    if (Number.isFinite(value)) {\n        array1[0] = value;\n        value = array1;\n    }\n    var length = value.length;\n    if (value instanceof Type) {\n        return value;\n    }\n    var result = cache[length];\n    if (!result) {\n        result = new Type(length);\n        cache[length] = result;\n    }\n    for (var i = 0; i < length; i++) {\n        result[i] = value[i];\n    }\n    return result;\n}\nfunction toFloatArray(value, uniformLength) {\n    return toTypedArray(value, uniformLength, Float32Array, FLOAT_ARRAY);\n}\nfunction toIntArray(value, uniformLength) {\n    return toTypedArray(value, uniformLength, Int32Array, INT_ARRAY);\n}\nfunction toUIntArray(value, uniformLength) {\n    return toTypedArray(value, uniformLength, Uint32Array, UINT_ARRAY);\n}\nvar UNIFORM_SETTERS = (_a = {},\n    // WEBGL1\n    _a[GL.FLOAT] = getArraySetter.bind(null, 'uniform1fv', toFloatArray, 1, setVectorUniform),\n    _a[GL.FLOAT_VEC2] = getArraySetter.bind(null, 'uniform2fv', toFloatArray, 2, setVectorUniform),\n    _a[GL.FLOAT_VEC3] = getArraySetter.bind(null, 'uniform3fv', toFloatArray, 3, setVectorUniform),\n    _a[GL.FLOAT_VEC4] = getArraySetter.bind(null, 'uniform4fv', toFloatArray, 4, setVectorUniform),\n    _a[GL.INT] = getArraySetter.bind(null, 'uniform1iv', toIntArray, 1, setVectorUniform),\n    _a[GL.INT_VEC2] = getArraySetter.bind(null, 'uniform2iv', toIntArray, 2, setVectorUniform),\n    _a[GL.INT_VEC3] = getArraySetter.bind(null, 'uniform3iv', toIntArray, 3, setVectorUniform),\n    _a[GL.INT_VEC4] = getArraySetter.bind(null, 'uniform4iv', toIntArray, 4, setVectorUniform),\n    _a[GL.BOOL] = getArraySetter.bind(null, 'uniform1iv', toIntArray, 1, setVectorUniform),\n    _a[GL.BOOL_VEC2] = getArraySetter.bind(null, 'uniform2iv', toIntArray, 2, setVectorUniform),\n    _a[GL.BOOL_VEC3] = getArraySetter.bind(null, 'uniform3iv', toIntArray, 3, setVectorUniform),\n    _a[GL.BOOL_VEC4] = getArraySetter.bind(null, 'uniform4iv', toIntArray, 4, setVectorUniform),\n    // uniformMatrix(false): don't transpose the matrix\n    _a[GL.FLOAT_MAT2] = getArraySetter.bind(null, 'uniformMatrix2fv', toFloatArray, 4, setMatrixUniform),\n    _a[GL.FLOAT_MAT3] = getArraySetter.bind(null, 'uniformMatrix3fv', toFloatArray, 9, setMatrixUniform),\n    _a[GL.FLOAT_MAT4] = getArraySetter.bind(null, 'uniformMatrix4fv', toFloatArray, 16, setMatrixUniform),\n    // WEBGL2 - unsigned integers, irregular matrices, additional texture samplers\n    _a[GL.UNSIGNED_INT] = getArraySetter.bind(null, 'uniform1uiv', toUIntArray, 1, setVectorUniform),\n    _a[GL.UNSIGNED_INT_VEC2] = getArraySetter.bind(null, 'uniform2uiv', toUIntArray, 2, setVectorUniform),\n    _a[GL.UNSIGNED_INT_VEC3] = getArraySetter.bind(null, 'uniform3uiv', toUIntArray, 3, setVectorUniform),\n    _a[GL.UNSIGNED_INT_VEC4] = getArraySetter.bind(null, 'uniform4uiv', toUIntArray, 4, setVectorUniform),\n    // uniformMatrix(false): don't transpose the matrix\n    _a[GL.FLOAT_MAT2x3] = getArraySetter.bind(null, 'uniformMatrix2x3fv', toFloatArray, 6, setMatrixUniform),\n    _a[GL.FLOAT_MAT2x4] = getArraySetter.bind(null, 'uniformMatrix2x4fv', toFloatArray, 8, setMatrixUniform),\n    _a[GL.FLOAT_MAT3x2] = getArraySetter.bind(null, 'uniformMatrix3x2fv', toFloatArray, 6, setMatrixUniform),\n    _a[GL.FLOAT_MAT3x4] = getArraySetter.bind(null, 'uniformMatrix3x4fv', toFloatArray, 12, setMatrixUniform),\n    _a[GL.FLOAT_MAT4x2] = getArraySetter.bind(null, 'uniformMatrix4x2fv', toFloatArray, 8, setMatrixUniform),\n    _a[GL.FLOAT_MAT4x3] = getArraySetter.bind(null, 'uniformMatrix4x3fv', toFloatArray, 12, setMatrixUniform),\n    _a[GL.SAMPLER_2D] = getSamplerSetter,\n    _a[GL.SAMPLER_CUBE] = getSamplerSetter,\n    _a[GL.SAMPLER_3D] = getSamplerSetter,\n    _a[GL.SAMPLER_2D_SHADOW] = getSamplerSetter,\n    _a[GL.SAMPLER_2D_ARRAY] = getSamplerSetter,\n    _a[GL.SAMPLER_2D_ARRAY_SHADOW] = getSamplerSetter,\n    _a[GL.SAMPLER_CUBE_SHADOW] = getSamplerSetter,\n    _a[GL.INT_SAMPLER_2D] = getSamplerSetter,\n    _a[GL.INT_SAMPLER_3D] = getSamplerSetter,\n    _a[GL.INT_SAMPLER_CUBE] = getSamplerSetter,\n    _a[GL.INT_SAMPLER_2D_ARRAY] = getSamplerSetter,\n    _a[GL.UNSIGNED_INT_SAMPLER_2D] = getSamplerSetter,\n    _a[GL.UNSIGNED_INT_SAMPLER_3D] = getSamplerSetter,\n    _a[GL.UNSIGNED_INT_SAMPLER_CUBE] = getSamplerSetter,\n    _a[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY] = getSamplerSetter,\n    _a);\nfunction getUniformSetter(gl, location, info) {\n    var setter = UNIFORM_SETTERS[info.type];\n    if (!setter) {\n        throw new Error(\"Unknown GLSL uniform type \".concat(info.type));\n    }\n    return setter().bind(null, gl, location);\n}\n\nvar dtypes = {\n    '[object Int8Array]': 5120,\n    '[object Int16Array]': 5122,\n    '[object Int32Array]': 5124,\n    '[object Uint8Array]': 5121,\n    '[object Uint8ClampedArray]': 5121,\n    '[object Uint16Array]': 5123,\n    '[object Uint32Array]': 5125,\n    '[object Float32Array]': 5126,\n    '[object Float64Array]': 5121,\n    '[object ArrayBuffer]': 5121,\n};\n// eslint-disable-next-line\nfunction isTypedArray(x) {\n    return Object.prototype.toString.call(x) in dtypes;\n}\n\n// const ES100_REPLACEMENTS: [RegExp, string][] = [\n//   // In GLSL 1.00 ES these functions are provided by an extension\n//   [/\\btexture(2D|2DProj|Cube)Lod\\(/g, 'texture$1LodEXT('],\n//   // Overloads in GLSL 3.00 map to individual functions. Note that we cannot\n//   // differentiate 2D,2DProj,Cube without type analysis so we choose the most common variant.\n//   [/\\btexture\\(/g, 'texture2D('],\n//   [/\\btextureLod\\(/g, 'texture2DLodEXT('],\n// ];\nfunction defineStr(k, v) {\n    return \"#define \".concat(k, \" \").concat(v);\n}\nfunction getDefines(shader) {\n    var defines = {};\n    shader.replace(/^\\s*#define\\s*(\\S*)\\s*(\\S*)\\s*$/gm, function (_, name, value) {\n        var v = Number(value);\n        defines[name] = isNaN(v) ? value : v;\n        return '';\n    });\n    return defines;\n}\nfunction getAttributeLocations(vert, defines) {\n    var locations = [];\n    vert.replace(/^\\s*layout\\(location\\s*=\\s*(\\S*)\\)\\s*in\\s+\\S+\\s*(.*);$/gm, function (_, location, name) {\n        var l = Number(location);\n        locations.push({ location: isNaN(l) ? defines[location] : l, name: name });\n        return '';\n    });\n    return locations;\n}\nfunction getUniforms(vert) {\n    var uniformNames = [];\n    var structs = [];\n    vert.replace(/\\s*struct\\s*(.*)\\s*{((?:\\s*.*\\s*)*?)};/g, function (_, type, uniformStr) {\n        var uniforms = [];\n        uniformStr\n            .trim()\n            .replace('\\r\\n', '\\n')\n            .split('\\n')\n            .forEach(function (line) {\n            var _a = __read(line.trim().split(/\\s+/), 2), type = _a[0], name = _a[1];\n            uniforms.push({\n                type: type.trim(),\n                name: name.replace(';', '').trim(),\n            });\n        });\n        structs.push({\n            type: type.trim(),\n            uniforms: uniforms,\n        });\n        return '';\n    });\n    vert.replace(/\\s*uniform(?:\\s+)(?:\\w+)(?:\\s?){([^]*?)};?/g, function (_, uniforms) {\n        uniforms\n            .trim()\n            .replace('\\r\\n', '\\n')\n            .split('\\n')\n            .forEach(function (line) {\n            var result = line.trim().split(' ');\n            var type = result[0] || '';\n            var name = result[1] || '';\n            // DirectionalLight directionalLights[  NUM_DIR_LIGHTS ];\n            var isArray = name.indexOf('[') > -1;\n            name = name.replace(';', '').replace('[', '').trim();\n            // ignore conditional comments\n            if (type.startsWith('#')) {\n                return;\n            }\n            // account for structs\n            if (type) {\n                var struct = structs.find(function (struct) { return type === struct.type; });\n                if (struct) {\n                    if (isArray) {\n                        var _loop_1 = function (i) {\n                            struct.uniforms.forEach(function (uniform) {\n                                uniformNames.push(\"\".concat(name, \"[\").concat(i, \"].\").concat(uniform.name));\n                            });\n                        };\n                        for (var i = 0; i < 5; i++) {\n                            _loop_1(i);\n                        }\n                    }\n                    else {\n                        struct.uniforms.forEach(function (uniform) {\n                            uniformNames.push(\"\".concat(name, \".\").concat(uniform.name));\n                        });\n                    }\n                }\n            }\n            if (name) {\n                uniformNames.push(name);\n            }\n        });\n        return '';\n    });\n    return uniformNames;\n}\nfunction parseBinding(layout) {\n    if (layout === undefined)\n        return null;\n    var g = /binding\\s*=\\s*(\\d+)/.exec(layout);\n    if (g !== null) {\n        var bindingNum = parseInt(g[1], 10);\n        if (!Number.isNaN(bindingNum))\n            return bindingNum;\n    }\n    return null;\n}\nfunction getSeparateSamplerTypes(combinedSamplerType) {\n    var samplerType = '';\n    var textureType = combinedSamplerType;\n    // if (combinedSamplerType.endsWith(`Shadow`)) {\n    //   textureType = textureType.slice(0, -6);\n    //   samplerType = `Shadow`;\n    // }\n    return [textureType, samplerType];\n}\nfunction preprocessShader_GLSL(vendorInfo, type, source, defines, usePrecision) {\n    var _a;\n    if (defines === void 0) { defines = null; }\n    if (usePrecision === void 0) { usePrecision = true; }\n    var isGLSL100 = vendorInfo.glslVersion === '#version 100';\n    var useMRT = type === 'frag' &&\n        ((_a = source.match(/^\\s*layout\\(location\\s*=\\s*\\d*\\)\\s*out\\s+vec4\\s*(.*);$/gm)) === null || _a === void 0 ? void 0 : _a.length) > 1;\n    var lines = source\n        .replace('\\r\\n', '\\n')\n        .split('\\n')\n        .map(function (n) {\n        // Remove comments.\n        return n.replace(/[/][/].*$/, '');\n    })\n        .filter(function (n) {\n        // Filter whitespace.\n        var isEmpty = !n || /^\\s+$/.test(n);\n        return !isEmpty;\n    });\n    // #define KEY VAR\n    var definesString = '';\n    if (defines !== null)\n        definesString = Object.keys(defines)\n            .map(function (key) { return defineStr(key, defines[key]); })\n            .join('\\n');\n    var precision = lines.find(function (line) { return line.startsWith('precision'); }) ||\n        'precision mediump float;';\n    var rest = usePrecision\n        ? lines.filter(function (line) { return !line.startsWith('precision'); }).join('\\n')\n        : lines.join('\\n');\n    var extraDefines = '';\n    if (vendorInfo.viewportOrigin === ViewportOrigin.UPPER_LEFT) {\n        extraDefines += \"\".concat(defineStr(\"VIEWPORT_ORIGIN_TL\", \"1\"), \"\\n\");\n    }\n    if (vendorInfo.clipSpaceNearZ === ClipSpaceNearZ.ZERO) {\n        extraDefines += \"\".concat(defineStr(\"CLIPSPACE_NEAR_ZERO\", \"1\"), \"\\n\");\n    }\n    if (vendorInfo.explicitBindingLocations) {\n        var set_1 = 0, implicitBinding_1 = 0, location_1 = 0;\n        rest = rest.replace(/^\\s*(layout\\((.*)\\))?\\s*uniform(.+{)$/gm, function (substr, cap, layout, rest) {\n            var layout2 = layout ? \"\".concat(layout, \", \") : \"\";\n            return \"layout(\".concat(layout2, \"set = \").concat(set_1, \", binding = \").concat(implicitBinding_1++, \") uniform \").concat(rest);\n        });\n        // XXX(jstpierre): WebGPU now binds UBOs and textures in different sets as a porting hack, hrm...\n        set_1++;\n        implicitBinding_1 = 0;\n        assert(vendorInfo.separateSamplerTextures);\n        rest = rest.replace(/^\\s*(layout\\((.*)\\))?\\s*uniform sampler(\\w+) (.*);/gm, function (substr, cap, layout, combinedSamplerType, samplerName) {\n            var binding = parseBinding(layout);\n            if (binding === null)\n                binding = implicitBinding_1++;\n            var _a = __read(getSeparateSamplerTypes(combinedSamplerType), 2), textureType = _a[0], samplerType = _a[1];\n            return type === 'frag'\n                ? \"\\nlayout(set = \".concat(set_1, \", binding = \").concat(binding * 2 + 0, \") uniform texture\").concat(textureType, \" T_\").concat(samplerName, \";\\nlayout(set = \").concat(set_1, \", binding = \").concat(binding * 2 + 1, \") uniform sampler\").concat(samplerType, \" S_\").concat(samplerName, \";\").trim()\n                : '';\n        });\n        rest = rest.replace(type === 'frag' ? /^\\s*\\b(varying|in)\\b/gm : /^\\s*\\b(varying|out)\\b/gm, function (substr, tok) {\n            return \"layout(location = \".concat(location_1++, \") \").concat(tok);\n        });\n        /**\n         * @see https://github.com/gfx-rs/naga/issues/1994\n         */\n        extraDefines += \"\".concat(defineStr(\"gl_VertexID\", \"gl_VertexIndex\"), \"\\n\");\n        extraDefines += \"\".concat(defineStr(\"gl_InstanceID\", \"gl_InstanceIndex\"), \"\\n\");\n        // Workaround for Naga\n        // https://github.com/gfx-rs/naga/issues/1353\n        precision = precision.replace(/^precision (.*) sampler(.*);$/gm, '');\n    }\n    else {\n        var implicitBinding_2 = 0;\n        rest = rest.replace(/^\\s*(layout\\((.*)\\))?\\s*uniform sampler(\\w+) (.*);/gm, function (substr, cap, layout, combinedSamplerType, samplerName) {\n            var binding = parseBinding(layout);\n            if (binding === null)\n                binding = implicitBinding_2++;\n            return \"uniform sampler\".concat(combinedSamplerType, \" \").concat(samplerName, \"; // BINDING=\").concat(binding);\n        });\n    }\n    rest = rest.replace(/\\bPU_SAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n        return \"SAMPLER_\".concat(combinedSamplerType, \"(P_\").concat(samplerName, \")\");\n    });\n    rest = rest.replace(/\\bPF_SAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n        return \"PP_SAMPLER_\".concat(combinedSamplerType, \"(P_\").concat(samplerName, \")\");\n    });\n    rest = rest.replace(/\\bPU_TEXTURE\\((.*?)\\)/g, function (substr, samplerName) {\n        return \"TEXTURE(P_\".concat(samplerName, \")\");\n    });\n    if (vendorInfo.separateSamplerTextures) {\n        rest = rest.replace(/\\bPD_SAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n            var _a = __read(getSeparateSamplerTypes(combinedSamplerType), 2), textureType = _a[0], samplerType = _a[1];\n            return \"texture\".concat(textureType, \" T_P_\").concat(samplerName, \", sampler\").concat(samplerType, \" S_P_\").concat(samplerName);\n        });\n        rest = rest.replace(/\\bPP_SAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n            return \"T_\".concat(samplerName, \", S_\").concat(samplerName);\n        });\n        rest = rest.replace(/\\bSAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n            return \"sampler\".concat(combinedSamplerType, \"(T_\").concat(samplerName, \", S_\").concat(samplerName, \")\");\n        });\n        rest = rest.replace(/\\bTEXTURE\\((.*?)\\)/g, function (substr, samplerName) {\n            return \"T_\".concat(samplerName);\n        });\n    }\n    else {\n        var samplerNames_1 = [];\n        rest = rest.replace(/\\bPD_SAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n            return \"sampler\".concat(combinedSamplerType, \" P_\").concat(samplerName);\n        });\n        rest = rest.replace(/\\bPP_SAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n            return samplerName;\n        });\n        rest = rest.replace(/\\bSAMPLER_(\\w+)\\((.*?)\\)/g, function (substr, combinedSamplerType, samplerName) {\n            samplerNames_1.push([samplerName, combinedSamplerType]);\n            return samplerName;\n        });\n        if (isGLSL100) {\n            samplerNames_1.forEach(function (_a) {\n                var _b = __read(_a, 2), samplerName = _b[0], combinedSamplerType = _b[1];\n                // texture(u_T) -> texture2D(u_T) or textureCube(u_T)\n                rest = rest.replace(new RegExp(\"texture\\\\(\".concat(samplerName), 'g'), function () {\n                    return \"texture\".concat(combinedSamplerType, \"(\").concat(samplerName);\n                });\n            });\n        }\n        rest = rest.replace(/\\bTEXTURE\\((.*?)\\)/g, function (substr, samplerName) {\n            return samplerName;\n        });\n    }\n    // using #define means we can't use `const in/out` in params\n    //   ${isGLSL100 && type === 'vert' ? '#define in attribute\\n#define out varying' : ''}\n    // ${isGLSL100 && type === 'frag' ? '#define in varying' : ''}\n    // headless-gl will throw the following error if we prepend `#version 100`:\n    // #version directive must occur before anything else, except for comments and white space\n    var concat = \"\".concat(isGLSL100 ? '' : vendorInfo.glslVersion, \"\\n\").concat(isGLSL100 && useMRT ? '#extension GL_EXT_draw_buffers : require\\n' : '', \"\\n\").concat(isGLSL100 && type === 'frag'\n        ? '#extension GL_OES_standard_derivatives : enable\\n'\n        : '').concat(usePrecision ? precision : '', \"\\n\").concat(extraDefines ? extraDefines : '').concat(definesString ? definesString + '\\n' : '', \"\\n\").concat(rest, \"\\n\").trim();\n    // out vec4 outputColor; -> layout(location = 0) out vec4 outputColor;\n    if (vendorInfo.explicitBindingLocations && type === 'frag') {\n        concat = concat.replace(/^\\b(out)\\b/g, function (substr, tok) {\n            return \"layout(location = 0) \".concat(tok);\n        });\n    }\n    // GLSL 300 -> 100\n    // @see https://webgl2fundamentals.org/webgl/lessons/webgl1-to-webgl2.html\n    if (isGLSL100) {\n        // in -> varying\n        if (type === 'frag') {\n            concat = concat.replace(/^\\s*in\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n                return \"varying \".concat(dataType, \" \").concat(name, \";\\n\");\n            });\n        }\n        if (type === 'vert') {\n            // out -> varying\n            concat = concat.replace(/^\\s*out\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n                return \"varying \".concat(dataType, \" \").concat(name, \";\\n\");\n            });\n            // in -> attribute\n            concat = concat.replace(\n            // /^\\s*layout\\(location\\s*=\\s*\\d*\\)\\s*in\\s*(.*)\\s*(.*);$/gm,\n            /^\\s*layout\\(location\\s*=\\s*\\S*\\)\\s*in\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n                return \"attribute \".concat(dataType, \" \").concat(name, \";\\n\");\n            });\n        }\n        // interface blocks supported in GLSL ES 3.00 and above only\n        concat = concat.replace(/\\s*uniform\\s*.*\\s*{((?:\\s*.*\\s*)*?)};/g, function (substr, uniforms) {\n            return uniforms.trim().replace(/^.*$/gm, function (uniform) {\n                // eg. #ifdef\n                var trimmed = uniform.trim();\n                if (trimmed.startsWith('#')) {\n                    return trimmed;\n                }\n                return uniform ? \"uniform \".concat(trimmed) : '';\n            });\n        });\n        if (type === 'frag') {\n            if (useMRT) {\n                var gBuffers_1 = [];\n                concat = concat.replace(/^\\s*layout\\(location\\s*=\\s*\\d*\\)\\s*out\\s+vec4\\s*(.*);$/gm, function (_, buffer) {\n                    gBuffers_1.push(buffer);\n                    return \"vec4 \".concat(buffer, \";\\n\");\n                });\n                var lastIndexOfMain = concat.lastIndexOf('}');\n                concat =\n                    concat.substring(0, lastIndexOfMain) +\n                        \"\\n    \".concat(gBuffers_1\n                            .map(function (gBuffer, i) { return \"gl_FragData[\".concat(i, \"] = \").concat(gBuffer, \";\\n    \"); })\n                            .join('\\n')) +\n                        concat.substring(lastIndexOfMain);\n            }\n            else {\n                var glFragColor_1;\n                concat = concat.replace(/^\\s*out\\s+(\\S+)\\s*(.*);$/gm, function (_, dataType, name) {\n                    glFragColor_1 = name;\n                    return \"\".concat(dataType, \" \").concat(name, \";\\n\");\n                });\n                if (glFragColor_1) {\n                    var lastIndexOfMain = concat.lastIndexOf('}');\n                    concat =\n                        concat.substring(0, lastIndexOfMain) +\n                            \"\\n  gl_FragColor = vec4(\".concat(glFragColor_1, \");\\n\") +\n                            concat.substring(lastIndexOfMain);\n                }\n            }\n        }\n        // remove layout(location = 0)\n        concat = concat.replace(/^\\s*layout\\((.*)\\)/gm, '');\n        // replace texture with texture2D\n        // for (const [pattern, replacement] of ES100_REPLACEMENTS) {\n        //   concat = concat.replace(pattern, replacement);\n        // }\n    }\n    return concat;\n}\nfunction preprocessProgram_GLSL(vendorInfo, vert, frag, defines) {\n    if (defines === void 0) { defines = null; }\n    var preprocessedVert = preprocessShader_GLSL(vendorInfo, 'vert', vert, defines);\n    var preprocessedFrag = preprocessShader_GLSL(vendorInfo, 'frag', frag, defines);\n    return { vert: vert, frag: frag, preprocessedVert: preprocessedVert, preprocessedFrag: preprocessedFrag };\n}\n\nvar ResourceBase_GL = /** @class */ (function (_super) {\n    __extends(ResourceBase_GL, _super);\n    function ResourceBase_GL(_a) {\n        var id = _a.id, device = _a.device;\n        var _this = _super.call(this) || this;\n        _this.id = id;\n        _this.device = device;\n        if (_this.device['resourceCreationTracker'] !== null) {\n            _this.device['resourceCreationTracker'].trackResourceCreated(_this);\n        }\n        return _this;\n    }\n    ResourceBase_GL.prototype.destroy = function () {\n        if (this.device['resourceCreationTracker'] !== null) {\n            this.device['resourceCreationTracker'].trackResourceDestroyed(this);\n        }\n    };\n    return ResourceBase_GL;\n}(EventEmitter));\n\nvar Bindings_GL = /** @class */ (function (_super) {\n    __extends(Bindings_GL, _super);\n    function Bindings_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Bindings;\n        var uniformBufferBindings = descriptor.uniformBufferBindings, samplerBindings = descriptor.samplerBindings;\n        _this.uniformBufferBindings = uniformBufferBindings || [];\n        _this.samplerBindings = samplerBindings || [];\n        _this.bindingLayouts = _this.createBindingLayouts();\n        return _this;\n    }\n    Bindings_GL.prototype.createBindingLayouts = function () {\n        var firstUniformBuffer = 0;\n        var firstSampler = 0;\n        var bindingLayoutTables = [];\n        // Support only 1 bindGroup for now.\n        var numUniformBuffers = this.uniformBufferBindings.length;\n        var numSamplers = this.samplerBindings.length;\n        bindingLayoutTables.push({\n            firstUniformBuffer: firstUniformBuffer,\n            numUniformBuffers: numUniformBuffers,\n            firstSampler: firstSampler,\n            numSamplers: numSamplers,\n        });\n        firstUniformBuffer += numUniformBuffers;\n        firstSampler += numSamplers;\n        return {\n            numUniformBuffers: firstUniformBuffer,\n            numSamplers: firstSampler,\n            bindingLayoutTables: bindingLayoutTables,\n        };\n    };\n    return Bindings_GL;\n}(ResourceBase_GL));\n\n// @see https://github.com/visgl/luma.gl/blob/30a1039573576d73641de7c1ba222e8992eb526e/modules/gltools/src/utils/webgl-checks.ts#L22\nfunction isWebGL2(gl) {\n    if (typeof WebGL2RenderingContext !== 'undefined' &&\n        gl instanceof WebGL2RenderingContext) {\n        return true;\n    }\n    // Look for debug contexts, headless gl etc\n    // @ts-ignore\n    return Boolean(gl && gl._version === 2);\n}\nfunction isTextureFormatCompressed(fmt) {\n    var typeFlags = getFormatTypeFlags(fmt);\n    switch (typeFlags) {\n        case FormatTypeFlags.BC1:\n        case FormatTypeFlags.BC2:\n        case FormatTypeFlags.BC3:\n        case FormatTypeFlags.BC4_UNORM:\n        case FormatTypeFlags.BC4_SNORM:\n        case FormatTypeFlags.BC5_UNORM:\n        case FormatTypeFlags.BC5_SNORM:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction isFormatSizedInteger(fmt) {\n    var flags = getFormatFlags(fmt);\n    if (flags & FormatFlags.Normalized)\n        return false;\n    var typeFlags = getFormatTypeFlags(fmt);\n    // Check for integer types.\n    if (typeFlags === FormatTypeFlags.S8 ||\n        typeFlags === FormatTypeFlags.S16 ||\n        typeFlags === FormatTypeFlags.S32)\n        return true;\n    if (typeFlags === FormatTypeFlags.U8 ||\n        typeFlags === FormatTypeFlags.U16 ||\n        typeFlags === FormatTypeFlags.U32)\n        return true;\n    return false;\n}\nfunction translateBufferHint(hint) {\n    switch (hint) {\n        case BufferFrequencyHint.STATIC:\n            return GL.STATIC_DRAW;\n        case BufferFrequencyHint.DYNAMIC:\n            return GL.DYNAMIC_DRAW;\n    }\n}\nfunction translateBufferUsageToTarget(usage) {\n    if (usage & BufferUsage.INDEX) {\n        return GL.ELEMENT_ARRAY_BUFFER;\n    }\n    else if (usage & BufferUsage.VERTEX) {\n        return GL.ARRAY_BUFFER;\n    }\n    else if (usage & BufferUsage.UNIFORM) {\n        return GL.UNIFORM_BUFFER;\n    }\n}\nfunction translatePrimitiveTopology(topology) {\n    switch (topology) {\n        case PrimitiveTopology.TRIANGLES:\n            return GL.TRIANGLES;\n        case PrimitiveTopology.POINTS:\n            return GL.POINTS;\n        case PrimitiveTopology.TRIANGLE_STRIP:\n            return GL.TRIANGLE_STRIP;\n        case PrimitiveTopology.LINES:\n            return GL.LINES;\n        case PrimitiveTopology.LINE_STRIP:\n            return GL.LINE_STRIP;\n        default:\n            throw new Error('Unknown primitive topology mode');\n    }\n}\nfunction translateType(flags) {\n    switch (flags) {\n        case FormatTypeFlags.U8:\n            return GL.UNSIGNED_BYTE;\n        case FormatTypeFlags.U16:\n            return GL.UNSIGNED_SHORT;\n        case FormatTypeFlags.U32:\n            return GL.UNSIGNED_INT;\n        case FormatTypeFlags.S8:\n            return GL.BYTE;\n        case FormatTypeFlags.S16:\n            return GL.SHORT;\n        case FormatTypeFlags.S32:\n            return GL.INT;\n        case FormatTypeFlags.F16:\n            return GL.HALF_FLOAT;\n        case FormatTypeFlags.F32:\n            return GL.FLOAT;\n        default:\n            throw new Error('whoops');\n    }\n}\nfunction translateSize(flags) {\n    switch (flags) {\n        case FormatCompFlags.R:\n            return 1;\n        case FormatCompFlags.RG:\n            return 2;\n        case FormatCompFlags.RGB:\n            return 3;\n        case FormatCompFlags.RGBA:\n            return 4;\n        default:\n            return 1;\n    }\n}\nfunction translateVertexFormat$1(fmt) {\n    var typeFlags = getFormatTypeFlags(fmt);\n    var compFlags = getFormatCompFlags(fmt);\n    var flags = getFormatFlags(fmt);\n    var type = translateType(typeFlags);\n    var size = translateSize(compFlags);\n    var normalized = !!(flags & FormatFlags.Normalized);\n    return { size: size, type: type, normalized: normalized };\n}\nfunction translateIndexFormat$1(format) {\n    switch (format) {\n        case Format.U8_R:\n            return GL.UNSIGNED_BYTE;\n        case Format.U16_R:\n            return GL.UNSIGNED_SHORT;\n        case Format.U32_R:\n            return GL.UNSIGNED_INT;\n        default:\n            throw new Error('whoops');\n    }\n}\nfunction translateAddressMode$1(wrapMode) {\n    switch (wrapMode) {\n        case AddressMode.CLAMP_TO_EDGE:\n            return GL.CLAMP_TO_EDGE;\n        case AddressMode.REPEAT:\n            return GL.REPEAT;\n        case AddressMode.MIRRORED_REPEAT:\n            return GL.MIRRORED_REPEAT;\n        default:\n            throw new Error('whoops');\n    }\n}\nfunction translateFilterMode(filter, mipmapFilter) {\n    if (mipmapFilter === MipmapFilterMode.LINEAR &&\n        filter === FilterMode.BILINEAR) {\n        return GL.LINEAR_MIPMAP_LINEAR;\n    }\n    if (mipmapFilter === MipmapFilterMode.LINEAR && filter === FilterMode.POINT) {\n        return GL.NEAREST_MIPMAP_LINEAR;\n    }\n    if (mipmapFilter === MipmapFilterMode.NEAREST &&\n        filter === FilterMode.BILINEAR) {\n        return GL.LINEAR_MIPMAP_NEAREST;\n    }\n    if (mipmapFilter === MipmapFilterMode.NEAREST &&\n        filter === FilterMode.POINT) {\n        return GL.NEAREST_MIPMAP_NEAREST;\n    }\n    if (mipmapFilter === MipmapFilterMode.NO_MIP &&\n        filter === FilterMode.BILINEAR) {\n        return GL.LINEAR;\n    }\n    if (mipmapFilter === MipmapFilterMode.NO_MIP && filter === FilterMode.POINT) {\n        return GL.NEAREST;\n    }\n    throw new Error('Unknown texture filter mode');\n}\nfunction getPlatformBuffer$1(buffer_, byteOffset) {\n    if (byteOffset === void 0) { byteOffset = 0; }\n    var buffer = buffer_;\n    return buffer.gl_buffer_pages[(byteOffset / buffer.pageByteSize) | 0];\n}\nfunction getPlatformTexture(texture_) {\n    var texture = texture_;\n    return texture.gl_texture;\n}\nfunction getPlatformSampler$1(sampler_) {\n    var sampler = sampler_;\n    return sampler.gl_sampler;\n}\n// eslint-disable-next-line\nfunction assignPlatformName(o, name) {\n    o.name = name;\n    o.__SPECTOR_Metadata = { name: name };\n}\nfunction findall(haystack, needle) {\n    var results = [];\n    while (true) {\n        var result = needle.exec(haystack);\n        if (!result)\n            break;\n        results.push(result);\n    }\n    return results;\n}\nfunction isBlendStateNone(blendState) {\n    return (blendState.blendMode == BlendMode.ADD &&\n        blendState.blendSrcFactor == BlendFactor.ONE &&\n        blendState.blendDstFactor === BlendFactor.ZERO);\n}\nfunction translateQueryPoolType$1(type) {\n    switch (type) {\n        case QueryPoolType.OcclusionConservative:\n            return GL.ANY_SAMPLES_PASSED_CONSERVATIVE;\n        default:\n            throw new Error('whoops');\n    }\n}\nfunction translateTextureDimension$1(dimension) {\n    if (dimension === TextureDimension.TEXTURE_2D)\n        return GL.TEXTURE_2D;\n    else if (dimension === TextureDimension.TEXTURE_2D_ARRAY)\n        return GL.TEXTURE_2D_ARRAY;\n    else if (dimension === TextureDimension.TEXTURE_CUBE_MAP)\n        return GL.TEXTURE_CUBE_MAP;\n    else if (dimension === TextureDimension.TEXTURE_3D)\n        return GL.TEXTURE_3D;\n    else\n        throw new Error('whoops');\n}\nfunction isBlockCompressSized(w, h, bw, bh) {\n    if (w % bw !== 0)\n        return false;\n    if (h % bh !== 0)\n        return false;\n    return true;\n}\n\nvar Buffer_GL = /** @class */ (function (_super) {\n    __extends(Buffer_GL, _super);\n    function Buffer_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Buffer;\n        var viewOrSize = descriptor.viewOrSize, usage = descriptor.usage, _b = descriptor.hint, hint = _b === void 0 ? BufferFrequencyHint.STATIC : _b;\n        var uniformBufferMaxPageByteSize = device.uniformBufferMaxPageByteSize, gl = device.gl;\n        var isUBO = usage & BufferUsage.UNIFORM;\n        if (!isUBO) {\n            if (isWebGL2(gl)) {\n                // Temporarily unbind VAO when creating buffers to not stomp on the VAO configuration.\n                gl.bindVertexArray(null);\n            }\n            else {\n                device.OES_vertex_array_object.bindVertexArrayOES(null);\n            }\n        }\n        // const byteSize = isNumber(viewOrSize)\n        //   ? viewOrSize * 4\n        //   : viewOrSize.byteLength * 4;\n        var byteSize = isNumber(viewOrSize)\n            ? align(viewOrSize, 4)\n            : align(viewOrSize.byteLength, 4);\n        _this.gl_buffer_pages = [];\n        var pageByteSize;\n        if (isUBO) {\n            // assert(byteSize % uniformBufferMaxPageByteSize === 0);\n            var byteSizeLeft = byteSize;\n            while (byteSizeLeft > 0) {\n                _this.gl_buffer_pages.push(_this.createBufferPage(Math.min(byteSizeLeft, uniformBufferMaxPageByteSize), usage, hint));\n                byteSizeLeft -= uniformBufferMaxPageByteSize;\n            }\n            pageByteSize = uniformBufferMaxPageByteSize;\n            // TODO: uniform in WebGL1\n        }\n        else {\n            _this.gl_buffer_pages.push(_this.createBufferPage(byteSize, usage, hint));\n            pageByteSize = byteSize;\n        }\n        _this.pageByteSize = pageByteSize;\n        _this.byteSize = byteSize;\n        _this.usage = usage;\n        _this.gl_target = translateBufferUsageToTarget(usage);\n        // init data\n        if (!isNumber(viewOrSize)) {\n            _this.setSubData(0, new Uint8Array(viewOrSize.buffer));\n        }\n        if (!isUBO) {\n            if (isWebGL2(gl)) {\n                gl.bindVertexArray(_this.device['currentBoundVAO']);\n            }\n            else {\n                device.OES_vertex_array_object.bindVertexArrayOES(_this.device['currentBoundVAO']);\n            }\n        }\n        return _this;\n    }\n    Buffer_GL.prototype.setSubData = function (dstByteOffset, data, srcByteOffset, byteSize) {\n        if (srcByteOffset === void 0) { srcByteOffset = 0; }\n        if (byteSize === void 0) { byteSize = data.byteLength - srcByteOffset; }\n        var gl = this.device.gl;\n        var \n        // gl_target,\n        // byteSize: dstByteSize,\n        dstPageByteSize = this.pageByteSize;\n        // Account for setSubData being called with a dstByteOffset that is beyond the end of the buffer.\n        // if (isWebGL2(gl) && gl_target === gl.UNIFORM_BUFFER) {\n        //   // Manually check asserts for speed.\n        //   if (!(dstByteOffset % dstPageByteSize === 0))\n        //     throw new Error(\n        //       `Assert fail: (dstByteOffset [${dstByteOffset}] % dstPageByteSize [${dstPageByteSize}]) === 0`,\n        //     );\n        //   if (!(byteSize % dstPageByteSize === 0))\n        //     throw new Error(\n        //       `Assert fail: (byteSize [${byteSize}] % dstPageByteSize [${dstPageByteSize}]) === 0`,\n        //     );\n        // }\n        // if (!(dstByteOffset + byteSize <= dstByteSize)) {\n        //   throw new Error(\n        //     `Assert fail: (dstByteOffset [${dstByteOffset}] + byteSize [${byteSize}]) <= dstByteSize [${dstByteSize}], gl_target ${gl_target}`,\n        //   );\n        //   // exceed, need to recreate\n        // }\n        var virtBufferByteOffsetEnd = dstByteOffset + byteSize;\n        var virtBufferByteOffset = dstByteOffset;\n        var physBufferByteOffset = dstByteOffset % dstPageByteSize;\n        while (virtBufferByteOffset < virtBufferByteOffsetEnd) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer#parameters\n            var target = isWebGL2(gl) ? gl.COPY_WRITE_BUFFER : this.gl_target;\n            var buffer = getPlatformBuffer$1(this, virtBufferByteOffset);\n            // @ts-ignore\n            if (buffer.ubo) {\n                return;\n            }\n            gl.bindBuffer(target, buffer);\n            // only WebGL2 support srcOffset & length\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData\n            if (isWebGL2(gl)) {\n                gl.bufferSubData(target, physBufferByteOffset, data, srcByteOffset, Math.min(virtBufferByteOffsetEnd - virtBufferByteOffset, dstPageByteSize));\n            }\n            else {\n                gl.bufferSubData(target, physBufferByteOffset, data);\n            }\n            virtBufferByteOffset += dstPageByteSize;\n            physBufferByteOffset = 0;\n            srcByteOffset += dstPageByteSize;\n            this.device['debugGroupStatisticsBufferUpload']();\n        }\n    };\n    Buffer_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        for (var i = 0; i < this.gl_buffer_pages.length; i++) {\n            // no ubo in WebGL1\n            // @ts-ignore\n            if (!this.gl_buffer_pages[i].ubo) {\n                this.device.gl.deleteBuffer(this.gl_buffer_pages[i]);\n            }\n        }\n        this.gl_buffer_pages = [];\n    };\n    Buffer_GL.prototype.createBufferPage = function (byteSize, usage, hint) {\n        var gl = this.device.gl;\n        var isUBO = usage & BufferUsage.UNIFORM;\n        if (!isWebGL2(gl) && isUBO) {\n            return {\n                ubo: true,\n            };\n        }\n        else {\n            var gl_buffer = this.device.ensureResourceExists(gl.createBuffer());\n            var gl_target = translateBufferUsageToTarget(usage);\n            var gl_hint = translateBufferHint(hint);\n            gl.bindBuffer(gl_target, gl_buffer);\n            gl.bufferData(gl_target, byteSize, gl_hint);\n            return gl_buffer;\n        }\n    };\n    return Buffer_GL;\n}(ResourceBase_GL));\n\nvar InputLayout_GL = /** @class */ (function (_super) {\n    __extends(InputLayout_GL, _super);\n    function InputLayout_GL(_a) {\n        var e_1, _b, e_2, _c;\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _d;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.InputLayout;\n        var vertexBufferDescriptors = descriptor.vertexBufferDescriptors, indexBufferFormat = descriptor.indexBufferFormat, program = descriptor.program;\n        assert(indexBufferFormat === Format.U16_R ||\n            indexBufferFormat === Format.U32_R ||\n            indexBufferFormat === null);\n        var indexBufferType = indexBufferFormat !== null\n            ? translateIndexFormat$1(indexBufferFormat)\n            : null;\n        var indexBufferCompByteSize = indexBufferFormat !== null\n            ? getFormatCompByteSize(indexBufferFormat)\n            : null;\n        var gl = _this.device.gl;\n        var vao = _this.device.ensureResourceExists(isWebGL2(gl)\n            ? gl.createVertexArray()\n            : device.OES_vertex_array_object.createVertexArrayOES());\n        if (isWebGL2(gl)) {\n            gl.bindVertexArray(vao);\n        }\n        else {\n            device.OES_vertex_array_object.bindVertexArrayOES(vao);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, getPlatformBuffer$1(_this.device['fallbackVertexBuffer']));\n        try {\n            // const vertexBufferFormats = [];\n            for (var _e = __values(descriptor.vertexBufferDescriptors), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var vertexBufferDescriptor = _f.value;\n                var stepMode = vertexBufferDescriptor.stepMode, attributes = vertexBufferDescriptor.attributes;\n                try {\n                    for (var attributes_1 = (e_2 = void 0, __values(attributes)), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n                        var attribute = attributes_1_1.value;\n                        var shaderLocation = attribute.shaderLocation, format = attribute.format, _g = attribute.divisor, divisor = _g === void 0 ? 1 : _g;\n                        // find location by name in WebGL1\n                        var location_1 = isWebGL2(gl)\n                            ? shaderLocation\n                            : (_d = program.attributes[shaderLocation]) === null || _d === void 0 ? void 0 : _d.location;\n                        var vertexFormat = translateVertexFormat$1(format);\n                        // @ts-ignore\n                        attribute.vertexFormat = vertexFormat;\n                        if (!isNil(location_1)) {\n                            if (isFormatSizedInteger(format)) {\n                                // See https://groups.google.com/d/msg/angleproject/yQb5DaCzcWg/Ova0E3wcAQAJ for more info.\n                                // console.warn(\"Vertex format uses sized integer types; this will cause a shader recompile on ANGLE platforms\");\n                                // debugger;\n                            }\n                            var size = vertexFormat.size, type = vertexFormat.type, normalized = vertexFormat.normalized;\n                            gl.vertexAttribPointer(location_1, size, type, normalized, 0, 0);\n                            if (stepMode === VertexStepMode.INSTANCE) {\n                                if (isWebGL2(gl)) {\n                                    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor\n                                    gl.vertexAttribDivisor(location_1, divisor);\n                                }\n                                else {\n                                    device.ANGLE_instanced_arrays.vertexAttribDivisorANGLE(location_1, divisor);\n                                }\n                            }\n                            gl.enableVertexAttribArray(location_1);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (attributes_1_1 && !attributes_1_1.done && (_c = attributes_1.return)) _c.call(attributes_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isWebGL2(gl)) {\n            gl.bindVertexArray(null);\n        }\n        else {\n            device.OES_vertex_array_object.bindVertexArrayOES(null);\n        }\n        _this.vertexBufferDescriptors = vertexBufferDescriptors;\n        _this.vao = vao;\n        _this.indexBufferFormat = indexBufferFormat;\n        _this.indexBufferType = indexBufferType;\n        _this.indexBufferCompByteSize = indexBufferCompByteSize;\n        _this.program = program;\n        return _this;\n    }\n    InputLayout_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.device['currentBoundVAO'] === this.vao) {\n            if (isWebGL2(this.device.gl)) {\n                this.device.gl.bindVertexArray(null);\n                this.device.gl.deleteVertexArray(this.vao);\n            }\n            else {\n                this.device.OES_vertex_array_object.bindVertexArrayOES(null);\n                this.device.OES_vertex_array_object.deleteVertexArrayOES(this.vao);\n            }\n            this.device['currentBoundVAO'] = null;\n        }\n    };\n    return InputLayout_GL;\n}(ResourceBase_GL));\n\nvar Texture_GL = /** @class */ (function (_super) {\n    __extends(Texture_GL, _super);\n    function Texture_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor, fake = _a.fake;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Texture;\n        // Default values.\n        descriptor = __assign({ dimension: TextureDimension.TEXTURE_2D, depthOrArrayLayers: 1, mipLevelCount: 1 }, descriptor);\n        var gl = _this.device.gl;\n        var gl_target;\n        var gl_texture;\n        var mipLevelCount = _this.clampmipLevelCount(descriptor);\n        _this.immutable = descriptor.usage === TextureUsage.RENDER_TARGET;\n        _this.pixelStore = descriptor.pixelStore;\n        _this.format = descriptor.format;\n        _this.dimension = descriptor.dimension;\n        _this.formatKind = getFormatSamplerKind(descriptor.format);\n        _this.width = descriptor.width;\n        _this.height = descriptor.height;\n        _this.depthOrArrayLayers = descriptor.depthOrArrayLayers;\n        _this.mipmaps = mipLevelCount >= 1;\n        if (!fake) {\n            gl_texture = _this.device.ensureResourceExists(gl.createTexture());\n            var gl_type = _this.device.translateTextureType(descriptor.format);\n            var internalformat = _this.device.translateTextureInternalFormat(descriptor.format);\n            _this.device.setActiveTexture(gl.TEXTURE0);\n            _this.device['currentTextures'][0] = null;\n            _this.preprocessImage();\n            if (descriptor.dimension === TextureDimension.TEXTURE_2D) {\n                gl_target = GL.TEXTURE_2D;\n                gl.bindTexture(gl_target, gl_texture);\n                if (_this.immutable) {\n                    if (isWebGL2(gl)) {\n                        // texStorage2D will create an immutable texture(fixed size)\n                        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage2D\n                        // @see https://github.com/visgl/luma.gl/issues/193\n                        // @see https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_immutable.html\n                        gl.texStorage2D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height);\n                    }\n                    else {\n                        // texImage2D: level must be 0 for DEPTH_COMPONENT format\n                        // const level = internalformat === GL.DEPTH_COMPONENT || this.isNPOT() ? 0 : mipLevelCount;\n                        var level = internalformat === GL.DEPTH_COMPONENT || _this.isNPOT() ? 0 : 0;\n                        if ((_this.format === Format.D32F || _this.format === Format.D24_S8) &&\n                            !isWebGL2(gl) &&\n                            !device.WEBGL_depth_texture) ;\n                        else {\n                            // if (!isWebGL2(gl)) {\n                            //   if (internalformat === GL.RGBA4) {\n                            //     internalformat = GL.RGBA;\n                            //   }\n                            // }\n                            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n                            gl.texImage2D(gl_target, level, internalformat, descriptor.width, descriptor.height, 0, internalformat, gl_type, null);\n                            // @see https://stackoverflow.com/questions/21954036/dartweb-gl-render-warning-texture-bound-to-texture-unit-0-is-not-renderable\n                            // [.WebGL-0x106ad0400]RENDER WARNING: texture bound to texture unit 0 is not renderable. It might be non-power-of-2 or have incompatible texture filtering (maybe)?\n                            if (_this.mipmaps) {\n                                _this.mipmaps = false;\n                                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n                                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\n                                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\n                            }\n                        }\n                    }\n                }\n                assert(descriptor.depthOrArrayLayers === 1);\n            }\n            else if (descriptor.dimension === TextureDimension.TEXTURE_2D_ARRAY) {\n                gl_target = GL.TEXTURE_2D_ARRAY;\n                gl.bindTexture(gl_target, gl_texture);\n                if (_this.immutable) {\n                    if (isWebGL2(gl)) {\n                        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/texStorage3D\n                        gl.texStorage3D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height, descriptor.depthOrArrayLayers);\n                    }\n                }\n            }\n            else if (descriptor.dimension === TextureDimension.TEXTURE_3D) {\n                gl_target = GL.TEXTURE_3D;\n                gl.bindTexture(gl_target, gl_texture);\n                if (_this.immutable) {\n                    if (isWebGL2(gl)) {\n                        gl.texStorage3D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height, descriptor.depthOrArrayLayers);\n                    }\n                }\n            }\n            else if (descriptor.dimension === TextureDimension.TEXTURE_CUBE_MAP) {\n                gl_target = GL.TEXTURE_CUBE_MAP;\n                gl.bindTexture(gl_target, gl_texture);\n                if (_this.immutable) {\n                    if (isWebGL2(gl)) {\n                        gl.texStorage2D(gl_target, mipLevelCount, internalformat, descriptor.width, descriptor.height);\n                    }\n                }\n                assert(descriptor.depthOrArrayLayers === 6);\n            }\n            else {\n                throw new Error('whoops');\n            }\n        }\n        _this.gl_texture = gl_texture;\n        _this.gl_target = gl_target;\n        _this.mipLevelCount = mipLevelCount;\n        return _this;\n    }\n    Texture_GL.prototype.setImageData = function (levelDatas, lod) {\n        if (lod === void 0) { lod = 0; }\n        var gl = this.device.gl;\n        isTextureFormatCompressed(this.format);\n        // @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-2.md#3d-texture\n        var is3D = this.gl_target === GL.TEXTURE_3D ||\n            this.gl_target === GL.TEXTURE_2D_ARRAY;\n        var isCube = this.gl_target === GL.TEXTURE_CUBE_MAP;\n        var isTA = isTypedArray(levelDatas[0]);\n        this.device.setActiveTexture(gl.TEXTURE0);\n        this.device['currentTextures'][0] = null;\n        var data = levelDatas[0];\n        var width;\n        var height;\n        if (isTA) {\n            width = this.width;\n            height = this.height;\n        }\n        else {\n            // FIXME: Property 'width' does not exist on type 'TexImageSource'.\n            // Property 'width' does not exist on type 'VideoFrame'.\n            // @ts-ignore\n            width = data.width;\n            // @ts-ignore\n            height = data.height;\n            // update size\n            this.width = width;\n            this.height = height;\n        }\n        gl.bindTexture(this.gl_target, this.gl_texture);\n        var gl_format = this.device.translateTextureFormat(this.format);\n        // In WebGL 1, this must be the same as internalformat\n        var gl_internal_format = isWebGL2(gl)\n            ? this.device.translateInternalTextureFormat(this.format)\n            : gl_format;\n        var gl_type = this.device.translateTextureType(this.format);\n        this.preprocessImage();\n        for (var z = 0; z < this.depthOrArrayLayers; z++) {\n            var levelData = levelDatas[z];\n            var gl_target = this.gl_target;\n            if (isCube) {\n                gl_target = GL.TEXTURE_CUBE_MAP_POSITIVE_X + (z % 6);\n            }\n            if (this.immutable) {\n                // must use texSubImage2D instead of texImage2D, since texture is immutable\n                // @see https://stackoverflow.com/questions/56123201/unity-plugin-texture-is-immutable?rq=1\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D\n                gl.texSubImage2D(gl_target, lod, 0, 0, width, height, gl_format, gl_type, levelData);\n            }\n            else {\n                if (isWebGL2(gl)) {\n                    if (is3D) {\n                        gl.texImage3D(gl_target, lod, gl_internal_format, width, height, this.depthOrArrayLayers, 0, // border must be 0\n                        gl_format, // TODO: can be different with gl_format\n                        gl_type, levelData);\n                    }\n                    else {\n                        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n                        gl.texImage2D(gl_target, lod, gl_internal_format, width, height, 0, // border must be 0\n                        gl_format, // TODO: can be different with gl_format\n                        gl_type, levelData);\n                    }\n                }\n                else {\n                    // WebGL1: upload Array & Image separately\n                    if (isTA) {\n                        gl.texImage2D(gl_target, lod, gl_format, width, height, 0, gl_format, gl_type, levelData);\n                    }\n                    else {\n                        gl.texImage2D(gl_target, lod, gl_format, gl_format, gl_type, levelData);\n                    }\n                }\n            }\n        }\n        if (this.mipmaps) {\n            this.generateMipmap(is3D);\n        }\n    };\n    Texture_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.device.gl.deleteTexture(getPlatformTexture(this));\n    };\n    Texture_GL.prototype.clampmipLevelCount = function (descriptor) {\n        if (descriptor.dimension === TextureDimension.TEXTURE_2D_ARRAY &&\n            descriptor.depthOrArrayLayers > 1) {\n            var typeFlags = getFormatTypeFlags(descriptor.format);\n            if (typeFlags === FormatTypeFlags.BC1) {\n                // Chrome/ANGLE seems to have issues with compressed miplevels of size 1/2, so clamp before they arrive...\n                // https://bugs.chromium.org/p/angleproject/issues/detail?id=4056\n                var w = descriptor.width, h = descriptor.height;\n                for (var i = 0; i < descriptor.mipLevelCount; i++) {\n                    if (w <= 2 || h <= 2)\n                        return i - 1;\n                    w = Math.max((w / 2) | 0, 1);\n                    h = Math.max((h / 2) | 0, 1);\n                }\n            }\n        }\n        return descriptor.mipLevelCount;\n    };\n    Texture_GL.prototype.preprocessImage = function () {\n        var gl = this.device.gl;\n        if (this.pixelStore) {\n            if (this.pixelStore.unpackFlipY) {\n                gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, true);\n            }\n            if (this.pixelStore.packAlignment) {\n                gl.pixelStorei(GL.PACK_ALIGNMENT, this.pixelStore.packAlignment);\n            }\n            if (this.pixelStore.unpackAlignment) {\n                gl.pixelStorei(GL.UNPACK_ALIGNMENT, this.pixelStore.unpackAlignment);\n            }\n        }\n    };\n    Texture_GL.prototype.generateMipmap = function (is3D) {\n        if (is3D === void 0) { is3D = false; }\n        var gl = this.device.gl;\n        if (!isWebGL2(gl) && this.isNPOT()) {\n            return this;\n        }\n        if (this.gl_texture && this.gl_target) {\n            gl.bindTexture(this.gl_target, this.gl_texture);\n            if (is3D) {\n                gl.texParameteri(this.gl_target, GL.TEXTURE_BASE_LEVEL, 0);\n                gl.texParameteri(this.gl_target, GL.TEXTURE_MAX_LEVEL, Math.log2(this.width));\n                gl.texParameteri(this.gl_target, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_LINEAR);\n                gl.texParameteri(this.gl_target, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\n            }\n            else {\n                gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST_MIPMAP_LINEAR);\n            }\n            gl.generateMipmap(this.gl_target);\n            gl.bindTexture(this.gl_target, null);\n        }\n        return this;\n    };\n    Texture_GL.prototype.isNPOT = function () {\n        var gl = this.device.gl;\n        if (isWebGL2(gl)) {\n            // NPOT restriction is only for WebGL1\n            return false;\n        }\n        return !isPowerOfTwo(this.width) || !isPowerOfTwo(this.height);\n    };\n    return Texture_GL;\n}(ResourceBase_GL));\n\nvar RenderTarget_GL = /** @class */ (function (_super) {\n    __extends(RenderTarget_GL, _super);\n    function RenderTarget_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.RenderTarget;\n        _this.gl_renderbuffer = null;\n        _this.texture = null;\n        var gl = _this.device.gl;\n        var format = descriptor.format, width = descriptor.width, height = descriptor.height, _b = descriptor.sampleCount, sampleCount = _b === void 0 ? 1 : _b, texture = descriptor.texture;\n        var useRenderbuffer = false;\n        // @see https://blog.tojicode.com/2012/07/using-webgldepthtexture.html\n        if ((format === Format.D32F || format === Format.D24_S8) &&\n            texture &&\n            !isWebGL2(gl) &&\n            !device.WEBGL_depth_texture) {\n            texture.destroy();\n            _this.texture = null;\n            useRenderbuffer = true;\n        }\n        if (!useRenderbuffer && texture) {\n            _this.texture = texture;\n        }\n        else {\n            _this.gl_renderbuffer = _this.device.ensureResourceExists(gl.createRenderbuffer());\n            gl.bindRenderbuffer(gl.RENDERBUFFER, _this.gl_renderbuffer);\n            var gl_format = _this.device.translateTextureInternalFormat(format, true);\n            if (isWebGL2(gl)) {\n                if (sampleCount > 1) {\n                    // @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-2.md#multisampled-renderbuffers\n                    gl.renderbufferStorageMultisample(GL.RENDERBUFFER, sampleCount, gl_format, width, height);\n                }\n                else {\n                    gl.renderbufferStorage(GL.RENDERBUFFER, gl_format, width, height);\n                }\n            }\n            else {\n                // WebGL1 can only use FXAA or other post-processing methods\n                gl.renderbufferStorage(GL.RENDERBUFFER, gl_format, width, height);\n            }\n        }\n        _this.format = format;\n        _this.width = width;\n        _this.height = height;\n        _this.sampleCount = sampleCount;\n        return _this;\n    }\n    RenderTarget_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.gl_renderbuffer !== null) {\n            this.device.gl.deleteRenderbuffer(this.gl_renderbuffer);\n        }\n        if (this.texture) {\n            this.texture.destroy();\n        }\n    };\n    return RenderTarget_GL;\n}(ResourceBase_GL));\n\n// const quadVert = `\n// layout(location = 0) in vec2 a_Position;\n// out vec2 v_TexCoord;\n// void main() {\n//   v_TexCoord = 0.5 * (a_Position + 1.0);\n//   gl_Position = vec4(a_Position, 0., 1.);\n//   #ifdef VIEWPORT_ORIGIN_TL\n//     v_TexCoord.y = 1.0 - v_TexCoord.y;\n//   #endif\n// }\n// `;\nvar ProgramCompileState_GL;\n(function (ProgramCompileState_GL) {\n    ProgramCompileState_GL[ProgramCompileState_GL[\"NeedsCompile\"] = 0] = \"NeedsCompile\";\n    ProgramCompileState_GL[ProgramCompileState_GL[\"Compiling\"] = 1] = \"Compiling\";\n    ProgramCompileState_GL[ProgramCompileState_GL[\"NeedsBind\"] = 2] = \"NeedsBind\";\n    ProgramCompileState_GL[ProgramCompileState_GL[\"ReadyToUse\"] = 3] = \"ReadyToUse\";\n})(ProgramCompileState_GL || (ProgramCompileState_GL = {}));\nvar Program_GL = /** @class */ (function (_super) {\n    __extends(Program_GL, _super);\n    function Program_GL(_a, rawVertexGLSL) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.rawVertexGLSL = rawVertexGLSL;\n        _this.type = ResourceType.Program;\n        // eslint-disable-next-line\n        _this.uniformSetters = {};\n        _this.attributes = [];\n        var gl = _this.device.gl;\n        _this.descriptor = descriptor;\n        _this.gl_program = _this.device.ensureResourceExists(gl.createProgram());\n        _this.gl_shader_vert = null;\n        _this.gl_shader_frag = null;\n        _this.compileState = ProgramCompileState_GL.NeedsCompile;\n        _this.tryCompileProgram();\n        return _this;\n    }\n    Program_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.device.gl.deleteProgram(this.gl_program);\n        this.device.gl.deleteShader(this.gl_shader_vert);\n        this.device.gl.deleteShader(this.gl_shader_frag);\n    };\n    Program_GL.prototype.tryCompileProgram = function () {\n        assert(this.compileState === ProgramCompileState_GL.NeedsCompile);\n        var _a = this.descriptor, vertex = _a.vertex, fragment = _a.fragment;\n        var gl = this.device.gl;\n        // if (this.gl_shader_vert !== null) gl.deleteShader(this.gl_shader_vert);\n        // if (this.gl_shader_frag !== null) gl.deleteShader(this.gl_shader_frag);\n        if ((vertex === null || vertex === void 0 ? void 0 : vertex.glsl) && (fragment === null || fragment === void 0 ? void 0 : fragment.glsl)) {\n            this.gl_shader_vert = this.compileShader(vertex.postprocess ? vertex.postprocess(vertex.glsl) : vertex.glsl, gl.VERTEX_SHADER);\n            this.gl_shader_frag = this.compileShader(fragment.postprocess\n                ? fragment.postprocess(fragment.glsl)\n                : fragment.glsl, gl.FRAGMENT_SHADER);\n            gl.attachShader(this.gl_program, this.gl_shader_vert);\n            gl.attachShader(this.gl_program, this.gl_shader_frag);\n            gl.linkProgram(this.gl_program);\n            this.compileState = ProgramCompileState_GL.Compiling;\n            if (!isWebGL2(gl)) {\n                // extract uniforms\n                this.readUniformLocationsFromLinkedProgram();\n                // extract attributes\n                this.readAttributesFromLinkedProgram();\n            }\n        }\n    };\n    Program_GL.prototype.readAttributesFromLinkedProgram = function () {\n        var _a;\n        var gl = this.device.gl;\n        var count = gl.getProgramParameter(this.gl_program, gl.ACTIVE_ATTRIBUTES);\n        var defines = getDefines(this.descriptor.vertex.glsl);\n        var locations = getAttributeLocations(\n        // Use raw GLSL\n        this.rawVertexGLSL, defines);\n        var _loop_1 = function (index) {\n            var _b = gl.getActiveAttrib(this_1.gl_program, index), name_1 = _b.name, type = _b.type, size = _b.size;\n            var location_1 = gl.getAttribLocation(this_1.gl_program, name_1);\n            var definedLocation = (_a = locations.find(function (l) { return l.name === name_1; })) === null || _a === void 0 ? void 0 : _a.location;\n            // Add only user provided attributes, for built-in attributes like\n            // `gl_InstanceID` locaiton will be < 0\n            if (location_1 >= 0 && !isNil(definedLocation)) {\n                this_1.attributes[definedLocation] = {\n                    name: name_1,\n                    location: location_1,\n                    type: type,\n                    size: size,\n                };\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < count; index++) {\n            _loop_1(index);\n        }\n    };\n    Program_GL.prototype.readUniformLocationsFromLinkedProgram = function () {\n        var gl = this.device.gl;\n        var numUniforms = gl.getProgramParameter(this.gl_program, gl.ACTIVE_UNIFORMS);\n        for (var i = 0; i < numUniforms; i++) {\n            var info = gl.getActiveUniform(this.gl_program, i);\n            var name_2 = parseUniformName(info.name).name;\n            var location_2 = gl.getUniformLocation(this.gl_program, name_2);\n            this.uniformSetters[name_2] = getUniformSetter(gl, location_2, info);\n            if (info && info.size > 1) {\n                for (var l = 0; l < info.size; l++) {\n                    location_2 = gl.getUniformLocation(this.gl_program, \"\".concat(name_2, \"[\").concat(l, \"]\"));\n                    this.uniformSetters[\"\".concat(name_2, \"[\").concat(l, \"]\")] = getUniformSetter(gl, location_2, info);\n                }\n            }\n        }\n    };\n    Program_GL.prototype.compileShader = function (contents, type) {\n        var gl = this.device.gl;\n        var shader = this.device.ensureResourceExists(gl.createShader(type));\n        gl.shaderSource(shader, contents);\n        gl.compileShader(shader);\n        return shader;\n    };\n    // eslint-disable-next-line\n    Program_GL.prototype.setUniformsLegacy = function (uniforms) {\n        if (uniforms === void 0) { uniforms = {}; }\n        var gl = this.device.gl;\n        if (!isWebGL2(gl)) {\n            var programUsed = false;\n            for (var uniformName in uniforms) {\n                if (!programUsed) {\n                    gl.useProgram(this.gl_program);\n                    programUsed = true;\n                }\n                var uniform = uniforms[uniformName];\n                var uniformSetter = this.uniformSetters[uniformName];\n                if (uniformSetter) {\n                    var value = uniform;\n                    if (value instanceof Texture_GL) {\n                        value = value.textureIndex;\n                    }\n                    uniformSetter(value);\n                }\n            }\n        }\n        return this;\n    };\n    return Program_GL;\n}(ResourceBase_GL));\n\nvar QueryPool_GL = /** @class */ (function (_super) {\n    __extends(QueryPool_GL, _super);\n    function QueryPool_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.QueryPool;\n        var gl = _this.device.gl;\n        if (isWebGL2(gl)) {\n            var elemCount = descriptor.elemCount, type = descriptor.type;\n            _this.gl_query = nArray(elemCount, function () {\n                return _this.device.ensureResourceExists(gl.createQuery());\n            });\n            _this.gl_query_type = translateQueryPoolType$1(type);\n        }\n        return _this;\n    }\n    QueryPool_GL.prototype.queryResultOcclusion = function (dstOffs) {\n        var gl = this.device.gl;\n        if (isWebGL2(gl)) {\n            var gl_query = this.gl_query[dstOffs];\n            if (!gl.getQueryParameter(gl_query, gl.QUERY_RESULT_AVAILABLE)) {\n                return null;\n            }\n            return !!gl.getQueryParameter(gl_query, gl.QUERY_RESULT);\n        }\n        return null;\n    };\n    QueryPool_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        var gl = this.device.gl;\n        if (isWebGL2(gl)) {\n            for (var i = 0; i < this.gl_query.length; i++) {\n                gl.deleteQuery(this.gl_query[i]);\n            }\n        }\n    };\n    return QueryPool_GL;\n}(ResourceBase_GL));\n\nvar Readback_GL = /** @class */ (function (_super) {\n    __extends(Readback_GL, _super);\n    function Readback_GL(_a) {\n        var id = _a.id, device = _a.device;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Readback;\n        _this.gl_pbo = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLSync\n        _this.gl_sync = null;\n        return _this;\n    }\n    Readback_GL.prototype.clientWaitAsync = function (sync, flags, interval_ms) {\n        if (flags === void 0) { flags = 0; }\n        if (interval_ms === void 0) { interval_ms = 10; }\n        var gl = this.device.gl;\n        return new Promise(function (resolve, reject) {\n            function test() {\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/clientWaitSync\n                var res = gl.clientWaitSync(sync, flags, 0);\n                if (res == gl.WAIT_FAILED) {\n                    reject();\n                    return;\n                }\n                if (res == gl.TIMEOUT_EXPIRED) {\n                    setTimeout(test, clamp(interval_ms, 0, gl.MAX_CLIENT_WAIT_TIMEOUT_WEBGL));\n                    return;\n                }\n                resolve();\n            }\n            test();\n        });\n    };\n    Readback_GL.prototype.getBufferSubDataAsync = function (target, buffer, srcByteOffset, dstBuffer, dstOffset, length) {\n        return __awaiter(this, void 0, void 0, function () {\n            var gl;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        gl = this.device.gl;\n                        if (!isWebGL2(gl)) return [3 /*break*/, 2];\n                        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/fenceSync\n                        this.gl_sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n                        gl.flush();\n                        return [4 /*yield*/, this.clientWaitAsync(this.gl_sync, 0, 10)];\n                    case 1:\n                        _a.sent();\n                        gl.bindBuffer(target, buffer);\n                        gl.getBufferSubData(target, srcByteOffset, dstBuffer, dstOffset, length);\n                        gl.bindBuffer(target, null);\n                        return [2 /*return*/, dstBuffer];\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#use_non-blocking_async_data_readback\n     */\n    Readback_GL.prototype.readTexture = function (t, x, y, width, height, dstBuffer, dstOffset, length) {\n        if (dstOffset === void 0) { dstOffset = 0; }\n        if (length === void 0) { length = dstBuffer.byteLength || 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var gl, texture, gl_format, gl_type, formatByteSize;\n            return __generator(this, function (_a) {\n                gl = this.device.gl;\n                texture = t;\n                gl_format = this.device.translateTextureFormat(texture.format);\n                gl_type = this.device.translateTextureType(texture.format);\n                formatByteSize = getFormatByteSize(texture.format);\n                if (isWebGL2(gl)) {\n                    this.gl_pbo = this.device.ensureResourceExists(gl.createBuffer());\n                    // PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations\n                    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer\n                    gl.bindBuffer(gl.PIXEL_PACK_BUFFER, this.gl_pbo);\n                    // STREAM_READ: The contents are intended to be specified once by reading data from WebGL, and queried at most a few times by the application\n                    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData\n                    gl.bufferData(gl.PIXEL_PACK_BUFFER, length, gl.STREAM_READ);\n                    gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n                    gl.bindFramebuffer(GL.READ_FRAMEBUFFER, this.device['readbackFramebuffer']);\n                    gl.framebufferTexture2D(GL.READ_FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture.gl_texture, 0);\n                    gl.bindBuffer(gl.PIXEL_PACK_BUFFER, this.gl_pbo);\n                    gl.readPixels(x, y, width, height, gl_format, gl_type, dstOffset * formatByteSize);\n                    gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n                    return [2 /*return*/, this.getBufferSubDataAsync(gl.PIXEL_PACK_BUFFER, this.gl_pbo, 0, dstBuffer, dstOffset, 0)];\n                }\n                else {\n                    return [2 /*return*/, this.readTextureSync(t, x, y, width, height, dstBuffer, dstOffset, length)];\n                }\n            });\n        });\n    };\n    Readback_GL.prototype.readTextureSync = function (t, x, y, width, height, dstBuffer, dstOffset, length) {\n        if (length === void 0) { length = dstBuffer.byteLength || 0; }\n        var gl = this.device.gl;\n        var texture = t;\n        var gl_type = this.device.translateTextureType(texture.format);\n        gl.bindFramebuffer(GL.FRAMEBUFFER, this.device['readbackFramebuffer']);\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture.gl_texture, 0);\n        // slow requires roundtrip to GPU\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n        gl.pixelStorei(gl.PACK_ALIGNMENT, 4);\n        gl.readPixels(x, y, width, height, gl.RGBA, gl_type, dstBuffer);\n        return dstBuffer;\n    };\n    Readback_GL.prototype.readBuffer = function (b, srcByteOffset, dstBuffer, dstOffset, length) {\n        return __awaiter(this, void 0, void 0, function () {\n            var gl;\n            return __generator(this, function (_a) {\n                gl = this.device.gl;\n                if (isWebGL2(gl)) {\n                    return [2 /*return*/, this.getBufferSubDataAsync(gl.ARRAY_BUFFER, getPlatformBuffer$1(b, srcByteOffset), srcByteOffset, dstBuffer, dstOffset, length)];\n                }\n                // TODO: WebGL1\n                return [2 /*return*/, Promise.reject()];\n            });\n        });\n    };\n    Readback_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (isWebGL2(this.device.gl)) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/deleteSync\n            if (this.gl_sync !== null) {\n                this.device.gl.deleteSync(this.gl_sync);\n            }\n            if (this.gl_pbo !== null) {\n                this.device.gl.deleteBuffer(this.gl_pbo);\n            }\n        }\n    };\n    return Readback_GL;\n}(ResourceBase_GL));\n\nvar RenderPipeline_GL = /** @class */ (function (_super) {\n    __extends(RenderPipeline_GL, _super);\n    function RenderPipeline_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _b, _c;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.RenderPipeline;\n        _this.drawMode = translatePrimitiveTopology((_b = descriptor.topology) !== null && _b !== void 0 ? _b : PrimitiveTopology.TRIANGLES);\n        _this.program = descriptor.program;\n        _this.inputLayout = descriptor.inputLayout;\n        _this.megaState = __assign(__assign({}, copyMegaState(defaultMegaState)), descriptor.megaStateDescriptor);\n        _this.colorAttachmentFormats = descriptor.colorAttachmentFormats.slice();\n        _this.depthStencilAttachmentFormat = descriptor.depthStencilAttachmentFormat;\n        _this.sampleCount = (_c = descriptor.sampleCount) !== null && _c !== void 0 ? _c : 1;\n        return _this;\n    }\n    return RenderPipeline_GL;\n}(ResourceBase_GL));\n\nvar ComputePipeline_GL = /** @class */ (function (_super) {\n    __extends(ComputePipeline_GL, _super);\n    function ComputePipeline_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.ComputePipeline;\n        _this.descriptor = descriptor;\n        return _this;\n        // const program = descriptor.program as Program_GL;\n    }\n    return ComputePipeline_GL;\n}(ResourceBase_GL));\n\nvar ResourceCreationTracker = /** @class */ (function () {\n    function ResourceCreationTracker() {\n        this.liveObjects = new Set();\n        this.creationStacks = new Map();\n        this.deletionStacks = new Map();\n    }\n    ResourceCreationTracker.prototype.trackResourceCreated = function (o) {\n        this.creationStacks.set(o, new Error().stack);\n        this.liveObjects.add(o);\n    };\n    ResourceCreationTracker.prototype.trackResourceDestroyed = function (o) {\n        if (this.deletionStacks.has(o))\n            console.warn(\"Object double freed:\", o, \"\\n\\nCreation stack: \", this.creationStacks.get(o), \"\\n\\nDeletion stack: \", this.deletionStacks.get(o), \"\\n\\nThis stack: \", new Error().stack);\n        this.deletionStacks.set(o, new Error().stack);\n        this.liveObjects.delete(o);\n    };\n    ResourceCreationTracker.prototype.checkForLeaks = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this.liveObjects.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var o = _c.value;\n                console.warn('Object leaked:', o, 'Creation stack:', this.creationStacks.get(o));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    ResourceCreationTracker.prototype.setResourceLeakCheck = function (o, v) {\n        if (v) {\n            this.liveObjects.add(o);\n        }\n        else {\n            this.liveObjects.delete(o);\n        }\n    };\n    return ResourceCreationTracker;\n}());\n\n/**\n * In WebGL 1 texture image data and sampling information are both stored in texture objects\n * @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-2.md#sampler-objects\n */\nvar Sampler_GL = /** @class */ (function (_super) {\n    __extends(Sampler_GL, _super);\n    function Sampler_GL(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _b, _c;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Sampler;\n        var gl = _this.device.gl;\n        if (isWebGL2(gl)) {\n            var gl_sampler = _this.device.ensureResourceExists(gl.createSampler());\n            gl.samplerParameteri(gl_sampler, GL.TEXTURE_WRAP_S, translateAddressMode$1(descriptor.addressModeU));\n            gl.samplerParameteri(gl_sampler, GL.TEXTURE_WRAP_T, translateAddressMode$1(descriptor.addressModeV));\n            gl.samplerParameteri(gl_sampler, GL.TEXTURE_WRAP_R, translateAddressMode$1((_b = descriptor.addressModeW) !== null && _b !== void 0 ? _b : descriptor.addressModeU));\n            gl.samplerParameteri(gl_sampler, GL.TEXTURE_MIN_FILTER, translateFilterMode(descriptor.minFilter, descriptor.mipmapFilter));\n            gl.samplerParameteri(gl_sampler, GL.TEXTURE_MAG_FILTER, translateFilterMode(descriptor.magFilter, MipmapFilterMode.NO_MIP));\n            if (descriptor.lodMinClamp !== undefined) {\n                gl.samplerParameterf(gl_sampler, GL.TEXTURE_MIN_LOD, descriptor.lodMinClamp);\n            }\n            if (descriptor.lodMaxClamp !== undefined) {\n                gl.samplerParameterf(gl_sampler, GL.TEXTURE_MAX_LOD, descriptor.lodMaxClamp);\n            }\n            if (descriptor.compareFunction !== undefined) {\n                gl.samplerParameteri(gl_sampler, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                gl.samplerParameteri(gl_sampler, gl.TEXTURE_COMPARE_FUNC, descriptor.compareFunction);\n            }\n            var maxAnisotropy = (_c = descriptor.maxAnisotropy) !== null && _c !== void 0 ? _c : 1;\n            if (maxAnisotropy > 1 &&\n                _this.device.EXT_texture_filter_anisotropic !== null) {\n                assert(descriptor.minFilter === FilterMode.BILINEAR &&\n                    descriptor.magFilter === FilterMode.BILINEAR &&\n                    descriptor.mipmapFilter === MipmapFilterMode.LINEAR);\n                gl.samplerParameterf(gl_sampler, _this.device.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, maxAnisotropy);\n            }\n            _this.gl_sampler = gl_sampler;\n        }\n        else {\n            // use later in WebGL1\n            _this.descriptor = descriptor;\n        }\n        return _this;\n    }\n    Sampler_GL.prototype.setTextureParameters = function (gl_target, width, height) {\n        var _a;\n        var gl = this.device.gl;\n        var descriptor = this.descriptor;\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL#%E9%9D%9E2%E7%9A%84%E5%B9%82%E7%BA%B9%E7%90%86\n        if (this.isNPOT(width, height)) {\n            gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR);\n        }\n        else {\n            gl.texParameteri(gl_target, GL.TEXTURE_MIN_FILTER, translateFilterMode(descriptor.minFilter, descriptor.mipmapFilter));\n        }\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, translateAddressMode$1(descriptor.addressModeU));\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, translateAddressMode$1(descriptor.addressModeV));\n        gl.texParameteri(gl_target, GL.TEXTURE_MAG_FILTER, translateFilterMode(descriptor.magFilter, MipmapFilterMode.NO_MIP));\n        // if (descriptor.lodMinClamp !== undefined) {\n        //   gl.texParameterf(gl_target, GL.TEXTURE_MIN_LOD, descriptor.lodMinClamp);\n        // }\n        // if (descriptor.lodMaxClamp !== undefined) {\n        //   gl.texParameterf(gl_target, GL.TEXTURE_MAX_LOD, descriptor.lodMaxClamp);\n        // }\n        var maxAnisotropy = (_a = descriptor.maxAnisotropy) !== null && _a !== void 0 ? _a : 1;\n        if (maxAnisotropy > 1 &&\n            this.device.EXT_texture_filter_anisotropic !== null) {\n            assert(descriptor.minFilter === FilterMode.BILINEAR &&\n                descriptor.magFilter === FilterMode.BILINEAR &&\n                descriptor.mipmapFilter === MipmapFilterMode.LINEAR);\n            gl.texParameteri(gl_target, this.device.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, maxAnisotropy);\n        }\n    };\n    Sampler_GL.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (isWebGL2(this.device.gl)) {\n            this.device.gl.deleteSampler(getPlatformSampler$1(this));\n        }\n    };\n    Sampler_GL.prototype.isNPOT = function (width, height) {\n        return !isPowerOfTwo(width) || !isPowerOfTwo(height);\n    };\n    return Sampler_GL;\n}(ResourceBase_GL));\n\n// import { assert, assertExists } from '../api';\n// import type { ComputePipeline_GL } from './ComputePipeline';\nvar ComputePass_GL = /** @class */ (function () {\n    function ComputePass_GL() {\n    }\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpucomputepassencoder-dispatch\n     */\n    ComputePass_GL.prototype.dispatchWorkgroups = function (workgroupCountX, workgroupCountY, workgroupCountZ) { };\n    ComputePass_GL.prototype.dispatchWorkgroupsIndirect = function (indirectBuffer, indirectOffset) { };\n    ComputePass_GL.prototype.setPipeline = function (pipeline_) {\n        // const pipeline = pipeline_ as ComputePipeline_WebGPU;\n        // const gpuComputePipeline = assertExists(pipeline.gpuComputePipeline);\n        // this.gpuComputePassEncoder.setPipeline(gpuComputePipeline);\n    };\n    ComputePass_GL.prototype.setBindings = function (bindings_) {\n        // const bindings = bindings_ as Bindings_WebGPU;\n        // this.gpuComputePassEncoder.setBindGroup(bindingLayoutIndex, bindings.gpuBindGroup[0]);\n    };\n    ComputePass_GL.prototype.pushDebugGroup = function (name) { };\n    ComputePass_GL.prototype.popDebugGroup = function () { };\n    ComputePass_GL.prototype.insertDebugMarker = function (markerLabel) { };\n    return ComputePass_GL;\n}());\n\nvar RenderBundle_GL = /** @class */ (function (_super) {\n    __extends(RenderBundle_GL, _super);\n    function RenderBundle_GL() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = ResourceType.RenderBundle;\n        _this.commands = [];\n        return _this;\n    }\n    RenderBundle_GL.prototype.push = function (f) {\n        this.commands.push(f);\n    };\n    RenderBundle_GL.prototype.replay = function () {\n        this.commands.forEach(function (f) { return f(); });\n    };\n    return RenderBundle_GL;\n}(ResourceBase_GL));\n\n// This is a workaround for ANGLE not supporting UBOs greater than 64kb (the limit of D3D).\n// https://bugs.chromium.org/p/angleproject/issues/detail?id=3388\nvar UBO_PAGE_MAX_BYTE_SIZE = 0x10000;\n/**\n * Extract uniform blocks from shader source.\n *\n * @example\n * ```glsl\n * layout(std140) uniform CommonUniforms {\n    float u_blur;\n  };\n * ```\n */\nvar UNIFROM_BLOCK_REGEXP = /uniform(?:\\s+)(\\w+)(?:\\s?){([^]*?)}/g;\nvar Device_GL = /** @class */ (function () {\n    function Device_GL(gl, configuration) {\n        if (configuration === void 0) { configuration = {}; }\n        // Configuration\n        this.shaderDebug = false;\n        // GL extensions\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/OES_vertex_array_object\n        this.OES_vertex_array_object = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/ANGLE_instanced_arrays\n        this.ANGLE_instanced_arrays = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float\n        this.OES_texture_float = null;\n        // @see https://www.khronos.org/registry/webgl/extensions/OES_draw_buffers_indexed/\n        this.OES_draw_buffers_indexed = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers\n        this.WEBGL_draw_buffers = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n        this.WEBGL_depth_texture = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_color_buffer_float\n        this.WEBGL_color_buffer_float = null;\n        this.EXT_color_buffer_half_float = null;\n        this.WEBGL_compressed_texture_s3tc = null;\n        this.WEBGL_compressed_texture_s3tc_srgb = null;\n        this.EXT_texture_compression_rgtc = null;\n        this.EXT_texture_filter_anisotropic = null;\n        this.KHR_parallel_shader_compile = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_norm16\n        this.EXT_texture_norm16 = null;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_color_buffer_float\n        this.EXT_color_buffer_float = null;\n        this.OES_texture_float_linear = null;\n        this.OES_texture_half_float_linear = null;\n        // Swap Chain\n        this.scTexture = null;\n        this.scPlatformFramebuffer = null;\n        // Device\n        this.currentActiveTexture = null;\n        this.currentBoundVAO = null;\n        this.currentProgram = null;\n        this.resourceCreationTracker = null;\n        this.resourceUniqueId = 0;\n        // Cached GL driver state\n        this.currentColorAttachments = [];\n        this.currentColorAttachmentLevels = [];\n        this.currentColorResolveTos = [];\n        this.currentColorResolveToLevels = [];\n        this.currentSampleCount = -1;\n        this.currentIndexBufferByteOffset = null;\n        this.currentMegaState = copyMegaState(defaultMegaState);\n        this.currentSamplers = [];\n        this.currentTextures = [];\n        this.currentUniformBuffers = [];\n        this.currentUniformBufferByteOffsets = [];\n        this.currentUniformBufferByteSizes = [];\n        this.currentScissorEnabled = false;\n        this.currentStencilRef = null;\n        // Pass Execution\n        this.currentRenderPassDescriptor = null;\n        this.currentRenderPassDescriptorStack = [];\n        this.debugGroupStack = [];\n        this.resolveColorAttachmentsChanged = false;\n        this.resolveDepthStencilAttachmentsChanged = false;\n        this.explicitBindingLocations = false;\n        this.separateSamplerTextures = false;\n        this.viewportOrigin = ViewportOrigin.LOWER_LEFT;\n        this.clipSpaceNearZ = ClipSpaceNearZ.NEGATIVE_ONE;\n        this.supportMRT = false;\n        this.inBlitRenderPass = false;\n        this.supportedSampleCounts = [];\n        this.occlusionQueriesRecommended = false;\n        this.computeShadersSupported = false;\n        this.gl = gl;\n        this.contextAttributes = assertExists(gl.getContextAttributes());\n        if (!isWebGL2(gl)) {\n            this.OES_vertex_array_object = gl.getExtension('OES_vertex_array_object');\n            // TODO: when ANGLE_instanced_arrays unavailable...\n            this.ANGLE_instanced_arrays = gl.getExtension('ANGLE_instanced_arrays');\n            this.OES_texture_float = gl.getExtension('OES_texture_float');\n            this.WEBGL_draw_buffers = gl.getExtension('WEBGL_draw_buffers');\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n            this.WEBGL_depth_texture = gl.getExtension('WEBGL_depth_texture');\n            this.WEBGL_color_buffer_float = gl.getExtension('WEBGL_color_buffer_float');\n            this.EXT_color_buffer_half_float = gl.getExtension('EXT_color_buffer_half_float');\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_frag_depth\n            gl.getExtension('EXT_frag_depth');\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/OES_element_index_uint\n            gl.getExtension('OES_element_index_uint');\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/OES_standard_derivatives\n            gl.getExtension('OES_standard_derivatives');\n        }\n        else {\n            this.EXT_texture_norm16 = gl.getExtension('EXT_texture_norm16');\n            this.EXT_color_buffer_float = gl.getExtension('EXT_color_buffer_float');\n        }\n        this.WEBGL_compressed_texture_s3tc = gl.getExtension('WEBGL_compressed_texture_s3tc');\n        this.WEBGL_compressed_texture_s3tc_srgb = gl.getExtension('WEBGL_compressed_texture_s3tc_srgb');\n        this.EXT_texture_compression_rgtc = gl.getExtension('EXT_texture_compression_rgtc');\n        this.EXT_texture_filter_anisotropic = gl.getExtension('EXT_texture_filter_anisotropic');\n        this.EXT_texture_norm16 = gl.getExtension('EXT_texture_norm16');\n        this.OES_texture_float_linear = gl.getExtension('OES_texture_float_linear');\n        this.OES_texture_half_float_linear = gl.getExtension('OES_texture_half_float_linear');\n        this.KHR_parallel_shader_compile = gl.getExtension('KHR_parallel_shader_compile');\n        // this.OES_draw_buffers_indexed = gl.getExtension('OES_draw_buffers_indexed');\n        if (isWebGL2(gl)) {\n            this.platformString = 'WebGL2';\n            this.glslVersion = '#version 300 es';\n        }\n        else {\n            this.platformString = 'WebGL1';\n            this.glslVersion = '#version 100'; // 100 es not supported\n        }\n        // Create our fake swap-chain texture.\n        this.scTexture = new Texture_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: {\n                width: 0,\n                height: 0,\n                depthOrArrayLayers: 1,\n                dimension: TextureDimension.TEXTURE_2D,\n                mipLevelCount: 1,\n                usage: TextureUsage.RENDER_TARGET,\n                format: this.contextAttributes.alpha === false\n                    ? Format.U8_RGB_RT\n                    : Format.U8_RGBA_RT,\n            },\n            fake: true,\n        });\n        this.scTexture.formatKind = SamplerFormatKind.Float;\n        this.scTexture.gl_target = null;\n        this.scTexture.gl_texture = null;\n        this.resolveColorReadFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n        this.resolveColorDrawFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n        this.resolveDepthStencilReadFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n        this.resolveDepthStencilDrawFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n        this.renderPassDrawFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n        this.readbackFramebuffer = this.ensureResourceExists(gl.createFramebuffer());\n        this.fallbackTexture2D = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Float);\n        this.fallbackTexture2DDepth = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Depth);\n        this.fallbackVertexBuffer = this.createBuffer({\n            viewOrSize: 1,\n            usage: BufferUsage.VERTEX,\n            hint: BufferFrequencyHint.STATIC,\n        });\n        if (isWebGL2(gl)) {\n            this.fallbackTexture2DArray = this.createFallbackTexture(TextureDimension.TEXTURE_2D_ARRAY, SamplerFormatKind.Float);\n            this.fallbackTexture3D = this.createFallbackTexture(TextureDimension.TEXTURE_3D, SamplerFormatKind.Float);\n            this.fallbackTextureCube = this.createFallbackTexture(TextureDimension.TEXTURE_CUBE_MAP, SamplerFormatKind.Float);\n        }\n        // Adjust for GL defaults.\n        this.currentMegaState.depthCompare = CompareFunction.LESS;\n        this.currentMegaState.depthWrite = false;\n        this.currentMegaState.attachmentsState[0].channelWriteMask =\n            ChannelWriteMask.ALL;\n        // always have depth test enabled.\n        gl.enable(gl.DEPTH_TEST);\n        gl.enable(gl.STENCIL_TEST);\n        this.checkLimits();\n        if (configuration.shaderDebug) {\n            this.shaderDebug = true;\n        }\n        if (configuration.trackResources) {\n            this.resourceCreationTracker = new ResourceCreationTracker();\n        }\n    }\n    Device_GL.prototype.destroy = function () {\n        if (this.blitBindings) {\n            this.blitBindings.destroy();\n        }\n        if (this.blitInputLayout) {\n            this.blitInputLayout.destroy();\n        }\n        if (this.blitRenderPipeline) {\n            this.blitRenderPipeline.destroy();\n        }\n        if (this.blitVertexBuffer) {\n            this.blitVertexBuffer.destroy();\n        }\n        if (this.blitProgram) {\n            this.blitProgram.destroy();\n        }\n    };\n    Device_GL.prototype.createFallbackTexture = function (dimension, formatKind) {\n        var depthOrArrayLayers = dimension === TextureDimension.TEXTURE_CUBE_MAP ? 6 : 1;\n        // const supportDepthTexture =\n        //   isWebGL2(this.gl) || (!isWebGL2(this.gl) && !!this.WEBGL_depth_texture);\n        var format = formatKind === SamplerFormatKind.Depth\n            ? Format.D32F\n            : Format.U8_RGBA_NORM;\n        var texture = this.createTexture({\n            dimension: dimension,\n            format: format,\n            usage: TextureUsage.SAMPLED,\n            width: 1,\n            height: 1,\n            depthOrArrayLayers: depthOrArrayLayers,\n            mipLevelCount: 1,\n        });\n        if (formatKind === SamplerFormatKind.Float) {\n            texture.setImageData([new Uint8Array(4 * depthOrArrayLayers)]);\n        }\n        return getPlatformTexture(texture);\n    };\n    Device_GL.prototype.getNextUniqueId = function () {\n        return ++this.resourceUniqueId;\n    };\n    Device_GL.prototype.checkLimits = function () {\n        var gl = this.gl;\n        this.maxVertexAttribs = gl.getParameter(GL.MAX_VERTEX_ATTRIBS);\n        if (isWebGL2(gl)) {\n            this.uniformBufferMaxPageByteSize = Math.min(gl.getParameter(GL.MAX_UNIFORM_BLOCK_SIZE), UBO_PAGE_MAX_BYTE_SIZE);\n            this.uniformBufferWordAlignment =\n                gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT) / 4;\n            var supportedSampleCounts = gl.getInternalformatParameter(gl.RENDERBUFFER, gl.DEPTH32F_STENCIL8, gl.SAMPLES);\n            this.supportedSampleCounts = supportedSampleCounts\n                ? __spreadArray([], __read(supportedSampleCounts), false) : [];\n            this.occlusionQueriesRecommended = true;\n        }\n        else {\n            // mock ubo in WebGL1\n            this.uniformBufferWordAlignment = 64;\n            this.uniformBufferMaxPageByteSize = UBO_PAGE_MAX_BYTE_SIZE;\n        }\n        this.uniformBufferMaxPageWordSize = this.uniformBufferMaxPageByteSize / 4;\n        if (!this.supportedSampleCounts.includes(1)) {\n            this.supportedSampleCounts.push(1);\n        }\n        this.supportedSampleCounts.sort(function (a, b) { return a - b; });\n    };\n    //#region SwapChain\n    Device_GL.prototype.configureSwapChain = function (width, height, platformFramebuffer) {\n        var texture = this.scTexture;\n        texture.width = width;\n        texture.height = height;\n        this.scPlatformFramebuffer = nullify(platformFramebuffer);\n    };\n    Device_GL.prototype.getDevice = function () {\n        return this;\n    };\n    Device_GL.prototype.getCanvas = function () {\n        return this.gl.canvas;\n    };\n    Device_GL.prototype.getOnscreenTexture = function () {\n        return this.scTexture;\n    };\n    Device_GL.prototype.beginFrame = function () { };\n    Device_GL.prototype.endFrame = function () { };\n    //#endregion\n    //#region Device\n    // @see https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n    Device_GL.prototype.translateTextureInternalFormat = function (fmt, isRenderbufferStorage) {\n        if (isRenderbufferStorage === void 0) { isRenderbufferStorage = false; }\n        switch (fmt) {\n            case Format.ALPHA:\n                return GL.ALPHA;\n            case Format.U8_LUMINANCE:\n            case Format.F16_LUMINANCE:\n            case Format.F32_LUMINANCE:\n                return GL.LUMINANCE;\n            // case Format.LUMINANCE_ALPHA:\n            //   return GL.LUMINANCE_ALPHA;\n            case Format.F16_R:\n                return GL.R16F;\n            case Format.F16_RG:\n                return GL.RG16F;\n            case Format.F16_RGB:\n                return GL.RGB16F;\n            case Format.F16_RGBA:\n                return GL.RGBA16F;\n            case Format.F32_R:\n                return GL.R32F;\n            case Format.F32_RG:\n                return GL.RG32F;\n            case Format.F32_RGB:\n                return GL.RGB32F;\n            case Format.F32_RGBA:\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_color_buffer_float\n                return isWebGL2(this.gl)\n                    ? GL.RGBA32F\n                    : isRenderbufferStorage\n                        ? this.WEBGL_color_buffer_float.RGBA32F_EXT\n                        : GL.RGBA;\n            case Format.U8_R_NORM:\n                return GL.R8;\n            case Format.U8_RG_NORM:\n                return GL.RG8;\n            case Format.U8_RGB_NORM:\n            case Format.U8_RGB_RT:\n                return GL.RGB8;\n            case Format.U8_RGB_SRGB:\n                return GL.SRGB8;\n            case Format.U8_RGBA_NORM:\n            case Format.U8_RGBA_RT:\n                // WebGL1 renderbuffer only support RGBA4 RGB565 RGB5_A1\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage#parameters\n                // But texImage2D allows RGBA\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n                return isWebGL2(this.gl)\n                    ? GL.RGBA8\n                    : isRenderbufferStorage\n                        ? GL.RGBA4\n                        : GL.RGBA;\n            case Format.U8_RGBA:\n                return GL.RGBA;\n            case Format.U8_RGBA_SRGB:\n            case Format.U8_RGBA_RT_SRGB:\n                return GL.SRGB8_ALPHA8;\n            case Format.U16_R:\n                return GL.R16UI;\n            case Format.U16_R_NORM:\n                return this.EXT_texture_norm16.R16_EXT;\n            case Format.U16_RG_NORM:\n                return this.EXT_texture_norm16.RG16_EXT;\n            case Format.U16_RGBA_NORM:\n                return this.EXT_texture_norm16.RGBA16_EXT;\n            case Format.U16_RGBA_5551:\n                return GL.RGB5_A1;\n            case Format.U16_RGB_565:\n                return GL.RGB565;\n            case Format.U32_R:\n                return GL.R32UI;\n            case Format.S8_RGBA_NORM:\n                return GL.RGBA8_SNORM;\n            case Format.S8_RG_NORM:\n                return GL.RG8_SNORM;\n            case Format.BC1:\n                return this.WEBGL_compressed_texture_s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n            case Format.BC1_SRGB:\n                return this.WEBGL_compressed_texture_s3tc_srgb\n                    .COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n            case Format.BC2:\n                return this.WEBGL_compressed_texture_s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n            case Format.BC2_SRGB:\n                return this.WEBGL_compressed_texture_s3tc_srgb\n                    .COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n            case Format.BC3:\n                return this.WEBGL_compressed_texture_s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n            case Format.BC3_SRGB:\n                return this.WEBGL_compressed_texture_s3tc_srgb\n                    .COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n            case Format.BC4_UNORM:\n                return this.EXT_texture_compression_rgtc.COMPRESSED_RED_RGTC1_EXT;\n            case Format.BC4_SNORM:\n                return this.EXT_texture_compression_rgtc\n                    .COMPRESSED_SIGNED_RED_RGTC1_EXT;\n            case Format.BC5_UNORM:\n                return this.EXT_texture_compression_rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT;\n            case Format.BC5_SNORM:\n                return this.EXT_texture_compression_rgtc\n                    .COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n            case Format.D32F_S8:\n                return isWebGL2(this.gl)\n                    ? GL.DEPTH32F_STENCIL8\n                    : this.WEBGL_depth_texture\n                        ? GL.DEPTH_STENCIL\n                        : GL.DEPTH_COMPONENT16;\n            case Format.D24_S8:\n                return isWebGL2(this.gl)\n                    ? GL.DEPTH24_STENCIL8\n                    : this.WEBGL_depth_texture\n                        ? GL.DEPTH_STENCIL\n                        : GL.DEPTH_COMPONENT16;\n            case Format.D32F:\n                return isWebGL2(this.gl)\n                    ? GL.DEPTH_COMPONENT32F\n                    : this.WEBGL_depth_texture\n                        ? GL.DEPTH_COMPONENT\n                        : GL.DEPTH_COMPONENT16;\n            case Format.D24:\n                return isWebGL2(this.gl)\n                    ? GL.DEPTH_COMPONENT24\n                    : this.WEBGL_depth_texture\n                        ? GL.DEPTH_COMPONENT\n                        : GL.DEPTH_COMPONENT16;\n            default:\n                throw new Error('whoops');\n        }\n    };\n    Device_GL.prototype.translateTextureType = function (fmt) {\n        var typeFlags = getFormatTypeFlags(fmt);\n        switch (typeFlags) {\n            case FormatTypeFlags.U8:\n                return GL.UNSIGNED_BYTE;\n            case FormatTypeFlags.U16:\n                return GL.UNSIGNED_SHORT;\n            case FormatTypeFlags.U32:\n                return GL.UNSIGNED_INT;\n            case FormatTypeFlags.S8:\n                return GL.BYTE;\n            case FormatTypeFlags.F16:\n                return GL.HALF_FLOAT;\n            case FormatTypeFlags.F32:\n                return GL.FLOAT;\n            case FormatTypeFlags.U16_PACKED_5551:\n                return GL.UNSIGNED_SHORT_5_5_5_1;\n            case FormatTypeFlags.D32F:\n                return isWebGL2(this.gl)\n                    ? GL.FLOAT\n                    : this.WEBGL_depth_texture\n                        ? GL.UNSIGNED_INT\n                        : GL.UNSIGNED_BYTE;\n            case FormatTypeFlags.D24:\n                return isWebGL2(this.gl)\n                    ? GL.UNSIGNED_INT_24_8\n                    : this.WEBGL_depth_texture\n                        ? GL.UNSIGNED_SHORT\n                        : GL.UNSIGNED_BYTE;\n            case FormatTypeFlags.D24S8:\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n                return isWebGL2(this.gl)\n                    ? GL.UNSIGNED_INT_24_8\n                    : this.WEBGL_depth_texture\n                        ? GL.UNSIGNED_INT_24_8_WEBGL\n                        : GL.UNSIGNED_BYTE;\n            case FormatTypeFlags.D32FS8:\n                return GL.FLOAT_32_UNSIGNED_INT_24_8_REV;\n            default:\n                throw new Error('whoops');\n        }\n    };\n    /**\n     * Only works in WebGL2\n     * @see https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n     */\n    Device_GL.prototype.translateInternalTextureFormat = function (fmt) {\n        switch (fmt) {\n            case Format.F32_R:\n                return GL.R32F;\n            case Format.F32_RG:\n                return GL.RG32F;\n            case Format.F32_RGB:\n                return GL.RGB32F;\n            case Format.F32_RGBA:\n                return GL.RGBA32F;\n            case Format.F16_R:\n                return GL.R16F;\n            case Format.F16_RG:\n                return GL.RG16F;\n            case Format.F16_RGB:\n                return GL.RGB16F;\n            case Format.F16_RGBA:\n                return GL.RGBA16F;\n        }\n        return this.translateTextureFormat(fmt);\n    };\n    Device_GL.prototype.translateTextureFormat = function (fmt) {\n        if (isTextureFormatCompressed(fmt) ||\n            fmt === Format.F32_LUMINANCE ||\n            fmt === Format.U8_LUMINANCE) {\n            return this.translateTextureInternalFormat(fmt);\n        }\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n        var supportDepthTexture = isWebGL2(this.gl) || (!isWebGL2(this.gl) && !!this.WEBGL_depth_texture);\n        switch (fmt) {\n            case Format.D24_S8:\n            case Format.D32F_S8:\n                return supportDepthTexture ? GL.DEPTH_STENCIL : GL.RGBA;\n            case Format.D24:\n            case Format.D32F:\n                return supportDepthTexture ? GL.DEPTH_COMPONENT : GL.RGBA;\n        }\n        var isInteger = isFormatSizedInteger(fmt);\n        var compFlags = getFormatCompFlags(fmt);\n        switch (compFlags) {\n            case FormatCompFlags.A:\n                return GL.ALPHA;\n            case FormatCompFlags.R:\n                return isInteger ? GL.RED_INTEGER : GL.RED;\n            case FormatCompFlags.RG:\n                return isInteger ? GL.RG_INTEGER : GL.RG;\n            case FormatCompFlags.RGB:\n                return isInteger ? GL.RGB_INTEGER : GL.RGB;\n            case FormatCompFlags.RGBA:\n                // TODO: Chrome throw error when readPixels RGBA_INTEGER and UNSIGNED_BYTE\n                // @see https://github.com/KhronosGroup/WebGL/issues/2747\n                // return isInteger ? GL.RGBA_INTEGER : GL.RGBA;\n                return GL.RGBA;\n        }\n    };\n    Device_GL.prototype.setActiveTexture = function (texture) {\n        if (this.currentActiveTexture !== texture) {\n            this.gl.activeTexture(texture);\n            this.currentActiveTexture = texture;\n        }\n    };\n    Device_GL.prototype.bindVAO = function (vao) {\n        if (this.currentBoundVAO !== vao) {\n            if (isWebGL2(this.gl)) {\n                this.gl.bindVertexArray(vao);\n            }\n            else {\n                this.OES_vertex_array_object.bindVertexArrayOES(vao);\n            }\n            this.currentBoundVAO = vao;\n        }\n    };\n    Device_GL.prototype.programCompiled = function (program) {\n        assert(program.compileState !== ProgramCompileState_GL.NeedsCompile);\n        if (program.compileState === ProgramCompileState_GL.Compiling) {\n            program.compileState = ProgramCompileState_GL.NeedsBind;\n            if (this.shaderDebug) {\n                this.checkProgramCompilationForErrors(program);\n            }\n        }\n    };\n    Device_GL.prototype.useProgram = function (program) {\n        if (this.currentProgram === program)\n            return;\n        this.programCompiled(program);\n        this.gl.useProgram(program.gl_program);\n        this.currentProgram = program;\n    };\n    Device_GL.prototype.ensureResourceExists = function (resource) {\n        if (resource === null) {\n            var error = this.gl.getError();\n            throw new Error(\"Created resource is null; GL error encountered: \".concat(error));\n        }\n        else {\n            return resource;\n        }\n    };\n    Device_GL.prototype.createBuffer = function (descriptor) {\n        return new Buffer_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createTexture = function (descriptor) {\n        return new Texture_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createSampler = function (descriptor) {\n        return new Sampler_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createRenderTarget = function (descriptor) {\n        return new RenderTarget_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createRenderTargetFromTexture = function (texture) {\n        var _a = texture, format = _a.format, width = _a.width, height = _a.height, mipLevelCount = _a.mipLevelCount;\n        // Render targets cannot have a mip chain currently.\n        assert(mipLevelCount === 1);\n        return this.createRenderTarget({\n            format: format,\n            width: width,\n            height: height,\n            sampleCount: 1,\n            texture: texture,\n        });\n    };\n    Device_GL.prototype.createProgram = function (descriptor) {\n        var _a, _b, _c;\n        var rawVertexGLSL = (_a = descriptor.vertex) === null || _a === void 0 ? void 0 : _a.glsl;\n        // preprocess GLSL first\n        if ((_b = descriptor.vertex) === null || _b === void 0 ? void 0 : _b.glsl) {\n            descriptor.vertex.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'vert', descriptor.vertex.glsl);\n        }\n        if ((_c = descriptor.fragment) === null || _c === void 0 ? void 0 : _c.glsl) {\n            descriptor.fragment.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'frag', descriptor.fragment.glsl);\n        }\n        return this.createProgramSimple(descriptor, rawVertexGLSL);\n    };\n    Device_GL.prototype.createProgramSimple = function (descriptor, rawVertexGLSL) {\n        var program = new Program_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        }, rawVertexGLSL);\n        return program;\n    };\n    Device_GL.prototype.createBindings = function (descriptor) {\n        return new Bindings_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createInputLayout = function (descriptor) {\n        return new InputLayout_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createRenderPipeline = function (descriptor) {\n        return new RenderPipeline_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createComputePass = function () {\n        return new ComputePass_GL();\n    };\n    Device_GL.prototype.createComputePipeline = function (descriptor) {\n        return new ComputePipeline_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_GL.prototype.createReadback = function () {\n        return new Readback_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n        });\n    };\n    Device_GL.prototype.createQueryPool = function (type, elemCount) {\n        return new QueryPool_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: {\n                type: type,\n                elemCount: elemCount,\n            },\n        });\n    };\n    Device_GL.prototype.formatRenderPassDescriptor = function (descriptor) {\n        var _a, _b, _c, _d, _e, _f;\n        var colorAttachment = descriptor.colorAttachment;\n        descriptor.depthClearValue = (_a = descriptor.depthClearValue) !== null && _a !== void 0 ? _a : 'load';\n        descriptor.stencilClearValue = (_b = descriptor.stencilClearValue) !== null && _b !== void 0 ? _b : 'load';\n        for (var i = 0; i < colorAttachment.length; i++) {\n            if (!descriptor.colorAttachmentLevel) {\n                descriptor.colorAttachmentLevel = [];\n            }\n            descriptor.colorAttachmentLevel[i] =\n                (_c = descriptor.colorAttachmentLevel[i]) !== null && _c !== void 0 ? _c : 0;\n            if (!descriptor.colorResolveToLevel) {\n                descriptor.colorResolveToLevel = [];\n            }\n            descriptor.colorResolveToLevel[i] =\n                (_d = descriptor.colorResolveToLevel[i]) !== null && _d !== void 0 ? _d : 0;\n            if (!descriptor.colorClearColor) {\n                descriptor.colorClearColor = [];\n            }\n            descriptor.colorClearColor[i] = (_e = descriptor.colorClearColor[i]) !== null && _e !== void 0 ? _e : 'load';\n            if (!descriptor.colorStore) {\n                descriptor.colorStore = [];\n            }\n            descriptor.colorStore[i] = (_f = descriptor.colorStore[i]) !== null && _f !== void 0 ? _f : false;\n        }\n    };\n    Device_GL.prototype.createRenderBundle = function () {\n        return new RenderBundle_GL({\n            id: this.getNextUniqueId(),\n            device: this,\n        });\n    };\n    Device_GL.prototype.beginBundle = function (bundle) {\n        this.renderBundle = bundle;\n    };\n    Device_GL.prototype.endBundle = function () {\n        this.renderBundle = undefined;\n    };\n    Device_GL.prototype.executeBundles = function (renderBundles) {\n        renderBundles.forEach(function (renderBundle) {\n            renderBundle.replay();\n        });\n    };\n    Device_GL.prototype.createRenderPass = function (descriptor) {\n        if (this.currentRenderPassDescriptor !== null) {\n            // Save current renderpass descriptor.\n            this.currentRenderPassDescriptorStack.push(this.currentRenderPassDescriptor);\n        }\n        this.currentRenderPassDescriptor = descriptor;\n        // Format renderpass descriptor\n        this.formatRenderPassDescriptor(descriptor);\n        var colorAttachment = descriptor.colorAttachment, colorAttachmentLevel = descriptor.colorAttachmentLevel, colorClearColor = descriptor.colorClearColor, colorResolveTo = descriptor.colorResolveTo, colorResolveToLevel = descriptor.colorResolveToLevel, depthStencilAttachment = descriptor.depthStencilAttachment, depthClearValue = descriptor.depthClearValue, stencilClearValue = descriptor.stencilClearValue, depthStencilResolveTo = descriptor.depthStencilResolveTo;\n        var skipBlit = colorResolveTo &&\n            colorResolveTo.length === 1 &&\n            colorResolveTo[0] === this.scTexture;\n        this.setRenderPassParametersBegin(colorAttachment.length, skipBlit);\n        for (var i = 0; i < colorAttachment.length; i++) {\n            this.setRenderPassParametersColor(i, colorAttachment[i], colorAttachmentLevel[i], colorResolveTo[i], colorResolveToLevel[i], skipBlit);\n        }\n        this.setRenderPassParametersDepthStencil(depthStencilAttachment, depthStencilResolveTo, skipBlit);\n        this.validateCurrentAttachments();\n        for (var i = 0; i < colorAttachment.length; i++) {\n            var clearColor = colorClearColor[i];\n            if (clearColor === 'load')\n                continue;\n            this.setRenderPassParametersClearColor(i, clearColor.r, clearColor.g, clearColor.b, clearColor.a);\n        }\n        this.setRenderPassParametersClearDepthStencil(depthClearValue, stencilClearValue);\n        return this;\n    };\n    Device_GL.prototype.submitPass = function (pass) {\n        assert(this.currentRenderPassDescriptor !== null);\n        this.endPass();\n        if (this.currentRenderPassDescriptorStack.length) {\n            // Restore previous renderpass descriptor.\n            this.currentRenderPassDescriptor =\n                this.currentRenderPassDescriptorStack.pop();\n        }\n        else {\n            this.currentRenderPassDescriptor = null;\n        }\n    };\n    Device_GL.prototype.copySubTexture2D = function (dst_, dstX, dstY, src_, srcX, srcY) {\n        var gl = this.gl;\n        var dst = dst_;\n        var src = src_;\n        assert(src.mipLevelCount === 1);\n        assert(dst.mipLevelCount === 1);\n        if (isWebGL2(gl)) {\n            if (dst === this.scTexture) {\n                gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.scPlatformFramebuffer);\n            }\n            else {\n                gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.resolveColorDrawFramebuffer);\n                this.bindFramebufferAttachment(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, dst, 0);\n            }\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.resolveColorReadFramebuffer);\n            this.bindFramebufferAttachment(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, src, 0);\n            gl.blitFramebuffer(srcX, srcY, srcX + src.width, srcY + src.height, dstX, dstY, dstX + src.width, dstY + src.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n        }\n        else {\n            if (dst === this.scTexture) {\n                var rt = this.createRenderTargetFromTexture(src_);\n                this.submitBlitRenderPass(rt, dst);\n            }\n        }\n    };\n    Device_GL.prototype.queryLimits = function () {\n        return this;\n    };\n    Device_GL.prototype.queryTextureFormatSupported = function (format, width, height) {\n        switch (format) {\n            case Format.BC1_SRGB:\n            case Format.BC2_SRGB:\n            case Format.BC3_SRGB:\n                if (this.WEBGL_compressed_texture_s3tc_srgb !== null)\n                    return isBlockCompressSized(width, height, 4, 4);\n                return false;\n            case Format.BC1:\n            case Format.BC2:\n            case Format.BC3:\n                if (this.WEBGL_compressed_texture_s3tc !== null)\n                    return isBlockCompressSized(width, height, 4, 4);\n                return false;\n            case Format.BC4_UNORM:\n            case Format.BC4_SNORM:\n            case Format.BC5_UNORM:\n            case Format.BC5_SNORM:\n                if (this.EXT_texture_compression_rgtc !== null)\n                    return isBlockCompressSized(width, height, 4, 4);\n                return false;\n            case Format.U16_R_NORM:\n            case Format.U16_RG_NORM:\n            case Format.U16_RGBA_NORM:\n                return this.EXT_texture_norm16 !== null;\n            case Format.F32_R:\n            case Format.F32_RG:\n            case Format.F32_RGB:\n            case Format.F32_RGBA:\n                return this.OES_texture_float_linear !== null;\n            case Format.F16_R:\n            case Format.F16_RG:\n            case Format.F16_RGB:\n            case Format.F16_RGBA:\n                return this.OES_texture_half_float_linear !== null;\n            default:\n                return true;\n        }\n    };\n    Device_GL.prototype.queryProgramReady = function (program) {\n        var gl = this.gl;\n        if (program.compileState === ProgramCompileState_GL.NeedsCompile) {\n            // This should not happen.\n            throw new Error('whoops');\n        }\n        if (program.compileState === ProgramCompileState_GL.Compiling) {\n            var complete = void 0;\n            if (this.KHR_parallel_shader_compile !== null) {\n                complete = gl.getProgramParameter(program.gl_program, this.KHR_parallel_shader_compile.COMPLETION_STATUS_KHR);\n            }\n            else {\n                // If we don't have async shader compilation, assume all compilation is done immediately :/\n                complete = true;\n            }\n            if (complete) {\n                this.programCompiled(program);\n            }\n            return complete;\n        }\n        return (program.compileState === ProgramCompileState_GL.NeedsBind ||\n            program.compileState === ProgramCompileState_GL.ReadyToUse);\n    };\n    Device_GL.prototype.queryPlatformAvailable = function () {\n        return this.gl.isContextLost();\n    };\n    Device_GL.prototype.queryVendorInfo = function () {\n        return this;\n    };\n    Device_GL.prototype.queryRenderPass = function (o) {\n        return this.currentRenderPassDescriptor;\n    };\n    Device_GL.prototype.queryRenderTarget = function (o) {\n        var renderTarget = o;\n        return renderTarget;\n    };\n    //#endregion\n    //#region Debugging\n    Device_GL.prototype.setResourceName = function (o, name) {\n        o.name = name;\n        if (o.type === ResourceType.Buffer) {\n            var gl_buffer_pages = o.gl_buffer_pages;\n            for (var i = 0; i < gl_buffer_pages.length; i++)\n                assignPlatformName(gl_buffer_pages[i], \"\".concat(name, \" Page \").concat(i));\n        }\n        else if (o.type === ResourceType.Texture) {\n            assignPlatformName(getPlatformTexture(o), name);\n        }\n        else if (o.type === ResourceType.Sampler) {\n            assignPlatformName(getPlatformSampler$1(o), name);\n        }\n        else if (o.type === ResourceType.RenderTarget) {\n            var gl_renderbuffer = o.gl_renderbuffer;\n            if (gl_renderbuffer !== null)\n                assignPlatformName(gl_renderbuffer, name);\n        }\n        else if (o.type === ResourceType.InputLayout) {\n            assignPlatformName(o.vao, name);\n        }\n    };\n    Device_GL.prototype.setResourceLeakCheck = function (o, v) {\n        if (this.resourceCreationTracker !== null)\n            this.resourceCreationTracker.setResourceLeakCheck(o, v);\n    };\n    Device_GL.prototype.checkForLeaks = function () {\n        if (this.resourceCreationTracker !== null)\n            this.resourceCreationTracker.checkForLeaks();\n    };\n    Device_GL.prototype.pushDebugGroup = function (name) { };\n    Device_GL.prototype.popDebugGroup = function () { };\n    Device_GL.prototype.insertDebugMarker = function (markerLabel) { };\n    // pushDebugGroup(debugGroup: DebugGroup): void {\n    //   this.debugGroupStack.push(debugGroup);\n    // }\n    // popDebugGroup(): void {\n    //   this.debugGroupStack.pop();\n    // }\n    Device_GL.prototype.programPatched = function (o, descriptor) {\n        assert(this.shaderDebug);\n        // const program = o as Program_GL;\n        // const gl = this.gl;\n        // gl.deleteProgram(program.gl_program);\n        // program.descriptor = descriptor;\n        // program.gl_program = this.ensureResourceExists(gl.createProgram());\n        // program.compileState = ProgramCompileState_GL.NeedsCompile;\n        // this.tryCompileProgram(program);\n        // this.checkProgramCompilationForErrors(program);\n    };\n    Device_GL.prototype.getBufferData = function (buffer, dstBuffer, wordOffset) {\n        if (wordOffset === void 0) { wordOffset = 0; }\n        var gl = this.gl;\n        if (isWebGL2(gl)) {\n            gl.bindBuffer(gl.COPY_READ_BUFFER, getPlatformBuffer$1(buffer, wordOffset * 4));\n            gl.getBufferSubData(gl.COPY_READ_BUFFER, wordOffset * 4, dstBuffer);\n        }\n    };\n    //#endregion\n    Device_GL.prototype.debugGroupStatisticsDrawCall = function (count) {\n        if (count === void 0) { count = 1; }\n        for (var i = this.debugGroupStack.length - 1; i >= 0; i--)\n            this.debugGroupStack[i].drawCallCount += count;\n    };\n    Device_GL.prototype.debugGroupStatisticsBufferUpload = function (count) {\n        if (count === void 0) { count = 1; }\n        for (var i = this.debugGroupStack.length - 1; i >= 0; i--)\n            this.debugGroupStack[i].bufferUploadCount += count;\n    };\n    Device_GL.prototype.debugGroupStatisticsTextureBind = function (count) {\n        if (count === void 0) { count = 1; }\n        for (var i = this.debugGroupStack.length - 1; i >= 0; i--)\n            this.debugGroupStack[i].textureBindCount += count;\n    };\n    Device_GL.prototype.debugGroupStatisticsTriangles = function (count) {\n        for (var i = this.debugGroupStack.length - 1; i >= 0; i--)\n            this.debugGroupStack[i].triangleCount += count;\n    };\n    Device_GL.prototype.reportShaderError = function (shader, str) {\n        var gl = this.gl;\n        var status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!status) {\n            console.error(prependLineNo(str));\n            var debug_shaders = gl.getExtension('WEBGL_debug_shaders');\n            if (debug_shaders)\n                console.error(debug_shaders.getTranslatedShaderSource(shader));\n            console.error(gl.getShaderInfoLog(shader));\n        }\n        return status;\n    };\n    Device_GL.prototype.checkProgramCompilationForErrors = function (program) {\n        var gl = this.gl;\n        var prog = program.gl_program;\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            var descriptor = program.descriptor;\n            if (!this.reportShaderError(program.gl_shader_vert, descriptor.vertex.glsl))\n                return;\n            if (!this.reportShaderError(program.gl_shader_frag, descriptor.fragment.glsl))\n                return;\n            // Neither shader had an error, report the program info log.\n            console.error(gl.getProgramInfoLog(program.gl_program));\n        }\n    };\n    Device_GL.prototype.bindFramebufferAttachment = function (framebuffer, binding, attachment, level) {\n        var gl = this.gl;\n        if (isNil(attachment)) {\n            gl.framebufferRenderbuffer(framebuffer, binding, gl.RENDERBUFFER, null);\n        }\n        else if (attachment.type === ResourceType.RenderTarget) {\n            if (attachment.gl_renderbuffer !== null) {\n                gl.framebufferRenderbuffer(framebuffer, binding, gl.RENDERBUFFER, attachment.gl_renderbuffer);\n            }\n            else if (attachment.texture !== null) {\n                gl.framebufferTexture2D(framebuffer, binding, GL.TEXTURE_2D, getPlatformTexture(attachment.texture), level);\n            }\n        }\n        else if (attachment.type === ResourceType.Texture) {\n            var texture = getPlatformTexture(attachment);\n            if (attachment.dimension === TextureDimension.TEXTURE_2D) {\n                gl.framebufferTexture2D(framebuffer, binding, GL.TEXTURE_2D, texture, level);\n            }\n            else if (isWebGL2(gl) &&\n                attachment.dimension === TextureDimension.TEXTURE_2D_ARRAY) ;\n        }\n    };\n    Device_GL.prototype.bindFramebufferDepthStencilAttachment = function (framebuffer, attachment) {\n        var gl = this.gl;\n        var flags = !isNil(attachment)\n            ? getFormatFlags(attachment.format)\n            : FormatFlags.Depth | FormatFlags.Stencil;\n        var depth = !!(flags & FormatFlags.Depth);\n        var stencil = !!(flags & FormatFlags.Stencil);\n        if (depth && stencil) {\n            var supportDepthTexture = isWebGL2(this.gl) || (!isWebGL2(this.gl) && !!this.WEBGL_depth_texture);\n            if (supportDepthTexture) {\n                this.bindFramebufferAttachment(framebuffer, gl.DEPTH_STENCIL_ATTACHMENT, attachment, 0);\n            }\n            else {\n                this.bindFramebufferAttachment(framebuffer, gl.DEPTH_ATTACHMENT, attachment, 0);\n            }\n        }\n        else if (depth) {\n            this.bindFramebufferAttachment(framebuffer, gl.DEPTH_ATTACHMENT, attachment, 0);\n            this.bindFramebufferAttachment(framebuffer, gl.STENCIL_ATTACHMENT, null, 0);\n        }\n        else if (stencil) {\n            this.bindFramebufferAttachment(framebuffer, gl.STENCIL_ATTACHMENT, attachment, 0);\n            this.bindFramebufferAttachment(framebuffer, gl.DEPTH_ATTACHMENT, null, 0);\n        }\n    };\n    Device_GL.prototype.validateCurrentAttachments = function () {\n        var sampleCount = -1, width = -1, height = -1;\n        for (var i = 0; i < this.currentColorAttachments.length; i++) {\n            var attachment = this.currentColorAttachments[i];\n            if (attachment === null)\n                continue;\n            if (sampleCount === -1) {\n                sampleCount = attachment.sampleCount;\n                width = attachment.width;\n                height = attachment.height;\n            }\n            else {\n                assert(sampleCount === attachment.sampleCount);\n                assert(width === attachment.width);\n                assert(height === attachment.height);\n            }\n        }\n        if (this.currentDepthStencilAttachment) {\n            if (sampleCount === -1) {\n                sampleCount = this.currentDepthStencilAttachment.sampleCount;\n            }\n            else {\n                assert(sampleCount === this.currentDepthStencilAttachment.sampleCount);\n                assert(width === this.currentDepthStencilAttachment.width);\n                assert(height === this.currentDepthStencilAttachment.height);\n            }\n        }\n        this.currentSampleCount = sampleCount;\n    };\n    Device_GL.prototype.setRenderPassParametersBegin = function (numColorAttachments, toScreen) {\n        if (toScreen === void 0) { toScreen = false; }\n        var gl = this.gl;\n        if (!toScreen) {\n            if (isWebGL2(gl)) {\n                gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER, this.renderPassDrawFramebuffer);\n            }\n            else {\n                if (!this.inBlitRenderPass) {\n                    gl.bindFramebuffer(GL.FRAMEBUFFER, this.renderPassDrawFramebuffer);\n                }\n            }\n            if (isWebGL2(gl)) {\n                gl.drawBuffers([\n                    GL.COLOR_ATTACHMENT0,\n                    GL.COLOR_ATTACHMENT1,\n                    GL.COLOR_ATTACHMENT2,\n                    GL.COLOR_ATTACHMENT3,\n                ]);\n            }\n            else {\n                if (!this.inBlitRenderPass && this.WEBGL_draw_buffers) {\n                    // MRT @see https://github.com/shrekshao/MoveWebGL1EngineToWebGL2/blob/master/Move-a-WebGL-1-Engine-To-WebGL-2-Blog-1.md#multiple-render-targets\n                    this.WEBGL_draw_buffers.drawBuffersWEBGL([\n                        GL.COLOR_ATTACHMENT0_WEBGL,\n                        GL.COLOR_ATTACHMENT1_WEBGL,\n                        GL.COLOR_ATTACHMENT2_WEBGL,\n                        GL.COLOR_ATTACHMENT3_WEBGL, // gl_FragData[3]\n                    ]);\n                }\n            }\n            if (!this.inBlitRenderPass) {\n                for (var i = numColorAttachments; i < this.currentColorAttachments.length; i++) {\n                    var target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n                    var attachment = isWebGL2(gl)\n                        ? GL.COLOR_ATTACHMENT0\n                        : GL.COLOR_ATTACHMENT0_WEBGL;\n                    gl.framebufferRenderbuffer(target, attachment + i, GL.RENDERBUFFER, null);\n                    gl.framebufferTexture2D(target, attachment + i, GL.TEXTURE_2D, null, 0);\n                }\n            }\n        }\n        this.currentColorAttachments.length = numColorAttachments;\n    };\n    Device_GL.prototype.setRenderPassParametersColor = function (i, colorAttachment, attachmentLevel, colorResolveTo, resolveToLevel, skipBlit) {\n        if (skipBlit === void 0) { skipBlit = false; }\n        var gl = this.gl;\n        var gl2 = isWebGL2(gl);\n        if (this.currentColorAttachments[i] !== colorAttachment ||\n            this.currentColorAttachmentLevels[i] !== attachmentLevel) {\n            this.currentColorAttachments[i] = colorAttachment;\n            this.currentColorAttachmentLevels[i] = attachmentLevel;\n            if (!skipBlit && (gl2 || (!gl2 && this.WEBGL_draw_buffers))) {\n                this.bindFramebufferAttachment(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, (gl2 ? GL.COLOR_ATTACHMENT0 : GL.COLOR_ATTACHMENT0_WEBGL) + i, colorAttachment, attachmentLevel);\n            }\n            this.resolveColorAttachmentsChanged = true;\n        }\n        if (this.currentColorResolveTos[i] !== colorResolveTo ||\n            this.currentColorResolveToLevels[i] !== resolveToLevel) {\n            this.currentColorResolveTos[i] = colorResolveTo;\n            this.currentColorResolveToLevels[i] = resolveToLevel;\n            if (colorResolveTo !== null) {\n                this.resolveColorAttachmentsChanged = true;\n            }\n        }\n    };\n    Device_GL.prototype.setRenderPassParametersDepthStencil = function (depthStencilAttachment, depthStencilResolveTo, skipBlit) {\n        if (skipBlit === void 0) { skipBlit = false; }\n        var gl = this.gl;\n        if (this.currentDepthStencilAttachment !== depthStencilAttachment) {\n            this.currentDepthStencilAttachment =\n                depthStencilAttachment;\n            if (!skipBlit && !this.inBlitRenderPass) {\n                this.bindFramebufferDepthStencilAttachment(isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.currentDepthStencilAttachment);\n            }\n            this.resolveDepthStencilAttachmentsChanged = true;\n        }\n        if (this.currentDepthStencilResolveTo !== depthStencilResolveTo) {\n            this.currentDepthStencilResolveTo = depthStencilResolveTo;\n            if (depthStencilResolveTo) {\n                this.resolveDepthStencilAttachmentsChanged = true;\n            }\n        }\n    };\n    Device_GL.prototype.setRenderPassParametersClearColor = function (slot, r, g, b, a) {\n        var gl = this.gl;\n        if (this.OES_draw_buffers_indexed !== null) {\n            var attachment = this.currentMegaState.attachmentsState[slot];\n            if (attachment && attachment.channelWriteMask !== ChannelWriteMask.ALL) {\n                this.OES_draw_buffers_indexed.colorMaskiOES(slot, true, true, true, true);\n                attachment.channelWriteMask = ChannelWriteMask.ALL;\n            }\n        }\n        else {\n            var attachment = this.currentMegaState.attachmentsState[0];\n            if (attachment && attachment.channelWriteMask !== ChannelWriteMask.ALL) {\n                gl.colorMask(true, true, true, true);\n                attachment.channelWriteMask = ChannelWriteMask.ALL;\n            }\n        }\n        this.setScissorRectEnabled(false);\n        if (isWebGL2(gl)) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/clearBuffer\n            gl.clearBufferfv(gl.COLOR, slot, [r, g, b, a]);\n        }\n        else {\n            gl.clearColor(r, g, b, a);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    };\n    Device_GL.prototype.setRenderPassParametersClearDepthStencil = function (depthClearValue, stencilClearValue) {\n        if (depthClearValue === void 0) { depthClearValue = 'load'; }\n        if (stencilClearValue === void 0) { stencilClearValue = 'load'; }\n        var gl = this.gl;\n        if (depthClearValue !== 'load') {\n            assert(!!this.currentDepthStencilAttachment);\n            // GL clears obey the masks... bad API or worst API?\n            if (!this.currentMegaState.depthWrite) {\n                gl.depthMask(true);\n                this.currentMegaState.depthWrite = true;\n            }\n            if (isWebGL2(gl)) {\n                gl.clearBufferfv(gl.DEPTH, 0, [depthClearValue]);\n            }\n            else {\n                gl.clearDepth(depthClearValue);\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n            }\n        }\n        if (stencilClearValue !== 'load') {\n            assert(!!this.currentDepthStencilAttachment);\n            if (!this.currentMegaState.stencilWrite) {\n                gl.enable(gl.STENCIL_TEST);\n                gl.stencilMask(0xff);\n                this.currentMegaState.stencilWrite = true;\n            }\n            if (isWebGL2(gl)) {\n                gl.clearBufferiv(gl.STENCIL, 0, [stencilClearValue]);\n            }\n            else {\n                gl.clearStencil(stencilClearValue);\n                gl.clear(gl.STENCIL_BUFFER_BIT);\n            }\n        }\n    };\n    Device_GL.prototype.setBindings = function (bindings_) {\n        var _this = this;\n        var _a;\n        if (this.renderBundle) {\n            this.renderBundle.push(function () { return _this.setBindings(bindings_); });\n            return;\n        }\n        var gl = this.gl;\n        var _b = bindings_, uniformBufferBindings = _b.uniformBufferBindings, samplerBindings = _b.samplerBindings, bindingLayouts = _b.bindingLayouts;\n        assert(0 < bindingLayouts.bindingLayoutTables.length);\n        var bindingLayoutTable = bindingLayouts.bindingLayoutTables[0];\n        // Ignore extra bindings.\n        assert(uniformBufferBindings.length >= bindingLayoutTable.numUniformBuffers);\n        assert(samplerBindings.length >= bindingLayoutTable.numSamplers);\n        for (var i = 0; i < uniformBufferBindings.length; i++) {\n            var binding = uniformBufferBindings[i];\n            if (binding.size === 0)\n                continue;\n            var index = bindingLayoutTable.firstUniformBuffer + i;\n            var buffer = binding.buffer;\n            var byteOffset = binding.offset || 0;\n            var byteSize = binding.size || buffer.byteSize;\n            if (buffer !== this.currentUniformBuffers[index] ||\n                byteOffset !== this.currentUniformBufferByteOffsets[index] ||\n                byteSize !== this.currentUniformBufferByteSizes[index]) {\n                var platformBufferByteOffset = byteOffset % buffer.pageByteSize;\n                var platformBuffer = buffer.gl_buffer_pages[(byteOffset / buffer.pageByteSize) | 0];\n                assert(platformBufferByteOffset + byteSize <= buffer.pageByteSize);\n                if (isWebGL2(gl)) {\n                    gl.bindBufferRange(gl.UNIFORM_BUFFER, index, platformBuffer, platformBufferByteOffset, byteSize);\n                }\n                this.currentUniformBuffers[index] = buffer;\n                this.currentUniformBufferByteOffsets[index] = byteOffset;\n                this.currentUniformBufferByteSizes[index] = byteSize;\n            }\n        }\n        for (var i = 0; i < bindingLayoutTable.numSamplers; i++) {\n            var binding = samplerBindings[i];\n            var samplerIndex = bindingLayoutTable.firstSampler + i;\n            var gl_sampler = binding !== null && binding.sampler !== null\n                ? getPlatformSampler$1(binding.sampler)\n                : null;\n            var gl_texture = binding !== null && binding.texture !== null\n                ? getPlatformTexture(binding.texture)\n                : null;\n            if (this.currentSamplers[samplerIndex] !== gl_sampler) {\n                if (isWebGL2(gl)) {\n                    gl.bindSampler(samplerIndex, gl_sampler);\n                }\n                this.currentSamplers[samplerIndex] = gl_sampler;\n            }\n            if (this.currentTextures[samplerIndex] !== gl_texture) {\n                this.setActiveTexture(gl.TEXTURE0 + samplerIndex);\n                if (gl_texture !== null) {\n                    var _c = assertExists(binding)\n                        .texture, gl_target = _c.gl_target, width = _c.width, height = _c.height;\n                    // update index\n                    binding.texture.textureIndex = samplerIndex;\n                    gl.bindTexture(gl_target, gl_texture);\n                    // In WebGL1 set tex's parameters @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter\n                    if (!isWebGL2(gl)) {\n                        (_a = binding.sampler) === null || _a === void 0 ? void 0 : _a.setTextureParameters(gl_target, width, height);\n                    }\n                    this.debugGroupStatisticsTextureBind();\n                }\n                else {\n                    var samplerEntry = __assign(__assign({}, binding), defaultBindingLayoutSamplerDescriptor);\n                    var dimension = samplerEntry.dimension, formatKind = samplerEntry.formatKind;\n                    var gl_target = translateTextureDimension$1(dimension);\n                    gl.bindTexture(gl_target, this.getFallbackTexture(__assign({ gl_target: gl_target, formatKind: formatKind }, samplerEntry)));\n                }\n                this.currentTextures[samplerIndex] = gl_texture;\n            }\n        }\n    };\n    Device_GL.prototype.setViewport = function (x, y, w, h) {\n        var gl = this.gl;\n        gl.viewport(x, y, w, h);\n    };\n    Device_GL.prototype.setScissorRect = function (x, y, w, h) {\n        var gl = this.gl;\n        this.setScissorRectEnabled(true);\n        gl.scissor(x, y, w, h);\n    };\n    Device_GL.prototype.applyAttachmentStateIndexed = function (i, currentAttachmentState, newAttachmentState) {\n        var gl = this.gl;\n        var dbi = this.OES_draw_buffers_indexed;\n        if (currentAttachmentState.channelWriteMask !==\n            newAttachmentState.channelWriteMask) {\n            dbi.colorMaskiOES(i, !!(newAttachmentState.channelWriteMask & ChannelWriteMask.RED), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.GREEN), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.BLUE), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.ALPHA));\n            currentAttachmentState.channelWriteMask =\n                newAttachmentState.channelWriteMask;\n        }\n        var blendModeChanged = currentAttachmentState.rgbBlendState.blendMode !==\n            newAttachmentState.rgbBlendState.blendMode ||\n            currentAttachmentState.alphaBlendState.blendMode !==\n                newAttachmentState.alphaBlendState.blendMode;\n        var blendFuncChanged = currentAttachmentState.rgbBlendState.blendSrcFactor !==\n            newAttachmentState.rgbBlendState.blendSrcFactor ||\n            currentAttachmentState.alphaBlendState.blendSrcFactor !==\n                newAttachmentState.alphaBlendState.blendSrcFactor ||\n            currentAttachmentState.rgbBlendState.blendDstFactor !==\n                newAttachmentState.rgbBlendState.blendDstFactor ||\n            currentAttachmentState.alphaBlendState.blendDstFactor !==\n                newAttachmentState.alphaBlendState.blendDstFactor;\n        if (blendFuncChanged || blendModeChanged) {\n            if (isBlendStateNone(currentAttachmentState.rgbBlendState) &&\n                isBlendStateNone(currentAttachmentState.alphaBlendState))\n                dbi.enableiOES(i, gl.BLEND);\n            else if (isBlendStateNone(newAttachmentState.rgbBlendState) &&\n                isBlendStateNone(newAttachmentState.alphaBlendState))\n                dbi.disableiOES(i, gl.BLEND);\n        }\n        if (blendModeChanged) {\n            dbi.blendEquationSeparateiOES(i, newAttachmentState.rgbBlendState.blendMode, newAttachmentState.alphaBlendState.blendMode);\n            currentAttachmentState.rgbBlendState.blendMode =\n                newAttachmentState.rgbBlendState.blendMode;\n            currentAttachmentState.alphaBlendState.blendMode =\n                newAttachmentState.alphaBlendState.blendMode;\n        }\n        if (blendFuncChanged) {\n            dbi.blendFuncSeparateiOES(i, newAttachmentState.rgbBlendState.blendSrcFactor, newAttachmentState.rgbBlendState.blendDstFactor, newAttachmentState.alphaBlendState.blendSrcFactor, newAttachmentState.alphaBlendState.blendDstFactor);\n            currentAttachmentState.rgbBlendState.blendSrcFactor =\n                newAttachmentState.rgbBlendState.blendSrcFactor;\n            currentAttachmentState.alphaBlendState.blendSrcFactor =\n                newAttachmentState.alphaBlendState.blendSrcFactor;\n            currentAttachmentState.rgbBlendState.blendDstFactor =\n                newAttachmentState.rgbBlendState.blendDstFactor;\n            currentAttachmentState.alphaBlendState.blendDstFactor =\n                newAttachmentState.alphaBlendState.blendDstFactor;\n        }\n    };\n    Device_GL.prototype.applyAttachmentState = function (currentAttachmentState, newAttachmentState) {\n        var gl = this.gl;\n        if (currentAttachmentState.channelWriteMask !==\n            newAttachmentState.channelWriteMask) {\n            gl.colorMask(!!(newAttachmentState.channelWriteMask & ChannelWriteMask.RED), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.GREEN), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.BLUE), !!(newAttachmentState.channelWriteMask & ChannelWriteMask.ALPHA));\n            currentAttachmentState.channelWriteMask =\n                newAttachmentState.channelWriteMask;\n        }\n        var blendModeChanged = currentAttachmentState.rgbBlendState.blendMode !==\n            newAttachmentState.rgbBlendState.blendMode ||\n            currentAttachmentState.alphaBlendState.blendMode !==\n                newAttachmentState.alphaBlendState.blendMode;\n        var blendFuncChanged = currentAttachmentState.rgbBlendState.blendSrcFactor !==\n            newAttachmentState.rgbBlendState.blendSrcFactor ||\n            currentAttachmentState.alphaBlendState.blendSrcFactor !==\n                newAttachmentState.alphaBlendState.blendSrcFactor ||\n            currentAttachmentState.rgbBlendState.blendDstFactor !==\n                newAttachmentState.rgbBlendState.blendDstFactor ||\n            currentAttachmentState.alphaBlendState.blendDstFactor !==\n                newAttachmentState.alphaBlendState.blendDstFactor;\n        if (blendFuncChanged || blendModeChanged) {\n            if (isBlendStateNone(currentAttachmentState.rgbBlendState) &&\n                isBlendStateNone(currentAttachmentState.alphaBlendState)) {\n                gl.enable(gl.BLEND);\n            }\n            else if (isBlendStateNone(newAttachmentState.rgbBlendState) &&\n                isBlendStateNone(newAttachmentState.alphaBlendState)) {\n                gl.disable(gl.BLEND);\n            }\n        }\n        if (blendModeChanged) {\n            gl.blendEquationSeparate(newAttachmentState.rgbBlendState.blendMode, newAttachmentState.alphaBlendState.blendMode);\n            currentAttachmentState.rgbBlendState.blendMode =\n                newAttachmentState.rgbBlendState.blendMode;\n            currentAttachmentState.alphaBlendState.blendMode =\n                newAttachmentState.alphaBlendState.blendMode;\n        }\n        if (blendFuncChanged) {\n            gl.blendFuncSeparate(newAttachmentState.rgbBlendState.blendSrcFactor, newAttachmentState.rgbBlendState.blendDstFactor, newAttachmentState.alphaBlendState.blendSrcFactor, newAttachmentState.alphaBlendState.blendDstFactor);\n            currentAttachmentState.rgbBlendState.blendSrcFactor =\n                newAttachmentState.rgbBlendState.blendSrcFactor;\n            currentAttachmentState.alphaBlendState.blendSrcFactor =\n                newAttachmentState.alphaBlendState.blendSrcFactor;\n            currentAttachmentState.rgbBlendState.blendDstFactor =\n                newAttachmentState.rgbBlendState.blendDstFactor;\n            currentAttachmentState.alphaBlendState.blendDstFactor =\n                newAttachmentState.alphaBlendState.blendDstFactor;\n        }\n    };\n    Device_GL.prototype.setMegaState = function (newMegaState) {\n        var gl = this.gl;\n        var currentMegaState = this.currentMegaState;\n        if (this.OES_draw_buffers_indexed !== null) {\n            for (var i = 0; i < newMegaState.attachmentsState.length; i++)\n                this.applyAttachmentStateIndexed(i, currentMegaState.attachmentsState[0], newMegaState.attachmentsState[0]);\n        }\n        else {\n            assert(newMegaState.attachmentsState.length === 1);\n            this.applyAttachmentState(currentMegaState.attachmentsState[0], newMegaState.attachmentsState[0]);\n        }\n        if (!colorEqual(currentMegaState.blendConstant, newMegaState.blendConstant)) {\n            gl.blendColor(newMegaState.blendConstant.r, newMegaState.blendConstant.g, newMegaState.blendConstant.b, newMegaState.blendConstant.a);\n            colorCopy(currentMegaState.blendConstant, newMegaState.blendConstant);\n        }\n        if (currentMegaState.depthCompare !== newMegaState.depthCompare) {\n            gl.depthFunc(newMegaState.depthCompare);\n            currentMegaState.depthCompare = newMegaState.depthCompare;\n        }\n        if (!!currentMegaState.depthWrite !== !!newMegaState.depthWrite) {\n            gl.depthMask(newMegaState.depthWrite);\n            currentMegaState.depthWrite = newMegaState.depthWrite;\n        }\n        if (!!currentMegaState.stencilWrite !== !!newMegaState.stencilWrite) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMask\n            gl.stencilMask(newMegaState.stencilWrite ? 0xff : 0x00);\n            currentMegaState.stencilWrite = newMegaState.stencilWrite;\n        }\n        var shouldApplyStencil = false;\n        if (!stencilFaceStateEquals(currentMegaState.stencilFront, newMegaState.stencilFront)) {\n            shouldApplyStencil = true;\n            var _a = newMegaState.stencilFront, passOp = _a.passOp, failOp = _a.failOp, depthFailOp = _a.depthFailOp, compare = _a.compare;\n            if (currentMegaState.stencilFront.passOp !== passOp ||\n                currentMegaState.stencilFront.failOp !== failOp ||\n                currentMegaState.stencilFront.depthFailOp !== depthFailOp) {\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate\n                gl.stencilOpSeparate(gl.FRONT, failOp, depthFailOp, passOp);\n                currentMegaState.stencilFront.passOp = passOp;\n                currentMegaState.stencilFront.failOp = failOp;\n                currentMegaState.stencilFront.depthFailOp = depthFailOp;\n            }\n            if (currentMegaState.stencilFront.compare !== compare) {\n                this.setStencilReference(0);\n                currentMegaState.stencilFront.compare = compare;\n            }\n        }\n        if (!stencilFaceStateEquals(currentMegaState.stencilBack, newMegaState.stencilBack)) {\n            shouldApplyStencil = true;\n            var _b = newMegaState.stencilBack, passOp = _b.passOp, failOp = _b.failOp, depthFailOp = _b.depthFailOp, compare = _b.compare;\n            if (currentMegaState.stencilBack.passOp !== passOp ||\n                currentMegaState.stencilBack.failOp !== failOp ||\n                currentMegaState.stencilBack.depthFailOp !== depthFailOp) {\n                // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate\n                gl.stencilOpSeparate(gl.BACK, failOp, depthFailOp, passOp);\n                currentMegaState.stencilBack.passOp = passOp;\n                currentMegaState.stencilBack.failOp = failOp;\n                currentMegaState.stencilBack.depthFailOp = depthFailOp;\n            }\n            if (currentMegaState.stencilBack.compare !== compare) {\n                this.setStencilReference(0);\n                currentMegaState.stencilBack.compare = compare;\n            }\n        }\n        if (currentMegaState.stencilFront.mask !== newMegaState.stencilFront.mask ||\n            currentMegaState.stencilBack.mask !== newMegaState.stencilBack.mask) {\n            shouldApplyStencil = true;\n            currentMegaState.stencilFront.mask = newMegaState.stencilFront.mask;\n            currentMegaState.stencilBack.mask = newMegaState.stencilBack.mask;\n        }\n        if (shouldApplyStencil) {\n            this.applyStencil();\n        }\n        if (currentMegaState.cullMode !== newMegaState.cullMode) {\n            if (currentMegaState.cullMode === CullMode.NONE) {\n                gl.enable(gl.CULL_FACE);\n            }\n            else if (newMegaState.cullMode === CullMode.NONE) {\n                gl.disable(gl.CULL_FACE);\n            }\n            if (newMegaState.cullMode === CullMode.BACK) {\n                gl.cullFace(gl.BACK);\n            }\n            else if (newMegaState.cullMode === CullMode.FRONT) {\n                gl.cullFace(gl.FRONT);\n            }\n            else if (newMegaState.cullMode === CullMode.FRONT_AND_BACK) {\n                gl.cullFace(gl.FRONT_AND_BACK);\n            }\n            currentMegaState.cullMode = newMegaState.cullMode;\n        }\n        if (currentMegaState.frontFace !== newMegaState.frontFace) {\n            gl.frontFace(newMegaState.frontFace);\n            currentMegaState.frontFace = newMegaState.frontFace;\n        }\n        if (currentMegaState.polygonOffset !== newMegaState.polygonOffset) {\n            if (newMegaState.polygonOffset) {\n                gl.polygonOffset(1, 1);\n                gl.enable(gl.POLYGON_OFFSET_FILL);\n            }\n            else {\n                gl.disable(gl.POLYGON_OFFSET_FILL);\n            }\n            currentMegaState.polygonOffset = newMegaState.polygonOffset;\n        }\n    };\n    Device_GL.prototype.validatePipelineFormats = function (pipeline) {\n        for (var i = 0; i < this.currentColorAttachments.length; i++) {\n            var attachment = this.currentColorAttachments[i];\n            if (attachment === null)\n                continue;\n            // assert(attachment.format === pipeline.colorAttachmentFormats[i]);\n        }\n        if (this.currentDepthStencilAttachment) {\n            assert(this.currentDepthStencilAttachment.format ===\n                pipeline.depthStencilAttachmentFormat);\n        }\n        if (this.currentSampleCount !== -1) {\n            assert(this.currentSampleCount === pipeline.sampleCount);\n        }\n    };\n    Device_GL.prototype.setPipeline = function (o) {\n        var _this = this;\n        if (this.renderBundle) {\n            this.renderBundle.push(function () { return _this.setPipeline(o); });\n            return;\n        }\n        this.currentPipeline = o;\n        this.validatePipelineFormats(this.currentPipeline);\n        // We allow users to use \"non-ready\" pipelines for emergencies. In this case, there can be a bit of stuttering.\n        // assert(this.queryPipelineReady(this.currentPipeline));\n        this.setMegaState(this.currentPipeline.megaState);\n        var program = this.currentPipeline.program;\n        this.useProgram(program);\n        if (program.compileState === ProgramCompileState_GL.NeedsBind) {\n            var gl = this.gl;\n            var prog = program.gl_program;\n            var deviceProgram = program.descriptor;\n            var uniformBlocks = findall(deviceProgram.vertex.glsl, UNIFROM_BLOCK_REGEXP);\n            if (isWebGL2(gl)) {\n                for (var i = 0; i < uniformBlocks.length; i++) {\n                    var _a = __read(uniformBlocks[i], 2), blockName = _a[1];\n                    // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/getUniformBlockIndex\n                    var blockIdx = gl.getUniformBlockIndex(prog, blockName);\n                    if (blockIdx !== -1 && blockIdx !== 0xffffffff) {\n                        // @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/uniformBlockBinding\n                        gl.uniformBlockBinding(prog, blockIdx, i);\n                    }\n                }\n            }\n            var samplers = findall(deviceProgram.fragment.glsl, /^uniform .*sampler\\S+ (\\w+);\\s* \\/\\/ BINDING=(\\d+)$/gm);\n            for (var i = 0; i < samplers.length; i++) {\n                var _b = __read(samplers[i], 3), name_1 = _b[1], location_1 = _b[2];\n                var samplerUniformLocation = gl.getUniformLocation(prog, name_1);\n                gl.uniform1i(samplerUniformLocation, parseInt(location_1));\n            }\n            program.compileState = ProgramCompileState_GL.ReadyToUse;\n        }\n    };\n    Device_GL.prototype.setVertexInput = function (inputLayout_, vertexBuffers, indexBuffer) {\n        var e_1, _a;\n        var _this = this;\n        var _b;\n        if (this.renderBundle) {\n            this.renderBundle.push(function () {\n                return _this.setVertexInput(inputLayout_, vertexBuffers, indexBuffer);\n            });\n            return;\n        }\n        if (inputLayout_ !== null) {\n            assert(this.currentPipeline.inputLayout === inputLayout_);\n            var inputLayout = inputLayout_;\n            this.bindVAO(inputLayout.vao);\n            var gl = this.gl;\n            for (var i = 0; i < inputLayout.vertexBufferDescriptors.length; i++) {\n                var vertexBufferDescriptor = inputLayout.vertexBufferDescriptors[i];\n                var arrayStride = vertexBufferDescriptor.arrayStride, attributes = vertexBufferDescriptor.attributes;\n                try {\n                    for (var attributes_1 = (e_1 = void 0, __values(attributes)), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n                        var attribute = attributes_1_1.value;\n                        var shaderLocation = attribute.shaderLocation, offset = attribute.offset;\n                        // find location by name in WebGL1\n                        var location_2 = isWebGL2(gl)\n                            ? shaderLocation\n                            : (_b = inputLayout.program.attributes[shaderLocation]) === null || _b === void 0 ? void 0 : _b.location;\n                        if (!isNil(location_2)) {\n                            var vertexBuffer = vertexBuffers[i];\n                            if (vertexBuffer === null)\n                                continue;\n                            // @ts-ignore\n                            var format = attribute.vertexFormat;\n                            gl.bindBuffer(gl.ARRAY_BUFFER, getPlatformBuffer$1(vertexBuffer.buffer));\n                            var bufferOffset = (vertexBuffer.offset || 0) + offset;\n                            gl.vertexAttribPointer(location_2, format.size, format.type, format.normalized, arrayStride, bufferOffset);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (attributes_1_1 && !attributes_1_1.done && (_a = attributes_1.return)) _a.call(attributes_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            assert((indexBuffer !== null) === (inputLayout.indexBufferFormat !== null));\n            if (indexBuffer !== null) {\n                var buffer = indexBuffer.buffer;\n                assert(buffer.usage === BufferUsage.INDEX);\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, getPlatformBuffer$1(buffer));\n                this.currentIndexBufferByteOffset = indexBuffer.offset || 0;\n            }\n            else {\n                this.currentIndexBufferByteOffset = null;\n            }\n        }\n        else {\n            assert(this.currentPipeline.inputLayout === null);\n            assert(indexBuffer === null);\n            this.bindVAO(null);\n            this.currentIndexBufferByteOffset = 0;\n        }\n    };\n    Device_GL.prototype.setStencilReference = function (value) {\n        if (this.currentStencilRef === value) {\n            return;\n        }\n        this.currentStencilRef = value;\n        this.applyStencil();\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-draw\n     */\n    Device_GL.prototype.draw = function (vertexCount, instanceCount, firstVertex, firstInstance) {\n        var _a;\n        var _this = this;\n        if (this.renderBundle) {\n            this.renderBundle.push(function () {\n                return _this.draw(vertexCount, instanceCount, firstVertex, firstInstance);\n            });\n            return;\n        }\n        var gl = this.gl;\n        var pipeline = this.currentPipeline;\n        if (instanceCount) {\n            var params = [\n                pipeline.drawMode,\n                firstVertex || 0,\n                vertexCount,\n                instanceCount,\n            ];\n            if (isWebGL2(gl)) {\n                gl.drawArraysInstanced.apply(gl, __spreadArray([], __read(params), false));\n            }\n            else {\n                (_a = this.ANGLE_instanced_arrays).drawArraysInstancedANGLE.apply(_a, __spreadArray([], __read(params), false));\n            }\n        }\n        else {\n            gl.drawArrays(pipeline.drawMode, firstVertex, vertexCount);\n        }\n        this.debugGroupStatisticsDrawCall();\n        this.debugGroupStatisticsTriangles((vertexCount / 3) * Math.max(instanceCount, 1));\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindexed\n     */\n    Device_GL.prototype.drawIndexed = function (indexCount, instanceCount, firstIndex, baseVertex, firstInstance) {\n        var _a;\n        var _this = this;\n        if (this.renderBundle) {\n            this.renderBundle.push(function () {\n                return _this.drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);\n            });\n            return;\n        }\n        var gl = this.gl;\n        var pipeline = this.currentPipeline, inputLayout = assertExists(pipeline.inputLayout);\n        var byteOffset = assertExists(this.currentIndexBufferByteOffset) +\n            firstIndex * inputLayout.indexBufferCompByteSize;\n        if (instanceCount) {\n            var params = [\n                pipeline.drawMode,\n                indexCount,\n                inputLayout.indexBufferType,\n                byteOffset,\n                instanceCount,\n            ];\n            if (isWebGL2(gl)) {\n                gl.drawElementsInstanced.apply(gl, __spreadArray([], __read(params), false));\n            }\n            else {\n                (_a = this.ANGLE_instanced_arrays).drawElementsInstancedANGLE.apply(_a, __spreadArray([], __read(params), false));\n            }\n        }\n        else {\n            gl.drawElements(pipeline.drawMode, indexCount, inputLayout.indexBufferType, byteOffset);\n        }\n        this.debugGroupStatisticsDrawCall();\n        this.debugGroupStatisticsTriangles((indexCount / 3) * Math.max(instanceCount, 1));\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindirect\n     */\n    Device_GL.prototype.drawIndirect = function (indirectBuffer, indirectOffset) { };\n    Device_GL.prototype.drawIndexedIndirect = function (indirectBuffer, indirectOffset) { };\n    Device_GL.prototype.beginOcclusionQuery = function (queryIndex) {\n        var gl = this.gl;\n        if (isWebGL2(gl)) {\n            var queryPool = this.currentRenderPassDescriptor\n                .occlusionQueryPool;\n            gl.beginQuery(queryPool.gl_query_type, queryPool.gl_query[queryIndex]);\n        }\n    };\n    Device_GL.prototype.endOcclusionQuery = function () {\n        var gl = this.gl;\n        if (isWebGL2(gl)) {\n            var queryPool = this.currentRenderPassDescriptor\n                .occlusionQueryPool;\n            gl.endQuery(queryPool.gl_query_type);\n        }\n    };\n    Device_GL.prototype.pipelineQueryReady = function (o) {\n        var pipeline = o;\n        return this.queryProgramReady(pipeline.program);\n    };\n    Device_GL.prototype.pipelineForceReady = function (o) {\n        // No need to do anything; it will be forced to compile when used naturally.\n    };\n    Device_GL.prototype.endPass = function () {\n        var gl = this.gl;\n        var gl2 = isWebGL2(gl);\n        var skipBlit = this.currentColorResolveTos.length === 1 &&\n            this.currentColorResolveTos[0] === this.scTexture;\n        var didUnbindDraw = false;\n        for (var i = 0; i < this.currentColorAttachments.length; i++) {\n            var colorResolveFrom = this.currentColorAttachments[i];\n            if (colorResolveFrom !== null) {\n                var colorResolveTo = this.currentColorResolveTos[i];\n                var didBindRead = false;\n                if (colorResolveTo !== null) {\n                    assert(colorResolveFrom.width === colorResolveTo.width &&\n                        colorResolveFrom.height === colorResolveTo.height);\n                    // assert(colorResolveFrom.format === colorResolveTo.format);\n                    this.setScissorRectEnabled(false);\n                    if (!skipBlit) {\n                        if (gl2) {\n                            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.resolveColorReadFramebuffer);\n                        }\n                        if (this.resolveColorAttachmentsChanged) {\n                            if (gl2) {\n                                this.bindFramebufferAttachment(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, colorResolveFrom, this.currentColorAttachmentLevels[i]);\n                            }\n                        }\n                    }\n                    didBindRead = true;\n                    if (!skipBlit) {\n                        // Special case: Blitting to the on-screen.\n                        if (colorResolveTo === this.scTexture) {\n                            gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.scPlatformFramebuffer);\n                        }\n                        else {\n                            gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveColorDrawFramebuffer);\n                            if (this.resolveColorAttachmentsChanged)\n                                gl.framebufferTexture2D(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorResolveTo.gl_texture, this.currentColorResolveToLevels[i]);\n                        }\n                    }\n                    if (!skipBlit) {\n                        if (gl2) {\n                            gl.blitFramebuffer(0, 0, colorResolveFrom.width, colorResolveFrom.height, 0, 0, colorResolveTo.width, colorResolveTo.height, gl.COLOR_BUFFER_BIT, gl.LINEAR);\n                            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n                        }\n                        else {\n                            // need an extra render pass in WebGL1\n                            this.submitBlitRenderPass(colorResolveFrom, colorResolveTo);\n                        }\n                    }\n                    didUnbindDraw = true;\n                }\n                if (!this.currentRenderPassDescriptor.colorStore[i]) {\n                    if (!skipBlit && !didBindRead) {\n                        gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveColorReadFramebuffer);\n                        if (this.resolveColorAttachmentsChanged)\n                            this.bindFramebufferAttachment(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, colorResolveFrom, this.currentColorAttachmentLevels[i]);\n                    }\n                    // if (gl2) {\n                    //   gl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [\n                    //     gl.COLOR_ATTACHMENT0,\n                    //   ]);\n                    // }\n                }\n                if (!skipBlit) {\n                    gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n                }\n            }\n        }\n        this.resolveColorAttachmentsChanged = false;\n        var depthStencilResolveFrom = this.currentDepthStencilAttachment;\n        if (depthStencilResolveFrom) {\n            var depthStencilResolveTo = this.currentDepthStencilResolveTo;\n            var didBindRead = false;\n            if (depthStencilResolveTo) {\n                assert(depthStencilResolveFrom.width === depthStencilResolveTo.width &&\n                    depthStencilResolveFrom.height === depthStencilResolveTo.height);\n                this.setScissorRectEnabled(false);\n                if (!skipBlit) {\n                    gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveDepthStencilReadFramebuffer);\n                    gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveDepthStencilDrawFramebuffer);\n                    if (this.resolveDepthStencilAttachmentsChanged) {\n                        this.bindFramebufferDepthStencilAttachment(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, depthStencilResolveFrom);\n                        this.bindFramebufferDepthStencilAttachment(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, depthStencilResolveTo);\n                    }\n                }\n                didBindRead = true;\n                if (!skipBlit) {\n                    if (gl2) {\n                        gl.blitFramebuffer(0, 0, depthStencilResolveFrom.width, depthStencilResolveFrom.height, 0, 0, depthStencilResolveTo.width, depthStencilResolveTo.height, gl.DEPTH_BUFFER_BIT, gl.NEAREST);\n                    }\n                    gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n                }\n                didUnbindDraw = true;\n            }\n            if (!skipBlit && !this.currentRenderPassDescriptor.depthStencilStore) {\n                if (!didBindRead) {\n                    gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, this.resolveDepthStencilReadFramebuffer);\n                    if (this.resolveDepthStencilAttachmentsChanged)\n                        this.bindFramebufferDepthStencilAttachment(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, depthStencilResolveFrom);\n                    didBindRead = true;\n                }\n                if (gl2) {\n                    gl.invalidateFramebuffer(gl.READ_FRAMEBUFFER, [\n                        gl.DEPTH_STENCIL_ATTACHMENT,\n                    ]);\n                }\n            }\n            if (!skipBlit && didBindRead)\n                gl.bindFramebuffer(gl2 ? GL.READ_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n            this.resolveDepthStencilAttachmentsChanged = false;\n        }\n        if (!skipBlit && !didUnbindDraw) {\n            // If we did not unbind from a resolve, then we need to unbind our render pass draw FBO here.\n            gl.bindFramebuffer(gl2 ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER, null);\n        }\n    };\n    Device_GL.prototype.setScissorRectEnabled = function (v) {\n        if (this.currentScissorEnabled === v) {\n            return;\n        }\n        var gl = this.gl;\n        if (v) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.currentScissorEnabled = v;\n    };\n    Device_GL.prototype.applyStencil = function () {\n        if (isNil(this.currentStencilRef)) {\n            return;\n        }\n        this.gl.stencilFuncSeparate(GL.FRONT, this.currentMegaState.stencilFront.compare, this.currentStencilRef, this.currentMegaState.stencilFront.mask || 0xff);\n        this.gl.stencilFuncSeparate(GL.BACK, this.currentMegaState.stencilBack.compare, this.currentStencilRef, this.currentMegaState.stencilBack.mask || 0xff);\n    };\n    Device_GL.prototype.getFallbackTexture = function (samplerEntry) {\n        var gl_target = samplerEntry.gl_target, formatKind = samplerEntry.formatKind;\n        if (gl_target === GL.TEXTURE_2D)\n            return formatKind === SamplerFormatKind.Depth\n                ? this.fallbackTexture2DDepth\n                : this.fallbackTexture2D;\n        else if (gl_target === GL.TEXTURE_2D_ARRAY)\n            return this.fallbackTexture2DArray;\n        else if (gl_target === GL.TEXTURE_3D)\n            return this.fallbackTexture3D;\n        else if (gl_target === GL.TEXTURE_CUBE_MAP)\n            return this.fallbackTextureCube;\n        else\n            throw new Error('whoops');\n    };\n    Device_GL.prototype.submitBlitRenderPass = function (resolveFrom, resolveTo) {\n        if (!this.blitRenderPipeline) {\n            this.blitProgram = this.createProgram({\n                vertex: {\n                    glsl: \"layout(location = 0) in vec2 a_Position;\\nout vec2 v_TexCoord;\\nvoid main() {\\n  v_TexCoord = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n\\n  #ifdef VIEWPORT_ORIGIN_TL\\n    v_TexCoord.y = 1.0 - v_TexCoord.y;\\n  #endif\\n}\",\n                },\n                fragment: {\n                    glsl: \"uniform sampler2D u_Texture;\\nin vec2 v_TexCoord;\\nout vec4 outputColor;\\nvoid main() {\\n  outputColor = texture(SAMPLER_2D(u_Texture), v_TexCoord);\\n}\",\n                },\n            });\n            this.blitVertexBuffer = this.createBuffer({\n                usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n                viewOrSize: new Float32Array([-4, -4, 4, -4, 0, 4]),\n            });\n            this.blitInputLayout = this.createInputLayout({\n                vertexBufferDescriptors: [\n                    {\n                        arrayStride: 4 * 2,\n                        stepMode: VertexStepMode.VERTEX,\n                        attributes: [\n                            {\n                                format: Format.F32_RG,\n                                offset: 4 * 0,\n                                shaderLocation: 0,\n                            },\n                        ],\n                    },\n                ],\n                indexBufferFormat: null,\n                program: this.blitProgram,\n            });\n            this.blitRenderPipeline = this.createRenderPipeline({\n                topology: PrimitiveTopology.TRIANGLES,\n                sampleCount: 1,\n                program: this.blitProgram,\n                colorAttachmentFormats: [Format.U8_RGBA_RT],\n                depthStencilAttachmentFormat: null,\n                inputLayout: this.blitInputLayout,\n                megaStateDescriptor: copyMegaState(defaultMegaState),\n            });\n            this.blitBindings = this.createBindings({\n                samplerBindings: [\n                    {\n                        sampler: null,\n                        texture: resolveFrom.texture,\n                    },\n                ],\n                uniformBufferBindings: [],\n            });\n            this.blitProgram.setUniformsLegacy({\n                u_Texture: resolveFrom,\n            });\n        }\n        // save currentRenderPassDescriptor since we're already in a render pass\n        var currentRenderPassDescriptor = this.currentRenderPassDescriptor;\n        this.currentRenderPassDescriptor = null;\n        this.inBlitRenderPass = true;\n        var blitRenderPass = this.createRenderPass({\n            colorAttachment: [resolveFrom],\n            colorResolveTo: [resolveTo],\n            colorClearColor: [TransparentWhite],\n        });\n        var _a = this.getCanvas(), width = _a.width, height = _a.height;\n        blitRenderPass.setPipeline(this.blitRenderPipeline);\n        blitRenderPass.setBindings(this.blitBindings);\n        blitRenderPass.setVertexInput(this.blitInputLayout, [{ buffer: this.blitVertexBuffer }], null);\n        blitRenderPass.setViewport(0, 0, width, height);\n        // disable blending for blit\n        this.gl.disable(this.gl.BLEND);\n        blitRenderPass.draw(3, 0);\n        this.gl.enable(this.gl.BLEND);\n        // restore\n        this.currentRenderPassDescriptor = currentRenderPassDescriptor;\n        this.inBlitRenderPass = false;\n    };\n    return Device_GL;\n}());\n\nvar WebGLDeviceContribution = /** @class */ (function () {\n    function WebGLDeviceContribution(pluginOptions) {\n        this.pluginOptions = pluginOptions;\n    }\n    WebGLDeviceContribution.prototype.createSwapChain = function ($canvas) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, targets, xrCompatible, _b, antialias, _c, preserveDrawingBuffer, _d, premultipliedAlpha, shaderDebug, trackResources, options, gl;\n            return __generator(this, function (_e) {\n                _a = this.pluginOptions, targets = _a.targets, xrCompatible = _a.xrCompatible, _b = _a.antialias, antialias = _b === void 0 ? false : _b, _c = _a.preserveDrawingBuffer, preserveDrawingBuffer = _c === void 0 ? false : _c, _d = _a.premultipliedAlpha, premultipliedAlpha = _d === void 0 ? true : _d, shaderDebug = _a.shaderDebug, trackResources = _a.trackResources;\n                options = {\n                    // alpha: true,\n                    antialias: antialias,\n                    // @see https://stackoverflow.com/questions/27746091/preservedrawingbuffer-false-is-it-worth-the-effort\n                    preserveDrawingBuffer: preserveDrawingBuffer,\n                    // @see https://webglfundamentals.org/webgl/lessons/webgl-qna-how-to-use-the-stencil-buffer.html\n                    stencil: true,\n                    // @see https://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html\n                    premultipliedAlpha: premultipliedAlpha,\n                    xrCompatible: xrCompatible,\n                };\n                this.handleContextEvents($canvas);\n                if (targets.includes('webgl2')) {\n                    gl =\n                        $canvas.getContext('webgl2', options) ||\n                            $canvas.getContext('experimental-webgl2', options);\n                }\n                if (!gl && targets.includes('webgl1')) {\n                    gl =\n                        $canvas.getContext('webgl', options) ||\n                            $canvas.getContext('experimental-webgl', options);\n                }\n                return [2 /*return*/, new Device_GL(gl, {\n                        shaderDebug: shaderDebug,\n                        trackResources: trackResources,\n                    })];\n            });\n        });\n    };\n    WebGLDeviceContribution.prototype.handleContextEvents = function ($canvas) {\n        var _a = this.pluginOptions, onContextLost = _a.onContextLost, onContextRestored = _a.onContextRestored, onContextCreationError = _a.onContextCreationError;\n        // bind context event listeners\n        if (onContextCreationError) {\n            // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextcreationerror_event\n            $canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);\n        }\n        if (onContextLost) {\n            $canvas.addEventListener('webglcontextlost', onContextLost, false);\n        }\n        if (onContextRestored) {\n            $canvas.addEventListener('webglcontextrestored', onContextRestored, false);\n        }\n    };\n    return WebGLDeviceContribution;\n}());\n\nlet wasm;\n\nconst cachedTextDecoder =\n  typeof TextDecoder !== 'undefined'\n    ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true })\n    : {\n        decode: () => {\n          throw Error('TextDecoder not available');\n        },\n      };\n\nif (typeof TextDecoder !== 'undefined') {\n  cachedTextDecoder.decode();\n}\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 132) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder =\n  typeof TextEncoder !== 'undefined'\n    ? new TextEncoder('utf-8')\n    : {\n        encode: () => {\n          throw Error('TextEncoder not available');\n        },\n      };\n\nconst encodeString =\n  typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n      }\n    : function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n          read: arg.length,\n          written: buf.length,\n        };\n      };\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0()\n      .subarray(ptr, ptr + buf.length)\n      .set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n\n  const mem = getUint8Memory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, (len = offset + arg.length * 3), 1) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n/**\n * @param {string} source\n * @param {string} stage\n * @param {boolean} validation_enabled\n * @returns {string}\n */\nfunction glsl_compile(source, stage, validation_enabled) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(\n      source,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(\n      stage,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len1 = WASM_VECTOR_LEN;\n    wasm.glsl_compile(retptr, ptr0, len0, ptr1, len1, validation_enabled);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred3_0 = r0;\n    deferred3_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n  }\n}\n\n/**\n */\nclass WGSLComposer {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(WGSLComposer.prototype);\n    obj.__wbg_ptr = ptr;\n\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wgslcomposer_free(ptr);\n  }\n  /**\n   */\n  constructor() {\n    const ret = wasm.wgslcomposer_new();\n    return WGSLComposer.__wrap(ret);\n  }\n  /**\n   * @param {string} source\n   */\n  load_composable(source) {\n    const ptr0 = passStringToWasm0(\n      source,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc,\n    );\n    const len0 = WASM_VECTOR_LEN;\n    wasm.wgslcomposer_load_composable(this.__wbg_ptr, ptr0, len0);\n  }\n  /**\n   * @param {string} source\n   * @returns {string}\n   */\n  wgsl_compile(source) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(\n        source,\n        wasm.__wbindgen_malloc,\n        wasm.__wbindgen_realloc,\n      );\n      const len0 = WASM_VECTOR_LEN;\n      wasm.wgslcomposer_wgsl_compile(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      deferred2_0 = r0;\n      deferred2_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n  }\n}\n\nasync function __wbg_load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn(\n            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n',\n            e,\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_log_1d3ae0273d8f4f8a = function (arg0) {\n    console.log(getObject(arg0));\n  };\n  imports.wbg.__wbg_log_576ca876af0d4a77 = function (arg0, arg1) {\n    console.log(getObject(arg0), getObject(arg1));\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n\n  return imports;\n}\n\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n\n  return wasm;\n}\n\nasync function __wbg_init(input) {\n  if (wasm !== undefined) return wasm;\n  const imports = __wbg_get_imports();\n\n  if (\n    typeof input === 'string' ||\n    (typeof Request === 'function' && input instanceof Request) ||\n    (typeof URL === 'function' && input instanceof URL)\n  ) {\n    input = fetch(input);\n  }\n\n  const { instance, module } = await __wbg_load(await input, imports);\n\n  return __wbg_finalize_init(instance, module);\n}\n\n/**\n * @see https://github.com/gpuweb/cts/blob/main/src/webgpu/constants.ts\n */\nvar GPUTextureUsage$1;\n(function (GPUTextureUsage) {\n    GPUTextureUsage[GPUTextureUsage[\"COPY_SRC\"] = 1] = \"COPY_SRC\";\n    GPUTextureUsage[GPUTextureUsage[\"COPY_DST\"] = 2] = \"COPY_DST\";\n    GPUTextureUsage[GPUTextureUsage[\"TEXTURE_BINDING\"] = 4] = \"TEXTURE_BINDING\";\n    // SAMPLED= 0x04,\n    GPUTextureUsage[GPUTextureUsage[\"STORAGE_BINDING\"] = 8] = \"STORAGE_BINDING\";\n    GPUTextureUsage[GPUTextureUsage[\"STORAGE\"] = 8] = \"STORAGE\";\n    GPUTextureUsage[GPUTextureUsage[\"RENDER_ATTACHMENT\"] = 16] = \"RENDER_ATTACHMENT\";\n})(GPUTextureUsage$1 || (GPUTextureUsage$1 = {}));\n// @see https://www.w3.org/TR/webgpu/#typedefdef-gpumapmodeflags\nvar GPUMapMode;\n(function (GPUMapMode) {\n    GPUMapMode[GPUMapMode[\"READ\"] = 1] = \"READ\";\n    GPUMapMode[GPUMapMode[\"WRITE\"] = 2] = \"WRITE\";\n})(GPUMapMode || (GPUMapMode = {}));\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/usage#value\n */\nfunction translateTextureUsage(usage) {\n    var gpuUsage = 0;\n    if (usage & TextureUsage.SAMPLED)\n        gpuUsage |=\n            GPUTextureUsage$1.TEXTURE_BINDING |\n                GPUTextureUsage$1.COPY_DST |\n                GPUTextureUsage$1.COPY_SRC;\n    if (usage & TextureUsage.STORAGE)\n        gpuUsage |=\n            GPUTextureUsage$1.TEXTURE_BINDING |\n                GPUTextureUsage$1.STORAGE_BINDING |\n                GPUTextureUsage$1.COPY_SRC |\n                GPUTextureUsage$1.COPY_DST;\n    if (usage & TextureUsage.RENDER_TARGET)\n        gpuUsage |=\n            GPUTextureUsage$1.RENDER_ATTACHMENT |\n                GPUTextureUsage$1.TEXTURE_BINDING |\n                GPUTextureUsage$1.COPY_SRC |\n                GPUTextureUsage$1.COPY_DST;\n    return gpuUsage;\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gputextureformat\n */\nfunction translateTextureFormat(format) {\n    // 8-bit formats\n    if (format === Format.U8_R_NORM)\n        return 'r8unorm';\n    else if (format === Format.S8_R_NORM)\n        return 'r8snorm';\n    // 16-bit formats\n    else if (format === Format.U8_RG_NORM)\n        return 'rg8unorm';\n    else if (format === Format.S8_RG_NORM)\n        return 'rg8snorm';\n    // 32-bit formats\n    else if (format === Format.U32_R)\n        return 'r32uint';\n    else if (format === Format.S32_R)\n        return 'r32sint';\n    else if (format === Format.F32_R)\n        return 'r32float';\n    else if (format === Format.U16_RG)\n        return 'rg16uint';\n    else if (format === Format.S16_RG)\n        return 'rg16sint';\n    else if (format === Format.F16_RG)\n        return 'rg16float';\n    else if (format === Format.U8_RGBA_RT)\n        return 'bgra8unorm';\n    else if (format === Format.U8_RGBA_RT_SRGB)\n        return 'bgra8unorm-srgb';\n    else if (format === Format.U8_RGBA_NORM)\n        return 'rgba8unorm';\n    else if (format === Format.U8_RGBA_SRGB)\n        return 'rgba8unorm-srgb';\n    else if (format === Format.S8_RGBA_NORM)\n        return 'rgba8snorm';\n    // 64-bit formats\n    else if (format === Format.U32_RG)\n        return 'rg32uint';\n    else if (format === Format.S32_RG)\n        return 'rg32sint';\n    else if (format === Format.F32_RG)\n        return 'rg32float';\n    else if (format === Format.U16_RGBA)\n        return 'rgba16uint';\n    else if (format === Format.S16_RGBA)\n        return 'rgba16sint';\n    else if (format === Format.F16_RGBA)\n        return 'rgba16float';\n    // 128-bit formats\n    else if (format === Format.F32_RGBA)\n        return 'rgba32float';\n    else if (format === Format.U32_RGBA)\n        return 'rgba32uint';\n    else if (format === Format.S32_RGBA)\n        return 'rgba32sint';\n    // depth stencil formats\n    else if (format === Format.D24)\n        return 'depth24plus';\n    else if (format === Format.D24_S8)\n        return 'depth24plus-stencil8';\n    else if (format === Format.D32F)\n        return 'depth32float';\n    else if (format === Format.D32F_S8)\n        return 'depth32float-stencil8';\n    // bc\n    else if (format === Format.BC1)\n        return 'bc1-rgba-unorm';\n    else if (format === Format.BC1_SRGB)\n        return 'bc1-rgba-unorm-srgb';\n    else if (format === Format.BC2)\n        return 'bc2-rgba-unorm';\n    else if (format === Format.BC2_SRGB)\n        return 'bc2-rgba-unorm-srgb';\n    else if (format === Format.BC3)\n        return 'bc3-rgba-unorm';\n    else if (format === Format.BC3_SRGB)\n        return 'bc3-rgba-unorm-srgb';\n    else if (format === Format.BC4_SNORM)\n        return 'bc4-r-snorm';\n    else if (format === Format.BC4_UNORM)\n        return 'bc4-r-unorm';\n    else if (format === Format.BC5_SNORM)\n        return 'bc5-rg-snorm';\n    else if (format === Format.BC5_UNORM)\n        return 'bc5-rg-unorm';\n    else\n        throw 'whoops';\n}\nfunction translateTextureDimension(dimension) {\n    if (dimension === TextureDimension.TEXTURE_2D)\n        return '2d';\n    else if (dimension === TextureDimension.TEXTURE_CUBE_MAP)\n        return '2d';\n    else if (dimension === TextureDimension.TEXTURE_2D_ARRAY)\n        return '2d';\n    else if (dimension === TextureDimension.TEXTURE_3D)\n        return '3d';\n    else\n        throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gputextureviewdimension\n */\nfunction translateTextureViewDimension(dimension) {\n    if (dimension === TextureDimension.TEXTURE_2D)\n        return '2d';\n    else if (dimension === TextureDimension.TEXTURE_CUBE_MAP)\n        return 'cube';\n    else if (dimension === TextureDimension.TEXTURE_2D_ARRAY)\n        return '2d-array';\n    else if (dimension === TextureDimension.TEXTURE_3D)\n        return '3d';\n    else\n        throw new Error('whoops');\n}\nfunction translateBufferUsage(usage_) {\n    var usage = 0;\n    if (usage_ & BufferUsage.INDEX)\n        usage |= GPUBufferUsage.INDEX;\n    if (usage_ & BufferUsage.VERTEX)\n        usage |= GPUBufferUsage.VERTEX;\n    if (usage_ & BufferUsage.UNIFORM)\n        usage |= GPUBufferUsage.UNIFORM;\n    if (usage_ & BufferUsage.STORAGE)\n        usage |= GPUBufferUsage.STORAGE;\n    if (usage_ & BufferUsage.COPY_SRC)\n        usage |= GPUBufferUsage.COPY_SRC;\n    if (usage_ & BufferUsage.INDIRECT)\n        usage |= GPUBufferUsage.INDIRECT;\n    usage |= GPUBufferUsage.COPY_DST;\n    return usage;\n}\nfunction translateAddressMode(wrapMode) {\n    if (wrapMode === AddressMode.CLAMP_TO_EDGE)\n        return 'clamp-to-edge';\n    else if (wrapMode === AddressMode.REPEAT)\n        return 'repeat';\n    else if (wrapMode === AddressMode.MIRRORED_REPEAT)\n        return 'mirror-repeat';\n    else\n        throw new Error('whoops');\n}\nfunction translateMinMagFilter(texFilter) {\n    if (texFilter === FilterMode.BILINEAR)\n        return 'linear';\n    else if (texFilter === FilterMode.POINT)\n        return 'nearest';\n    else\n        throw new Error('whoops');\n}\n// @see https://www.w3.org/TR/webgpu/#enumdef-gpumipmapfiltermode\nfunction translateMipFilter(mipmapFilter) {\n    if (mipmapFilter === MipmapFilterMode.LINEAR)\n        return 'linear';\n    else if (mipmapFilter === MipmapFilterMode.NEAREST)\n        return 'nearest';\n    else if (mipmapFilter === MipmapFilterMode.NO_MIP)\n        return 'nearest';\n    else\n        throw new Error('whoops');\n}\nfunction getPlatformBuffer(buffer_) {\n    var buffer = buffer_;\n    return buffer.gpuBuffer;\n}\nfunction getPlatformSampler(sampler_) {\n    var sampler = sampler_;\n    return sampler.gpuSampler;\n}\nfunction getPlatformQuerySet(queryPool_) {\n    var queryPool = queryPool_;\n    return queryPool.querySet;\n}\nfunction translateQueryPoolType(type) {\n    if (type === QueryPoolType.OcclusionConservative)\n        return 'occlusion';\n    else\n        throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#primitive-state\n */\nfunction translateTopology(topology) {\n    switch (topology) {\n        case PrimitiveTopology.TRIANGLES:\n            return 'triangle-list';\n        case PrimitiveTopology.POINTS:\n            return 'point-list';\n        case PrimitiveTopology.TRIANGLE_STRIP:\n            return 'triangle-strip';\n        case PrimitiveTopology.LINES:\n            return 'line-list';\n        case PrimitiveTopology.LINE_STRIP:\n            return 'line-strip';\n        default:\n            throw new Error('Unknown primitive topology mode');\n    }\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpucullmode\n */\nfunction translateCullMode(cullMode) {\n    if (cullMode === CullMode.NONE)\n        return 'none';\n    else if (cullMode === CullMode.FRONT)\n        return 'front';\n    else if (cullMode === CullMode.BACK)\n        return 'back';\n    else\n        throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpufrontface\n */\nfunction translateFrontFace(frontFaceMode) {\n    if (frontFaceMode === FrontFace.CCW)\n        return 'ccw';\n    else if (frontFaceMode === FrontFace.CW)\n        return 'cw';\n    else\n        throw new Error('whoops');\n}\nfunction translatePrimitiveState(topology, megaStateDescriptor) {\n    return {\n        topology: translateTopology(topology),\n        cullMode: translateCullMode(megaStateDescriptor.cullMode),\n        frontFace: translateFrontFace(megaStateDescriptor.frontFace),\n    };\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendfactor\n */\nfunction translateBlendFactor(factor) {\n    if (factor === BlendFactor.ZERO)\n        return 'zero';\n    else if (factor === BlendFactor.ONE)\n        return 'one';\n    else if (factor === BlendFactor.SRC)\n        return 'src';\n    else if (factor === BlendFactor.ONE_MINUS_SRC)\n        return 'one-minus-src';\n    else if (factor === BlendFactor.DST)\n        return 'dst';\n    else if (factor === BlendFactor.ONE_MINUS_DST)\n        return 'one-minus-dst';\n    else if (factor === BlendFactor.SRC_ALPHA)\n        return 'src-alpha';\n    else if (factor === BlendFactor.ONE_MINUS_SRC_ALPHA)\n        return 'one-minus-src-alpha';\n    else if (factor === BlendFactor.DST_ALPHA)\n        return 'dst-alpha';\n    else if (factor === BlendFactor.ONE_MINUS_DST_ALPHA)\n        return 'one-minus-dst-alpha';\n    else if (factor === BlendFactor.CONST)\n        return 'constant';\n    else if (factor === BlendFactor.ONE_MINUS_CONSTANT)\n        return 'one-minus-constant';\n    else if (factor === BlendFactor.SRC_ALPHA_SATURATE)\n        return 'src-alpha-saturated';\n    else\n        throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#enumdef-gpublendoperation\n */\nfunction translateBlendMode(mode) {\n    if (mode === BlendMode.ADD)\n        return 'add';\n    else if (mode === BlendMode.SUBSTRACT)\n        return 'subtract';\n    else if (mode === BlendMode.REVERSE_SUBSTRACT)\n        return 'reverse-subtract';\n    else if (mode === BlendMode.MIN)\n        return 'min';\n    else if (mode === BlendMode.MAX)\n        return 'max';\n    else\n        throw new Error('whoops');\n}\nfunction translateBlendComponent(ch) {\n    return {\n        operation: translateBlendMode(ch.blendMode),\n        srcFactor: translateBlendFactor(ch.blendSrcFactor),\n        dstFactor: translateBlendFactor(ch.blendDstFactor),\n    };\n}\nfunction blendComponentIsNil(ch) {\n    return (ch.blendMode === BlendMode.ADD &&\n        ch.blendSrcFactor === BlendFactor.ONE &&\n        ch.blendDstFactor === BlendFactor.ZERO);\n}\nfunction translateBlendState(attachmentState) {\n    if (blendComponentIsNil(attachmentState.rgbBlendState) &&\n        blendComponentIsNil(attachmentState.alphaBlendState)) {\n        return undefined;\n    }\n    else {\n        return {\n            color: translateBlendComponent(attachmentState.rgbBlendState),\n            alpha: translateBlendComponent(attachmentState.alphaBlendState),\n        };\n    }\n}\nfunction translateColorState(attachmentState, format) {\n    return {\n        format: translateTextureFormat(format),\n        blend: translateBlendState(attachmentState),\n        writeMask: attachmentState.channelWriteMask,\n    };\n}\nfunction translateTargets(colorAttachmentFormats, megaStateDescriptor) {\n    return megaStateDescriptor.attachmentsState.map(function (attachmentState, i) {\n        return translateColorState(attachmentState, colorAttachmentFormats[i]);\n    });\n}\n// @see https://www.w3.org/TR/webgpu/#enumdef-gpucomparefunction\nfunction translateCompareFunction(compareFunction) {\n    if (compareFunction === CompareFunction.NEVER)\n        return 'never';\n    else if (compareFunction === CompareFunction.LESS)\n        return 'less';\n    else if (compareFunction === CompareFunction.EQUAL)\n        return 'equal';\n    else if (compareFunction === CompareFunction.LEQUAL)\n        return 'less-equal';\n    else if (compareFunction === CompareFunction.GREATER)\n        return 'greater';\n    else if (compareFunction === CompareFunction.NOTEQUAL)\n        return 'not-equal';\n    else if (compareFunction === CompareFunction.GEQUAL)\n        return 'greater-equal';\n    else if (compareFunction === CompareFunction.ALWAYS)\n        return 'always';\n    else\n        throw new Error('whoops');\n}\nfunction translateStencilOperation(stencilOp) {\n    if (stencilOp === StencilOp.KEEP)\n        return 'keep';\n    else if (stencilOp === StencilOp.REPLACE)\n        return 'replace';\n    else if (stencilOp === StencilOp.ZERO)\n        return 'zero';\n    else if (stencilOp === StencilOp.DECREMENT_CLAMP)\n        return 'decrement-clamp';\n    else if (stencilOp === StencilOp.DECREMENT_WRAP)\n        return 'decrement-wrap';\n    else if (stencilOp === StencilOp.INCREMENT_CLAMP)\n        return 'increment-clamp';\n    else if (stencilOp === StencilOp.INCREMENT_WRAP)\n        return 'increment-wrap';\n    else if (stencilOp === StencilOp.INVERT)\n        return 'invert';\n    else\n        throw new Error('whoops');\n}\n/**\n * @see https://www.w3.org/TR/webgpu/#dictdef-gpudepthstencilstate\n */\nfunction translateDepthStencilState(format, megaStateDescriptor) {\n    if (isNil(format))\n        return undefined;\n    return {\n        /**\n         * @see https://www.w3.org/TR/webgpu/#dom-gpudepthstencilstate-format\n         */\n        format: translateTextureFormat(format),\n        depthWriteEnabled: !!megaStateDescriptor.depthWrite,\n        depthCompare: translateCompareFunction(megaStateDescriptor.depthCompare),\n        depthBias: megaStateDescriptor.polygonOffset ? 1 : 0,\n        depthBiasSlopeScale: megaStateDescriptor.polygonOffset ? 1 : 0,\n        stencilFront: {\n            compare: translateCompareFunction(megaStateDescriptor.stencilFront.compare),\n            passOp: translateStencilOperation(megaStateDescriptor.stencilFront.passOp),\n            failOp: translateStencilOperation(megaStateDescriptor.stencilFront.failOp),\n            depthFailOp: translateStencilOperation(megaStateDescriptor.stencilFront.depthFailOp),\n        },\n        stencilBack: {\n            compare: translateCompareFunction(megaStateDescriptor.stencilBack.compare),\n            passOp: translateStencilOperation(megaStateDescriptor.stencilBack.passOp),\n            failOp: translateStencilOperation(megaStateDescriptor.stencilBack.failOp),\n            depthFailOp: translateStencilOperation(megaStateDescriptor.stencilBack.depthFailOp),\n        },\n        stencilReadMask: 0xffffffff,\n        stencilWriteMask: 0xffffffff,\n        // stencilReadMask: 0xffffffff,\n        // stencilWriteMask: megaStateDescriptor.stencilWrite ? 0xff : 0x00,\n    };\n}\nfunction translateIndexFormat(format) {\n    if (format === null)\n        return undefined;\n    else if (format === Format.U16_R)\n        return 'uint16';\n    else if (format === Format.U32_R)\n        return 'uint32';\n    else\n        throw new Error('whoops');\n}\nfunction translateVertexStepMode(stepMode) {\n    if (stepMode === VertexStepMode.VERTEX)\n        return 'vertex';\n    else if (stepMode === VertexStepMode.INSTANCE)\n        return 'instance';\n    else\n        throw new Error('whoops');\n}\nfunction translateVertexFormat(format) {\n    if (format === Format.U8_R)\n        return 'uint8x2';\n    else if (format === Format.U8_RG)\n        return 'uint8x2';\n    else if (format === Format.U8_RGB)\n        return 'uint8x4';\n    else if (format === Format.U8_RGBA)\n        return 'uint8x4';\n    else if (format === Format.U8_RG_NORM)\n        return 'unorm8x2';\n    else if (format === Format.U8_RGBA_NORM)\n        return 'unorm8x4';\n    else if (format === Format.S8_RGB_NORM)\n        return 'snorm8x4';\n    else if (format === Format.S8_RGBA_NORM)\n        return 'snorm8x4';\n    else if (format === Format.U16_RG_NORM)\n        return 'unorm16x2';\n    else if (format === Format.U16_RGBA_NORM)\n        return 'unorm16x4';\n    else if (format === Format.S16_RG_NORM)\n        return 'snorm16x2';\n    else if (format === Format.S16_RGBA_NORM)\n        return 'snorm16x4';\n    else if (format === Format.S16_RG)\n        return 'uint16x2';\n    else if (format === Format.F16_RG)\n        return 'float16x2';\n    else if (format === Format.F16_RGBA)\n        return 'float16x4';\n    else if (format === Format.F32_R)\n        return 'float32';\n    else if (format === Format.F32_RG)\n        return 'float32x2';\n    else if (format === Format.F32_RGB)\n        return 'float32x3';\n    else if (format === Format.F32_RGBA)\n        return 'float32x4';\n    else\n        throw 'whoops';\n}\nfunction isFormatTextureCompressionBC(format) {\n    var formatTypeFlags = getFormatTypeFlags(format);\n    switch (formatTypeFlags) {\n        case FormatTypeFlags.BC1:\n        case FormatTypeFlags.BC2:\n        case FormatTypeFlags.BC3:\n        case FormatTypeFlags.BC4_SNORM:\n        case FormatTypeFlags.BC4_UNORM:\n        case FormatTypeFlags.BC5_SNORM:\n        case FormatTypeFlags.BC5_UNORM:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getFormatBlockSize(format) {\n    var formatTypeFlags = getFormatTypeFlags(format);\n    switch (formatTypeFlags) {\n        case FormatTypeFlags.BC1:\n        case FormatTypeFlags.BC2:\n        case FormatTypeFlags.BC3:\n        case FormatTypeFlags.BC4_SNORM:\n        case FormatTypeFlags.BC4_UNORM:\n        case FormatTypeFlags.BC5_SNORM:\n        case FormatTypeFlags.BC5_UNORM:\n            return 4;\n        default:\n            return 1;\n    }\n}\nfunction allocateAndCopyTypedBuffer(type, sizeOrDstBuffer, sizeInBytes, copyBuffer) {\n    if (sizeInBytes === void 0) { sizeInBytes = false; }\n    switch (type) {\n        case Format.S8_R:\n        case Format.S8_R_NORM:\n        case Format.S8_RG_NORM:\n        case Format.S8_RGB_NORM:\n        case Format.S8_RGBA_NORM: {\n            var buffer_1 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Int8Array(sizeOrDstBuffer)\n                : new Int8Array(sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_1.set(new Int8Array(copyBuffer));\n            }\n            return buffer_1;\n        }\n        case Format.U8_R:\n        case Format.U8_R_NORM:\n        case Format.U8_RG:\n        case Format.U8_RG_NORM:\n        case Format.U8_RGB:\n        case Format.U8_RGB_NORM:\n        case Format.U8_RGB_SRGB:\n        case Format.U8_RGBA:\n        case Format.U8_RGBA_NORM:\n        case Format.U8_RGBA_SRGB: {\n            var buffer_2 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Uint8Array(sizeOrDstBuffer)\n                : new Uint8Array(sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_2.set(new Uint8Array(copyBuffer));\n            }\n            return buffer_2;\n        }\n        case Format.S16_R:\n        case Format.S16_RG:\n        case Format.S16_RG_NORM:\n        case Format.S16_RGB_NORM:\n        case Format.S16_RGBA:\n        case Format.S16_RGBA_NORM: {\n            var buffer_3 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Int16Array(sizeOrDstBuffer)\n                : new Int16Array(sizeInBytes ? sizeOrDstBuffer / 2 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_3.set(new Int16Array(copyBuffer));\n            }\n            return buffer_3;\n        }\n        case Format.U16_R:\n        case Format.U16_RGB:\n        case Format.U16_RGBA_5551:\n        case Format.U16_RGBA_NORM:\n        case Format.U16_RG_NORM:\n        case Format.U16_R_NORM: {\n            var buffer_4 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Uint16Array(sizeOrDstBuffer)\n                : new Uint16Array(sizeInBytes ? sizeOrDstBuffer / 2 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_4.set(new Uint16Array(copyBuffer));\n            }\n            return buffer_4;\n        }\n        case Format.S32_R: {\n            var buffer_5 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Int32Array(sizeOrDstBuffer)\n                : new Int32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_5.set(new Int32Array(copyBuffer));\n            }\n            return buffer_5;\n        }\n        case Format.U32_R:\n        case Format.U32_RG: {\n            var buffer_6 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Uint32Array(sizeOrDstBuffer)\n                : new Uint32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_6.set(new Uint32Array(copyBuffer));\n            }\n            return buffer_6;\n        }\n        case Format.F32_R:\n        case Format.F32_RG:\n        case Format.F32_RGB:\n        case Format.F32_RGBA: {\n            var buffer_7 = sizeOrDstBuffer instanceof ArrayBuffer\n                ? new Float32Array(sizeOrDstBuffer)\n                : new Float32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_7.set(new Float32Array(copyBuffer));\n            }\n            return buffer_7;\n        }\n    }\n    var buffer = sizeOrDstBuffer instanceof ArrayBuffer\n        ? new Uint8Array(sizeOrDstBuffer)\n        : new Uint8Array(sizeOrDstBuffer);\n    if (copyBuffer) {\n        buffer.set(new Uint8Array(copyBuffer));\n    }\n    return buffer;\n}\n/**\n * Converts a half float to a number\n * @param value half float to convert\n * @returns converted half float\n */\nfunction halfFloat2Number(value) {\n    var s = (value & 0x8000) >> 15;\n    var e = (value & 0x7c00) >> 10;\n    var f = value & 0x03ff;\n    if (e === 0) {\n        return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));\n    }\n    else if (e == 0x1f) {\n        return f ? NaN : (s ? -1 : 1) * Infinity;\n    }\n    return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));\n}\nfunction getBlockInformationFromFormat(format) {\n    switch (format) {\n        // 8 bits formats\n        case 'r8unorm':\n        case 'r8snorm':\n        case 'r8uint':\n        case 'r8sint':\n            return { width: 1, height: 1, length: 1 };\n        // 16 bits formats\n        case 'r16uint':\n        case 'r16sint':\n        case 'r16float':\n        case 'rg8unorm':\n        case 'rg8snorm':\n        case 'rg8uint':\n        case 'rg8sint':\n            return { width: 1, height: 1, length: 2 };\n        // 32 bits formats\n        case 'r32uint':\n        case 'r32sint':\n        case 'r32float':\n        case 'rg16uint':\n        case 'rg16sint':\n        case 'rg16float':\n        case 'rgba8unorm':\n        case 'rgba8unorm-srgb':\n        case 'rgba8snorm':\n        case 'rgba8uint':\n        case 'rgba8sint':\n        case 'bgra8unorm':\n        case 'bgra8unorm-srgb':\n        case 'rgb9e5ufloat':\n        case 'rgb10a2unorm':\n        case 'rg11b10ufloat':\n            return { width: 1, height: 1, length: 4 };\n        // 64 bits formats\n        case 'rg32uint':\n        case 'rg32sint':\n        case 'rg32float':\n        case 'rgba16uint':\n        case 'rgba16sint':\n        case 'rgba16float':\n            return { width: 1, height: 1, length: 8 };\n        // 128 bits formats\n        case 'rgba32uint':\n        case 'rgba32sint':\n        case 'rgba32float':\n            return { width: 1, height: 1, length: 16 };\n        // Depth and stencil formats\n        case 'stencil8':\n            throw new Error('No fixed size for Stencil8 format!');\n        case 'depth16unorm':\n            return { width: 1, height: 1, length: 2 };\n        case 'depth24plus':\n            throw new Error('No fixed size for Depth24Plus format!');\n        case 'depth24plus-stencil8':\n            throw new Error('No fixed size for Depth24PlusStencil8 format!');\n        case 'depth32float':\n            return { width: 1, height: 1, length: 4 };\n        // case 'depth24unorm-stencil8':\n        //   return { width: 1, height: 1, length: 4 };\n        case 'depth32float-stencil8':\n            return { width: 1, height: 1, length: 5 };\n        // BC compressed formats usable if \"texture-compression-bc\" is both\n        // supported by the device/user agent and enabled in requestDevice.\n        case 'bc7-rgba-unorm':\n        case 'bc7-rgba-unorm-srgb':\n        case 'bc6h-rgb-ufloat':\n        case 'bc6h-rgb-float':\n        case 'bc2-rgba-unorm':\n        case 'bc2-rgba-unorm-srgb':\n        case 'bc3-rgba-unorm':\n        case 'bc3-rgba-unorm-srgb':\n        case 'bc5-rg-unorm':\n        case 'bc5-rg-snorm':\n            return { width: 4, height: 4, length: 16 };\n        case 'bc4-r-unorm':\n        case 'bc4-r-snorm':\n        case 'bc1-rgba-unorm':\n        case 'bc1-rgba-unorm-srgb':\n            return { width: 4, height: 4, length: 8 };\n        default:\n            return { width: 1, height: 1, length: 4 };\n    }\n}\n\nvar ResourceBase_WebGPU = /** @class */ (function (_super) {\n    __extends(ResourceBase_WebGPU, _super);\n    function ResourceBase_WebGPU(_a) {\n        var id = _a.id, device = _a.device;\n        var _this = _super.call(this) || this;\n        _this.id = id;\n        _this.device = device;\n        return _this;\n    }\n    ResourceBase_WebGPU.prototype.destroy = function () { };\n    return ResourceBase_WebGPU;\n}(EventEmitter));\n\nvar Bindings_WebGPU = /** @class */ (function (_super) {\n    __extends(Bindings_WebGPU, _super);\n    function Bindings_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _b, _c;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Bindings;\n        var pipeline = descriptor.pipeline;\n        assert(!!pipeline);\n        var uniformBufferBindings = descriptor.uniformBufferBindings, storageBufferBindings = descriptor.storageBufferBindings, samplerBindings = descriptor.samplerBindings, storageTextureBindings = descriptor.storageTextureBindings;\n        _this.numUniformBuffers = (uniformBufferBindings === null || uniformBufferBindings === void 0 ? void 0 : uniformBufferBindings.length) || 0;\n        // entries orders: Uniform Sampler StorageBuffer StorageTexture\n        var gpuBindGroupEntries = [[], [], [], []];\n        var numBindings = 0;\n        if (uniformBufferBindings && uniformBufferBindings.length) {\n            for (var i = 0; i < uniformBufferBindings.length; i++) {\n                var _d = descriptor.uniformBufferBindings[i], binding = _d.binding, size = _d.size, offset = _d.offset, buffer = _d.buffer;\n                var gpuBufferBinding = {\n                    buffer: getPlatformBuffer(buffer),\n                    offset: offset !== null && offset !== void 0 ? offset : 0,\n                    size: size,\n                };\n                gpuBindGroupEntries[0].push({\n                    binding: binding !== null && binding !== void 0 ? binding : numBindings++,\n                    resource: gpuBufferBinding,\n                });\n            }\n        }\n        if (samplerBindings && samplerBindings.length) {\n            numBindings = 0;\n            for (var i = 0; i < samplerBindings.length; i++) {\n                var samplerEntry = __assign(__assign({}, samplerBindings[i]), defaultBindingLayoutSamplerDescriptor);\n                var binding = descriptor.samplerBindings[i];\n                var texture = binding.texture !== null\n                    ? binding.texture\n                    : _this.device['getFallbackTexture'](samplerEntry);\n                samplerEntry.dimension = texture.dimension;\n                samplerEntry.formatKind = getFormatSamplerKind(texture.format);\n                var gpuTextureView = texture.gpuTextureView;\n                gpuBindGroupEntries[1].push({\n                    binding: (_b = binding.textureBinding) !== null && _b !== void 0 ? _b : numBindings++,\n                    resource: gpuTextureView,\n                });\n                if (binding.samplerBinding !== -1) {\n                    var sampler = binding.sampler !== null\n                        ? binding.sampler\n                        : _this.device['getFallbackSampler'](samplerEntry);\n                    var gpuSampler = getPlatformSampler(sampler);\n                    gpuBindGroupEntries[1].push({\n                        binding: (_c = binding.samplerBinding) !== null && _c !== void 0 ? _c : numBindings++,\n                        resource: gpuSampler,\n                    });\n                }\n            }\n        }\n        if (storageBufferBindings && storageBufferBindings.length) {\n            numBindings = 0;\n            for (var i = 0; i < storageBufferBindings.length; i++) {\n                var _e = descriptor.storageBufferBindings[i], binding = _e.binding, size = _e.size, offset = _e.offset, buffer = _e.buffer;\n                var gpuBufferBinding = {\n                    buffer: getPlatformBuffer(buffer),\n                    offset: offset !== null && offset !== void 0 ? offset : 0,\n                    size: size,\n                };\n                gpuBindGroupEntries[2].push({\n                    binding: binding !== null && binding !== void 0 ? binding : numBindings++,\n                    resource: gpuBufferBinding,\n                });\n            }\n        }\n        if (storageTextureBindings && storageTextureBindings.length) {\n            numBindings = 0;\n            for (var i = 0; i < storageTextureBindings.length; i++) {\n                var _f = descriptor.storageTextureBindings[i], binding = _f.binding, texture = _f.texture;\n                var gpuTextureView = texture.gpuTextureView;\n                gpuBindGroupEntries[3].push({\n                    binding: binding !== null && binding !== void 0 ? binding : numBindings++,\n                    resource: gpuTextureView,\n                });\n            }\n        }\n        var lastGroupIndex = gpuBindGroupEntries.findLastIndex(function (group) { return !!group.length; });\n        _this.gpuBindGroup = gpuBindGroupEntries.map(function (gpuBindGroupEntries, i) {\n            return (i <= lastGroupIndex &&\n                _this.device.device.createBindGroup({\n                    layout: pipeline.getBindGroupLayout(i),\n                    entries: gpuBindGroupEntries,\n                }));\n        });\n        return _this;\n    }\n    return Bindings_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar Buffer_WebGPU = /** @class */ (function (_super) {\n    __extends(Buffer_WebGPU, _super);\n    function Buffer_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Buffer;\n        var usage = descriptor.usage, viewOrSize = descriptor.viewOrSize;\n        var useMapRead = !!(usage & BufferUsage.MAP_READ);\n        _this.usage = translateBufferUsage(usage);\n        // Buffer usages (BufferUsage::(MapRead|CopyDst|Storage)) is invalid. If a buffer usage contains BufferUsage::MapRead the only other allowed usage is BufferUsage::CopyDst.\n        // @see https://www.w3.org/TR/webgpu/#dom-gpubufferusage-copy_dst\n        if (useMapRead) {\n            _this.usage = BufferUsage.MAP_READ | BufferUsage.COPY_DST;\n        }\n        var mapBuffer = !isNumber(viewOrSize);\n        // this.size = isView(viewOrSize) ? viewOrSize.byteLength : viewOrSize * 4;\n        _this.view = !isNumber(viewOrSize) ? viewOrSize : null;\n        // 4 bytes alignments (because of the upload which requires this)\n        _this.size = isNumber(viewOrSize)\n            ? align(viewOrSize, 4)\n            : align(viewOrSize.byteLength, 4);\n        if (!isNumber(viewOrSize)) {\n            _this.gpuBuffer = _this.device.device.createBuffer({\n                usage: _this.usage,\n                size: _this.size,\n                mappedAtCreation: true,\n            });\n            var ctor = (viewOrSize && viewOrSize.constructor) || Float32Array;\n            // @ts-ignore\n            new ctor(_this.gpuBuffer.getMappedRange()).set(viewOrSize);\n            _this.gpuBuffer.unmap();\n        }\n        else {\n            _this.gpuBuffer = _this.device.device.createBuffer({\n                usage: _this.usage,\n                size: _this.size,\n                mappedAtCreation: useMapRead ? mapBuffer : false,\n            });\n        }\n        return _this;\n    }\n    Buffer_WebGPU.prototype.setSubData = function (dstByteOffset, src, srcByteOffset, byteLength) {\n        if (srcByteOffset === void 0) { srcByteOffset = 0; }\n        if (byteLength === void 0) { byteLength = 0; }\n        var buffer = this.gpuBuffer;\n        byteLength = byteLength || src.byteLength;\n        byteLength = Math.min(byteLength, this.size - dstByteOffset);\n        // After Migration to Canary\n        var chunkStart = src.byteOffset + srcByteOffset;\n        var chunkEnd = chunkStart + byteLength;\n        // 4 bytes alignments for upload\n        var alignedLength = (byteLength + 3) & ~3;\n        if (alignedLength !== byteLength) {\n            var tempView = new Uint8Array(src.buffer.slice(chunkStart, chunkEnd));\n            src = new Uint8Array(alignedLength);\n            src.set(tempView);\n            srcByteOffset = 0;\n            chunkStart = 0;\n            chunkEnd = alignedLength;\n            byteLength = alignedLength;\n        }\n        // Chunk\n        var maxChunk = 1024 * 1024 * 15;\n        var offset = 0;\n        while (chunkEnd - (chunkStart + offset) > maxChunk) {\n            this.device.device.queue.writeBuffer(buffer, dstByteOffset + offset, src.buffer, chunkStart + offset, maxChunk);\n            offset += maxChunk;\n        }\n        this.device.device.queue.writeBuffer(buffer, dstByteOffset + offset, src.buffer, chunkStart + offset, byteLength - offset);\n    };\n    Buffer_WebGPU.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        // @see https://www.w3.org/TR/webgpu/#dom-gpubuffer-destroy\n        this.gpuBuffer.destroy();\n    };\n    return Buffer_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar ComputePass_WebGPU = /** @class */ (function () {\n    function ComputePass_WebGPU() {\n        this.gpuComputePassEncoder = null;\n    }\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpucomputepassencoder-dispatchworkgroups\n     */\n    ComputePass_WebGPU.prototype.dispatchWorkgroups = function (workgroupCountX, workgroupCountY, workgroupCountZ) {\n        this.gpuComputePassEncoder.dispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ);\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpucomputepassencoder-dispatchworkgroupsindirect\n     */\n    ComputePass_WebGPU.prototype.dispatchWorkgroupsIndirect = function (indirectBuffer, indirectOffset) {\n        this.gpuComputePassEncoder.dispatchWorkgroupsIndirect(indirectBuffer.gpuBuffer, indirectOffset);\n    };\n    ComputePass_WebGPU.prototype.finish = function () {\n        this.gpuComputePassEncoder.end();\n        this.gpuComputePassEncoder = null;\n        this.frameCommandEncoder = null;\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpucommandencoder-begincomputepass\n     */\n    ComputePass_WebGPU.prototype.beginComputePass = function (commandEncoder) {\n        assert(this.gpuComputePassEncoder === null);\n        this.frameCommandEncoder = commandEncoder;\n        this.gpuComputePassEncoder = this.frameCommandEncoder.beginComputePass(this.gpuComputePassDescriptor);\n    };\n    ComputePass_WebGPU.prototype.setPipeline = function (pipeline_) {\n        var pipeline = pipeline_;\n        var gpuComputePipeline = assertExists(pipeline.gpuComputePipeline);\n        this.gpuComputePassEncoder.setPipeline(gpuComputePipeline);\n    };\n    ComputePass_WebGPU.prototype.setBindings = function (bindings_) {\n        var _this = this;\n        var bindings = bindings_;\n        bindings.gpuBindGroup.forEach(function (gpuBindGroup, i) {\n            if (gpuBindGroup) {\n                _this.gpuComputePassEncoder.setBindGroup(i, bindings.gpuBindGroup[i]);\n            }\n        });\n    };\n    ComputePass_WebGPU.prototype.pushDebugGroup = function (name) {\n        this.gpuComputePassEncoder.pushDebugGroup(name);\n    };\n    ComputePass_WebGPU.prototype.popDebugGroup = function () {\n        this.gpuComputePassEncoder.popDebugGroup();\n    };\n    ComputePass_WebGPU.prototype.insertDebugMarker = function (markerLabel) {\n        this.gpuComputePassEncoder.insertDebugMarker(markerLabel);\n    };\n    return ComputePass_WebGPU;\n}());\n\nvar ComputePipeline_WebGPU = /** @class */ (function (_super) {\n    __extends(ComputePipeline_WebGPU, _super);\n    function ComputePipeline_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.ComputePipeline;\n        _this.gpuComputePipeline = null;\n        _this.descriptor = descriptor;\n        var program = descriptor.program;\n        var computeStage = program.computeStage;\n        if (computeStage === null)\n            return _this;\n        var gpuComputePipeline = {\n            layout: 'auto',\n            compute: __assign({}, computeStage),\n        };\n        // @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createrenderpipeline\n        _this.gpuComputePipeline =\n            _this.device.device.createComputePipeline(gpuComputePipeline);\n        if (_this.name !== undefined) {\n            _this.gpuComputePipeline.label = _this.name;\n        }\n        return _this;\n    }\n    ComputePipeline_WebGPU.prototype.getBindGroupLayout = function (index) {\n        return this.gpuComputePipeline.getBindGroupLayout(index);\n    };\n    return ComputePipeline_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar InputLayout_WebGPU = /** @class */ (function (_super) {\n    __extends(InputLayout_WebGPU, _super);\n    function InputLayout_WebGPU(_a) {\n        var e_1, _b, e_2, _c;\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.InputLayout;\n        var buffers = [];\n        try {\n            for (var _d = __values(descriptor.vertexBufferDescriptors), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var vertexBufferDescriptor = _e.value;\n                var arrayStride = vertexBufferDescriptor.arrayStride, stepMode = vertexBufferDescriptor.stepMode, attributes = vertexBufferDescriptor.attributes;\n                buffers.push({\n                    arrayStride: arrayStride,\n                    stepMode: translateVertexStepMode(stepMode),\n                    attributes: [],\n                });\n                try {\n                    for (var attributes_1 = (e_2 = void 0, __values(attributes)), attributes_1_1 = attributes_1.next(); !attributes_1_1.done; attributes_1_1 = attributes_1.next()) {\n                        var attribute = attributes_1_1.value;\n                        // TODO: divisor\n                        var shaderLocation = attribute.shaderLocation, format = attribute.format, offset = attribute.offset;\n                        buffers[buffers.length - 1].attributes.push({\n                            shaderLocation: shaderLocation,\n                            format: translateVertexFormat(format),\n                            offset: offset,\n                        });\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (attributes_1_1 && !attributes_1_1.done && (_c = attributes_1.return)) _c.call(attributes_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this.indexFormat = translateIndexFormat(descriptor.indexBufferFormat);\n        _this.buffers = buffers;\n        return _this;\n    }\n    return InputLayout_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar Program_WebGPU = /** @class */ (function (_super) {\n    __extends(Program_WebGPU, _super);\n    function Program_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Program;\n        _this.vertexStage = null;\n        _this.fragmentStage = null;\n        _this.computeStage = null;\n        _this.descriptor = descriptor;\n        if (descriptor.vertex) {\n            _this.vertexStage = _this.createShaderStage(descriptor.vertex, 'vertex');\n        }\n        if (descriptor.fragment) {\n            _this.fragmentStage = _this.createShaderStage(descriptor.fragment, 'fragment');\n        }\n        if (descriptor.compute) {\n            // Only support WGSL now\n            _this.computeStage = _this.createShaderStage(descriptor.compute, 'compute');\n        }\n        return _this;\n    }\n    // eslint-disable-next-line\n    Program_WebGPU.prototype.setUniformsLegacy = function (uniforms) {\n    };\n    Program_WebGPU.prototype.createShaderStage = function (_a, shaderStage) {\n        var e_1, _b;\n        var glsl = _a.glsl, wgsl = _a.wgsl, entryPoint = _a.entryPoint, postprocess = _a.postprocess;\n        var validationEnabled = false;\n        // Use user-defined WGSL first.\n        var code = wgsl;\n        if (!code) {\n            try {\n                code = this.device['glsl_compile'](glsl, shaderStage, validationEnabled);\n            }\n            catch (e) {\n                console.error(e, glsl);\n                throw new Error('whoops');\n            }\n        }\n        var _loop_1 = function (depthTextureName) {\n            if (!code.includes(depthTextureName))\n                return \"continue\";\n            code = code.replace(\"var T_\".concat(depthTextureName, \": texture_2d<f32>;\"), \"var T_\".concat(depthTextureName, \": texture_depth_2d;\"));\n            code = code.replace(new RegExp(\"textureSample\\\\(T_\".concat(depthTextureName, \"(.*)\\\\);$\"), 'gm'), function (sub, cap) {\n                return \"vec4<f32>(textureSample(T_\".concat(depthTextureName).concat(cap, \"), 0.0, 0.0, 0.0);\");\n            });\n        };\n        try {\n            // Workaround for https://github.com/gfx-rs/naga/issues/1355\n            for (var _c = __values(['u_TextureFramebufferDepth']), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var depthTextureName = _d.value;\n                _loop_1(depthTextureName);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (postprocess) {\n            code = postprocess(code);\n        }\n        // @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createshadermodule\n        var shaderModule = this.device.device.createShaderModule({ code: code });\n        return { module: shaderModule, entryPoint: entryPoint || 'main' };\n    };\n    return Program_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar QueryPool_WebGPU = /** @class */ (function (_super) {\n    __extends(QueryPool_WebGPU, _super);\n    function QueryPool_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.QueryPool;\n        var elemCount = descriptor.elemCount, type = descriptor.type;\n        _this.querySet = _this.device.device.createQuerySet({\n            type: translateQueryPoolType(type),\n            count: elemCount,\n        });\n        _this.resolveBuffer = _this.device.device.createBuffer({\n            size: elemCount * 8,\n            usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC,\n        });\n        _this.cpuBuffer = _this.device.device.createBuffer({\n            size: elemCount * 8,\n            usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n        });\n        _this.results = null;\n        return _this;\n    }\n    QueryPool_WebGPU.prototype.queryResultOcclusion = function (dstOffs) {\n        if (this.results === null)\n            return null;\n        return this.results[dstOffs] !== BigInt(0);\n    };\n    QueryPool_WebGPU.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.querySet.destroy();\n        this.resolveBuffer.destroy();\n        this.cpuBuffer.destroy();\n    };\n    return QueryPool_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar Readback_WebGPU = /** @class */ (function (_super) {\n    __extends(Readback_WebGPU, _super);\n    function Readback_WebGPU(_a) {\n        var id = _a.id, device = _a.device;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Readback;\n        return _this;\n    }\n    Readback_WebGPU.prototype.readTexture = function (t, x, y, width, height, dst, dstOffset, length) {\n        if (dstOffset === void 0) { dstOffset = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var texture, faceIndex, blockInformation, bytesPerRow, bytesPerRowAligned, size, buffer, commandEncoder;\n            return __generator(this, function (_a) {\n                texture = t;\n                faceIndex = 0;\n                blockInformation = getBlockInformationFromFormat(texture.gpuTextureformat);\n                bytesPerRow = Math.ceil(width / blockInformation.width) * blockInformation.length;\n                bytesPerRowAligned = Math.ceil(bytesPerRow / 256) * 256;\n                size = bytesPerRowAligned * height;\n                buffer = this.device.createBuffer({\n                    usage: BufferUsage.STORAGE | BufferUsage.MAP_READ | BufferUsage.COPY_DST,\n                    hint: BufferFrequencyHint.STATIC,\n                    viewOrSize: size,\n                });\n                commandEncoder = this.device.device.createCommandEncoder();\n                // @see https://www.w3.org/TR/webgpu/#dom-gpucommandencoder-copytexturetobuffer\n                commandEncoder.copyTextureToBuffer({\n                    texture: texture.gpuTexture,\n                    mipLevel: 0,\n                    origin: {\n                        x: x,\n                        y: y,\n                        z: Math.max(faceIndex, 0),\n                    },\n                }, {\n                    buffer: buffer.gpuBuffer,\n                    offset: 0,\n                    bytesPerRow: bytesPerRowAligned,\n                }, {\n                    width: width,\n                    height: height,\n                    depthOrArrayLayers: 1,\n                });\n                this.device.device.queue.submit([commandEncoder.finish()]);\n                return [2 /*return*/, this.readBuffer(buffer, 0, dst.byteLength === size ? dst : null, dstOffset, size, texture.format, true, false, bytesPerRow, bytesPerRowAligned, height)];\n            });\n        });\n    };\n    Readback_WebGPU.prototype.readTextureSync = function (t, x, y, width, height, dst, dstOffset, length) {\n        throw new Error('ERROR_MSG_METHOD_NOT_IMPLEMENTED');\n    };\n    Readback_WebGPU.prototype.readBuffer = function (b, srcByteOffset, dstArrayBufferView, dstOffset, _size, type, noDataConversion, destroy, bytesPerRow, bytesPerRowAligned, height) {\n        var _this = this;\n        if (srcByteOffset === void 0) { srcByteOffset = 0; }\n        if (dstArrayBufferView === void 0) { dstArrayBufferView = null; }\n        if (_size === void 0) { _size = 0; }\n        if (type === void 0) { type = Format.U8_RGB; }\n        if (noDataConversion === void 0) { noDataConversion = false; }\n        if (bytesPerRow === void 0) { bytesPerRow = 0; }\n        if (bytesPerRowAligned === void 0) { bytesPerRowAligned = 0; }\n        if (height === void 0) { height = 0; }\n        var buffer = b;\n        var size = _size || buffer.size;\n        var dst = dstArrayBufferView || buffer.view;\n        var floatFormat = \n        // @ts-ignore\n        (dst && dst.constructor && dst.constructor.BYTES_PER_ELEMENT) ||\n            getFormatCompByteSize(type);\n        var gpuReadBuffer = buffer;\n        // can read buffer directly?\n        if (!(buffer.usage & BufferUsage.MAP_READ &&\n            buffer.usage & BufferUsage.COPY_DST)) {\n            var commandEncoder = this.device.device.createCommandEncoder();\n            gpuReadBuffer = this.device.createBuffer({\n                usage: BufferUsage.STORAGE | BufferUsage.MAP_READ | BufferUsage.COPY_DST,\n                hint: BufferFrequencyHint.STATIC,\n                viewOrSize: size,\n            });\n            // Encode commands for copying buffer to buffer.\n            commandEncoder.copyBufferToBuffer(buffer.gpuBuffer /* source buffer */, srcByteOffset /* source offset */, gpuReadBuffer.gpuBuffer /* destination buffer */, 0 /* destination offset */, size /* size */);\n            this.device.device.queue.submit([commandEncoder.finish()]);\n        }\n        return new Promise(function (resolve, reject) {\n            gpuReadBuffer.gpuBuffer\n                .mapAsync(GPUMapMode.READ, srcByteOffset, size)\n                .then(function () {\n                var copyArrayBuffer = gpuReadBuffer.gpuBuffer.getMappedRange(srcByteOffset, size);\n                var data = dst;\n                if (noDataConversion) {\n                    if (data === null) {\n                        data = allocateAndCopyTypedBuffer(type, size, true, copyArrayBuffer);\n                    }\n                    else {\n                        // @ts-ignore\n                        data = allocateAndCopyTypedBuffer(type, data.buffer, undefined, copyArrayBuffer);\n                    }\n                }\n                else {\n                    if (data === null) {\n                        switch (floatFormat) {\n                            case 1: // byte format\n                                data = new Uint8Array(size);\n                                data.set(new Uint8Array(copyArrayBuffer));\n                                break;\n                            case 2: // half float\n                                // TODO WEBGPU use computer shaders (or render pass) to make the conversion?\n                                data = _this.getHalfFloatAsFloatRGBAArrayBuffer(size / 2, copyArrayBuffer);\n                                break;\n                            case 4: // float\n                                data = new Float32Array(size / 4);\n                                data.set(new Float32Array(copyArrayBuffer));\n                                break;\n                        }\n                    }\n                    else {\n                        switch (floatFormat) {\n                            case 1: // byte format\n                                data = new Uint8Array(data.buffer);\n                                data.set(new Uint8Array(copyArrayBuffer));\n                                break;\n                            case 2: // half float\n                                // TODO WEBGPU use computer shaders (or render pass) to make the conversion?\n                                data = _this.getHalfFloatAsFloatRGBAArrayBuffer(size / 2, copyArrayBuffer, dst);\n                                break;\n                            case 4: // float\n                                var ctor = (dst && dst.constructor) || Float32Array;\n                                // @ts-ignore\n                                data = new ctor(data.buffer);\n                                // @ts-ignore\n                                data.set(new ctor(copyArrayBuffer));\n                                break;\n                        }\n                    }\n                }\n                if (bytesPerRow !== bytesPerRowAligned) {\n                    // TODO WEBGPU use computer shaders (or render pass) to build the final buffer data?\n                    if (floatFormat === 1 && !noDataConversion) {\n                        // half float have been converted to float above\n                        bytesPerRow *= 2;\n                        bytesPerRowAligned *= 2;\n                    }\n                    var data2 = new Uint8Array(data.buffer);\n                    var offset = bytesPerRow, offset2 = 0;\n                    for (var y = 1; y < height; ++y) {\n                        offset2 = y * bytesPerRowAligned;\n                        for (var x = 0; x < bytesPerRow; ++x) {\n                            data2[offset++] = data2[offset2++];\n                        }\n                    }\n                    if (floatFormat !== 0 && !noDataConversion) {\n                        data = new Float32Array(data2.buffer, 0, offset / 4);\n                    }\n                    else {\n                        data = new Uint8Array(data2.buffer, 0, offset);\n                    }\n                }\n                gpuReadBuffer.gpuBuffer.unmap();\n                resolve(data);\n            }, function (reason) { return reject(reason); });\n        });\n    };\n    Readback_WebGPU.prototype.getHalfFloatAsFloatRGBAArrayBuffer = function (dataLength, arrayBuffer, destArray) {\n        if (!destArray) {\n            destArray = new Float32Array(dataLength);\n        }\n        var srcData = new Uint16Array(arrayBuffer);\n        while (dataLength--) {\n            destArray[dataLength] = halfFloat2Number(srcData[dataLength]);\n        }\n        return destArray;\n    };\n    return Readback_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar RenderPass_WebGPU = /** @class */ (function () {\n    function RenderPass_WebGPU(device) {\n        this.device = device;\n        this.gpuRenderPassEncoder = null;\n        this.gfxColorAttachment = [];\n        this.gfxColorAttachmentLevel = [];\n        this.gfxColorResolveTo = [];\n        this.gfxColorResolveToLevel = [];\n        this.gfxDepthStencilAttachment = null;\n        this.gfxDepthStencilResolveTo = null;\n        this.gpuColorAttachments = [];\n        this.gpuDepthStencilAttachment = {\n            view: null,\n            depthLoadOp: 'load',\n            depthStoreOp: 'store',\n            stencilLoadOp: 'load',\n            stencilStoreOp: 'store',\n        };\n        this.gpuRenderPassDescriptor = {\n            colorAttachments: this.gpuColorAttachments,\n            depthStencilAttachment: this.gpuDepthStencilAttachment,\n        };\n    }\n    RenderPass_WebGPU.prototype.getEncoder = function () {\n        var _a;\n        return (((_a = this.renderBundle) === null || _a === void 0 ? void 0 : _a['renderBundleEncoder']) || this.gpuRenderPassEncoder);\n    };\n    RenderPass_WebGPU.prototype.getTextureView = function (target, level) {\n        assert(level < target.mipLevelCount);\n        if (target.mipLevelCount === 1)\n            return target.gpuTextureView;\n        else\n            return target.gpuTexture.createView({\n                baseMipLevel: level,\n                mipLevelCount: 1,\n            });\n    };\n    RenderPass_WebGPU.prototype.setRenderPassDescriptor = function (descriptor) {\n        var _a, _b, _c, _d, _e, _f;\n        this.descriptor = descriptor;\n        this.gpuRenderPassDescriptor.colorAttachments = this.gpuColorAttachments;\n        var numColorAttachments = descriptor.colorAttachment.length;\n        this.gfxColorAttachment.length = numColorAttachments;\n        this.gfxColorResolveTo.length = numColorAttachments;\n        for (var i = 0; i < descriptor.colorAttachment.length; i++) {\n            var colorAttachment = descriptor\n                .colorAttachment[i];\n            var colorResolveTo = descriptor\n                .colorResolveTo[i];\n            // Do some dumb juggling...\n            if (colorAttachment === null && colorResolveTo !== null) {\n                colorAttachment = colorResolveTo;\n                colorResolveTo = null;\n            }\n            this.gfxColorAttachment[i] = colorAttachment;\n            this.gfxColorResolveTo[i] = colorResolveTo;\n            this.gfxColorAttachmentLevel[i] =\n                ((_a = descriptor.colorAttachmentLevel) === null || _a === void 0 ? void 0 : _a[i]) || 0;\n            this.gfxColorResolveToLevel[i] = ((_b = descriptor.colorResolveToLevel) === null || _b === void 0 ? void 0 : _b[i]) || 0;\n            if (colorAttachment !== null) {\n                if (this.gpuColorAttachments[i] === undefined) {\n                    this.gpuColorAttachments[i] = {};\n                }\n                var dstAttachment = this.gpuColorAttachments[i];\n                dstAttachment.view = this.getTextureView(colorAttachment, ((_c = this.gfxColorAttachmentLevel) === null || _c === void 0 ? void 0 : _c[i]) || 0);\n                var clearColor = (_e = (_d = descriptor.colorClearColor) === null || _d === void 0 ? void 0 : _d[i]) !== null && _e !== void 0 ? _e : 'load';\n                if (clearColor === 'load') {\n                    dstAttachment.loadOp = 'load';\n                }\n                else {\n                    dstAttachment.loadOp = 'clear';\n                    dstAttachment.clearValue = clearColor;\n                }\n                dstAttachment.storeOp = ((_f = descriptor.colorStore) === null || _f === void 0 ? void 0 : _f[i])\n                    ? 'store'\n                    : 'discard';\n                dstAttachment.resolveTarget = undefined;\n                if (colorResolveTo !== null) {\n                    if (colorAttachment.sampleCount > 1) {\n                        dstAttachment.resolveTarget = this.getTextureView(colorResolveTo, this.gfxColorResolveToLevel[i]);\n                    }\n                    else {\n                        dstAttachment.storeOp = 'store';\n                    }\n                }\n            }\n            else {\n                // https://github.com/gpuweb/gpuweb/issues/1250\n                this.gpuColorAttachments.length = i;\n                this.gfxColorAttachment.length = i;\n                this.gfxColorResolveTo.length = i;\n                break;\n            }\n        }\n        this.gfxDepthStencilAttachment =\n            descriptor.depthStencilAttachment;\n        this.gfxDepthStencilResolveTo =\n            descriptor.depthStencilResolveTo;\n        if (descriptor.depthStencilAttachment) {\n            var dsAttachment = descriptor.depthStencilAttachment;\n            var dstAttachment = this.gpuDepthStencilAttachment;\n            dstAttachment.view = dsAttachment.gpuTextureView;\n            var hasDepth = !!(getFormatFlags(dsAttachment.format) & FormatFlags.Depth);\n            if (hasDepth) {\n                if (descriptor.depthClearValue === 'load') {\n                    dstAttachment.depthLoadOp = 'load';\n                }\n                else {\n                    dstAttachment.depthLoadOp = 'clear';\n                    dstAttachment.depthClearValue = descriptor.depthClearValue;\n                }\n                if (descriptor.depthStencilStore ||\n                    this.gfxDepthStencilResolveTo !== null)\n                    dstAttachment.depthStoreOp = 'store';\n                else\n                    dstAttachment.depthStoreOp = 'discard';\n            }\n            else {\n                dstAttachment.depthLoadOp = undefined;\n                dstAttachment.depthStoreOp = undefined;\n            }\n            var hasStencil = !!(getFormatFlags(dsAttachment.format) & FormatFlags.Stencil);\n            if (hasStencil) {\n                if (descriptor.stencilClearValue === 'load') {\n                    dstAttachment.stencilLoadOp = 'load';\n                }\n                else {\n                    dstAttachment.stencilLoadOp = 'clear';\n                    dstAttachment.stencilClearValue = descriptor.stencilClearValue;\n                }\n                if (descriptor.depthStencilStore ||\n                    this.gfxDepthStencilResolveTo !== null)\n                    dstAttachment.stencilStoreOp = 'store';\n                else\n                    dstAttachment.stencilStoreOp = 'discard';\n            }\n            else {\n                dstAttachment.stencilLoadOp = undefined;\n                dstAttachment.stencilStoreOp = undefined;\n            }\n            this.gpuRenderPassDescriptor.depthStencilAttachment =\n                this.gpuDepthStencilAttachment;\n        }\n        else {\n            this.gpuRenderPassDescriptor.depthStencilAttachment = undefined;\n        }\n        this.gpuRenderPassDescriptor.occlusionQuerySet = !isNil(descriptor.occlusionQueryPool)\n            ? getPlatformQuerySet(descriptor.occlusionQueryPool)\n            : undefined;\n    };\n    RenderPass_WebGPU.prototype.beginRenderPass = function (commandEncoder, renderPassDescriptor) {\n        assert(this.gpuRenderPassEncoder === null);\n        this.setRenderPassDescriptor(renderPassDescriptor);\n        this.frameCommandEncoder = commandEncoder;\n        this.gpuRenderPassEncoder = this.frameCommandEncoder.beginRenderPass(this.gpuRenderPassDescriptor);\n    };\n    RenderPass_WebGPU.prototype.flipY = function (y, h) {\n        var height = this.device['swapChainHeight'];\n        return height - y - h;\n    };\n    RenderPass_WebGPU.prototype.setViewport = function (x, y, w, h, minDepth, maxDepth) {\n        if (minDepth === void 0) { minDepth = 0; }\n        if (maxDepth === void 0) { maxDepth = 1; }\n        this.gpuRenderPassEncoder.setViewport(x, this.flipY(y, h), w, h, minDepth, maxDepth);\n    };\n    RenderPass_WebGPU.prototype.setScissorRect = function (x, y, w, h) {\n        this.gpuRenderPassEncoder.setScissorRect(x, this.flipY(y, h), w, h);\n    };\n    RenderPass_WebGPU.prototype.setPipeline = function (pipeline_) {\n        var pipeline = pipeline_;\n        var gpuRenderPipeline = assertExists(pipeline.gpuRenderPipeline);\n        this.getEncoder().setPipeline(gpuRenderPipeline);\n    };\n    RenderPass_WebGPU.prototype.setVertexInput = function (inputLayout_, vertexBuffers, indexBuffer) {\n        if (inputLayout_ === null)\n            return;\n        var encoder = this.getEncoder();\n        var inputLayout = inputLayout_;\n        if (indexBuffer !== null)\n            encoder.setIndexBuffer(getPlatformBuffer(indexBuffer.buffer), assertExists(inputLayout.indexFormat), indexBuffer.offset);\n        for (var i = 0; i < vertexBuffers.length; i++) {\n            var b = vertexBuffers[i];\n            if (b === null)\n                continue;\n            encoder.setVertexBuffer(i, getPlatformBuffer(b.buffer), b.offset);\n        }\n    };\n    RenderPass_WebGPU.prototype.setBindings = function (bindings_) {\n        var bindings = bindings_;\n        var encoder = this.getEncoder();\n        bindings.gpuBindGroup.forEach(function (gpuBindGroup, i) {\n            if (gpuBindGroup) {\n                encoder.setBindGroup(i, bindings.gpuBindGroup[i]);\n            }\n        });\n    };\n    RenderPass_WebGPU.prototype.setStencilReference = function (ref) {\n        this.gpuRenderPassEncoder.setStencilReference(ref);\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-draw\n     */\n    RenderPass_WebGPU.prototype.draw = function (vertexCount, instanceCount, firstVertex, firstInstance) {\n        this.getEncoder().draw(vertexCount, instanceCount, firstVertex, firstInstance);\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindexed\n     */\n    RenderPass_WebGPU.prototype.drawIndexed = function (indexCount, instanceCount, firstIndex, baseVertex, firstInstance) {\n        this.getEncoder().drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance);\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpurendercommandsmixin-drawindirect\n     */\n    RenderPass_WebGPU.prototype.drawIndirect = function (indirectBuffer, indirectOffset) {\n        this.getEncoder().drawIndirect(getPlatformBuffer(indirectBuffer), indirectOffset);\n    };\n    RenderPass_WebGPU.prototype.drawIndexedIndirect = function (indirectBuffer, indirectOffset) {\n        this.getEncoder().drawIndexedIndirect(getPlatformBuffer(indirectBuffer), indirectOffset);\n    };\n    RenderPass_WebGPU.prototype.beginOcclusionQuery = function (queryIndex) {\n        this.gpuRenderPassEncoder.beginOcclusionQuery(queryIndex);\n    };\n    RenderPass_WebGPU.prototype.endOcclusionQuery = function () {\n        this.gpuRenderPassEncoder.endOcclusionQuery();\n    };\n    RenderPass_WebGPU.prototype.pushDebugGroup = function (name) {\n        this.gpuRenderPassEncoder.pushDebugGroup(name);\n    };\n    RenderPass_WebGPU.prototype.popDebugGroup = function () {\n        this.gpuRenderPassEncoder.popDebugGroup();\n    };\n    RenderPass_WebGPU.prototype.insertDebugMarker = function (markerLabel) {\n        this.gpuRenderPassEncoder.insertDebugMarker(markerLabel);\n    };\n    RenderPass_WebGPU.prototype.beginBundle = function (renderBundle) {\n        this.renderBundle = renderBundle;\n    };\n    RenderPass_WebGPU.prototype.endBundle = function () {\n        this.renderBundle.finish();\n    };\n    RenderPass_WebGPU.prototype.executeBundles = function (renderBundles) {\n        this.gpuRenderPassEncoder.executeBundles(renderBundles.map(function (bundle) { return bundle.renderBundle; }));\n    };\n    RenderPass_WebGPU.prototype.finish = function () {\n        var _a;\n        (_a = this.gpuRenderPassEncoder) === null || _a === void 0 ? void 0 : _a.end();\n        this.gpuRenderPassEncoder = null;\n        // Fake a resolve with a copy for non-MSAA.\n        for (var i = 0; i < this.gfxColorAttachment.length; i++) {\n            var colorAttachment = this.gfxColorAttachment[i];\n            var colorResolveTo = this.gfxColorResolveTo[i];\n            if (colorAttachment !== null &&\n                colorResolveTo !== null &&\n                colorAttachment.sampleCount === 1) {\n                this.copyAttachment(colorResolveTo, this.gfxColorAttachmentLevel[i], colorAttachment, this.gfxColorResolveToLevel[i]);\n            }\n        }\n        if (this.gfxDepthStencilAttachment && this.gfxDepthStencilResolveTo) {\n            if (this.gfxDepthStencilAttachment.sampleCount > 1) ;\n            else {\n                this.copyAttachment(this.gfxDepthStencilResolveTo, 0, this.gfxDepthStencilAttachment, 0);\n            }\n        }\n        this.frameCommandEncoder = null;\n    };\n    RenderPass_WebGPU.prototype.copyAttachment = function (dst, dstLevel, src, srcLevel) {\n        assert(src.sampleCount === 1);\n        var srcCopy = {\n            texture: src.gpuTexture,\n            mipLevel: srcLevel,\n        };\n        var dstCopy = {\n            texture: dst.gpuTexture,\n            mipLevel: dstLevel,\n        };\n        assert(src.width >>> srcLevel === dst.width >>> dstLevel);\n        assert(src.height >>> srcLevel === dst.height >>> dstLevel);\n        assert(!!(src.usage & GPUTextureUsage$1.COPY_SRC));\n        assert(!!(dst.usage & GPUTextureUsage$1.COPY_DST));\n        this.frameCommandEncoder.copyTextureToTexture(srcCopy, dstCopy, [\n            dst.width,\n            dst.height,\n            1,\n        ]);\n    };\n    return RenderPass_WebGPU;\n}());\n\nvar RenderPipeline_WebGPU = /** @class */ (function (_super) {\n    __extends(RenderPipeline_WebGPU, _super);\n    function RenderPipeline_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.RenderPipeline;\n        _this.isCreatingAsync = false;\n        _this.gpuRenderPipeline = null;\n        _this.descriptor = descriptor;\n        _this.device['createRenderPipelineInternal'](_this, false);\n        return _this;\n    }\n    RenderPipeline_WebGPU.prototype.getBindGroupLayout = function (index) {\n        return this.gpuRenderPipeline.getBindGroupLayout(index);\n    };\n    return RenderPipeline_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar Sampler_WebGPU = /** @class */ (function (_super) {\n    __extends(Sampler_WebGPU, _super);\n    function Sampler_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor;\n        var _b, _c;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Sampler;\n        var lodMinClamp = descriptor.lodMinClamp;\n        var lodMaxClamp = descriptor.mipmapFilter === MipmapFilterMode.NO_MIP\n            ? descriptor.lodMinClamp\n            : descriptor.lodMaxClamp;\n        var maxAnisotropy = (_b = descriptor.maxAnisotropy) !== null && _b !== void 0 ? _b : 1;\n        if (maxAnisotropy > 1)\n            assert(descriptor.minFilter === FilterMode.BILINEAR &&\n                descriptor.magFilter === FilterMode.BILINEAR &&\n                descriptor.mipmapFilter === MipmapFilterMode.LINEAR);\n        _this.gpuSampler = _this.device.device.createSampler({\n            addressModeU: translateAddressMode(descriptor.addressModeU),\n            addressModeV: translateAddressMode(descriptor.addressModeV),\n            addressModeW: translateAddressMode((_c = descriptor.addressModeW) !== null && _c !== void 0 ? _c : descriptor.addressModeU),\n            lodMinClamp: lodMinClamp,\n            lodMaxClamp: lodMaxClamp,\n            minFilter: translateMinMagFilter(descriptor.minFilter),\n            magFilter: translateMinMagFilter(descriptor.magFilter),\n            mipmapFilter: translateMipFilter(descriptor.mipmapFilter),\n            compare: descriptor.compareFunction !== undefined\n                ? translateCompareFunction(descriptor.compareFunction)\n                : undefined,\n            maxAnisotropy: maxAnisotropy,\n        });\n        return _this;\n    }\n    return Sampler_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar Texture_WebGPU = /** @class */ (function (_super) {\n    __extends(Texture_WebGPU, _super);\n    function Texture_WebGPU(_a) {\n        var id = _a.id, device = _a.device, descriptor = _a.descriptor, skipCreate = _a.skipCreate, sampleCount = _a.sampleCount;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.Texture;\n        _this.flipY = false;\n        var format = descriptor.format, dimension = descriptor.dimension, width = descriptor.width, height = descriptor.height, depthOrArrayLayers = descriptor.depthOrArrayLayers, mipLevelCount = descriptor.mipLevelCount, usage = descriptor.usage, pixelStore = descriptor.pixelStore;\n        _this.flipY = !!(pixelStore === null || pixelStore === void 0 ? void 0 : pixelStore.unpackFlipY);\n        _this.device.createTextureShared({\n            format: format,\n            dimension: dimension !== null && dimension !== void 0 ? dimension : TextureDimension.TEXTURE_2D,\n            width: width,\n            height: height,\n            depthOrArrayLayers: depthOrArrayLayers !== null && depthOrArrayLayers !== void 0 ? depthOrArrayLayers : 1,\n            mipLevelCount: mipLevelCount !== null && mipLevelCount !== void 0 ? mipLevelCount : 1,\n            usage: usage,\n            sampleCount: sampleCount !== null && sampleCount !== void 0 ? sampleCount : 1,\n        }, _this, skipCreate);\n        return _this;\n    }\n    Texture_WebGPU.prototype.textureFromImageBitmapOrCanvas = function (device, sources, depthOrArrayLayers) {\n        var width = sources[0].width;\n        var height = sources[0].height;\n        var textureDescriptor = {\n            // Unlike in WebGL, the size of our texture must be set at texture creation time.\n            // This means we have to wait until the image is loaded to create the texture, since we won't\n            // know the size until then.\n            size: { width: width, height: height, depthOrArrayLayers: depthOrArrayLayers },\n            format: 'rgba8unorm',\n            usage: GPUTextureUsage.TEXTURE_BINDING |\n                GPUTextureUsage.COPY_DST |\n                GPUTextureUsage.RENDER_ATTACHMENT,\n        };\n        var texture = device.createTexture(textureDescriptor);\n        for (var i = 0; i < sources.length; i++) {\n            device.queue.copyExternalImageToTexture({ source: sources[i], flipY: this.flipY }, { texture: texture, origin: [0, 0, i] }, [width, height]);\n        }\n        return [texture, width, height];\n    };\n    Texture_WebGPU.prototype.isImageBitmapOrCanvases = function (datas) {\n        var data = datas[0];\n        return (data instanceof ImageBitmap ||\n            data instanceof HTMLCanvasElement ||\n            data instanceof OffscreenCanvas);\n    };\n    Texture_WebGPU.prototype.isVideo = function (datas) {\n        var data = datas[0];\n        return data instanceof HTMLVideoElement;\n    };\n    /**\n     * @see https://toji.dev/webgpu-best-practices/img-textures\n     */\n    Texture_WebGPU.prototype.setImageData = function (datas, lod) {\n        var _a;\n        var _this = this;\n        var device = this.device.device;\n        var texture;\n        var width;\n        var height;\n        if (this.isImageBitmapOrCanvases(datas)) {\n            _a = __read(this.textureFromImageBitmapOrCanvas(device, datas, this.depthOrArrayLayers), 3), texture = _a[0], width = _a[1], height = _a[2];\n        }\n        else if (this.isVideo(datas)) {\n            // @see https://toji.dev/webgpu-best-practices/img-textures#creating-a-texture-from-an-htmlvideoelement-video-tag\n            texture = device.importExternalTexture({\n                source: datas[0],\n            });\n        }\n        else {\n            var blockInformation = getBlockInformationFromFormat(this.gpuTextureformat);\n            var bytesPerRow_1 = Math.ceil(this.width / blockInformation.width) *\n                blockInformation.length;\n            // TODO: support ArrayBufferView[]\n            datas.forEach(function (data) {\n                device.queue.writeTexture({ texture: _this.gpuTexture }, data, {\n                    bytesPerRow: bytesPerRow_1,\n                }, {\n                    width: _this.width,\n                    height: _this.height,\n                });\n            });\n        }\n        this.width = width;\n        this.height = height;\n        if (texture) {\n            this.gpuTexture = texture;\n        }\n        this.gpuTextureView = this.gpuTexture.createView({\n            dimension: translateTextureViewDimension(this.dimension),\n        });\n    };\n    Texture_WebGPU.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        // @see https://www.w3.org/TR/webgpu/#dom-gputexture-destroy\n        this.gpuTexture.destroy();\n    };\n    return Texture_WebGPU;\n}(ResourceBase_WebGPU));\n\n/**\n * It works by recording the draw calls during one frame and by replaying this recording for all subsequent frames.\n * So, the scene should be mostly static for this mode to work as expected.\n * @see https://doc.babylonjs.com/setup/support/webGPU/webGPUOptimization/webGPUSnapshotRendering\n */\nvar RenderBundle_WebGPU = /** @class */ (function (_super) {\n    __extends(RenderBundle_WebGPU, _super);\n    function RenderBundle_WebGPU(_a) {\n        var id = _a.id, device = _a.device;\n        var _this = _super.call(this, { id: id, device: device }) || this;\n        _this.type = ResourceType.RenderBundle;\n        _this.renderBundleEncoder = _this.device.device.createRenderBundleEncoder({\n            colorFormats: [_this.device['swapChainFormat']],\n        });\n        return _this;\n    }\n    RenderBundle_WebGPU.prototype.finish = function () {\n        this.renderBundle = this.renderBundleEncoder.finish();\n    };\n    return RenderBundle_WebGPU;\n}(ResourceBase_WebGPU));\n\nvar Device_WebGPU = /** @class */ (function () {\n    function Device_WebGPU(adapter, device, canvas, canvasContext, glsl_compile, wGSLComposer) {\n        this.swapChainWidth = 0;\n        this.swapChainHeight = 0;\n        this.swapChainTextureUsage = GPUTextureUsage$1.RENDER_ATTACHMENT | GPUTextureUsage$1.COPY_DST;\n        this._resourceUniqueId = 0;\n        this.renderPassPool = [];\n        this.computePassPool = [];\n        this.frameCommandEncoderPool = [];\n        this.featureTextureCompressionBC = false;\n        // VendorInfo\n        this.platformString = 'WebGPU';\n        this.glslVersion = \"#version 440\";\n        this.explicitBindingLocations = true;\n        this.separateSamplerTextures = true;\n        this.viewportOrigin = ViewportOrigin.UPPER_LEFT;\n        this.clipSpaceNearZ = ClipSpaceNearZ.ZERO;\n        this.supportsSyncPipelineCompilation = false;\n        this.supportMRT = true;\n        this.device = device;\n        this.canvas = canvas;\n        this.canvasContext = canvasContext;\n        this.glsl_compile = glsl_compile;\n        this.WGSLComposer = wGSLComposer;\n        this.fallbackTexture2D = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Float);\n        this.setResourceName(this.fallbackTexture2D, 'Fallback Texture2D');\n        this.fallbackTexture2DDepth = this.createFallbackTexture(TextureDimension.TEXTURE_2D, SamplerFormatKind.Depth);\n        this.setResourceName(this.fallbackTexture2DDepth, 'Fallback Depth Texture2D');\n        this.fallbackTexture2DArray = this.createFallbackTexture(TextureDimension.TEXTURE_2D_ARRAY, SamplerFormatKind.Float);\n        this.setResourceName(this.fallbackTexture2DArray, 'Fallback Texture2DArray');\n        this.fallbackTexture3D = this.createFallbackTexture(TextureDimension.TEXTURE_3D, SamplerFormatKind.Float);\n        this.setResourceName(this.fallbackTexture3D, 'Fallback Texture3D');\n        this.fallbackTextureCube = this.createFallbackTexture(TextureDimension.TEXTURE_CUBE_MAP, SamplerFormatKind.Float);\n        this.setResourceName(this.fallbackTextureCube, 'Fallback TextureCube');\n        this.fallbackSamplerFiltering = this.createSampler({\n            addressModeU: AddressMode.REPEAT,\n            addressModeV: AddressMode.REPEAT,\n            minFilter: FilterMode.POINT,\n            magFilter: FilterMode.POINT,\n            mipmapFilter: MipmapFilterMode.NEAREST,\n        });\n        this.setResourceName(this.fallbackSamplerFiltering, 'Fallback Sampler Filtering');\n        this.fallbackSamplerComparison = this.createSampler({\n            addressModeU: AddressMode.REPEAT,\n            addressModeV: AddressMode.REPEAT,\n            minFilter: FilterMode.POINT,\n            magFilter: FilterMode.POINT,\n            mipmapFilter: MipmapFilterMode.NEAREST,\n            compareFunction: CompareFunction.ALWAYS,\n        });\n        this.setResourceName(this.fallbackSamplerComparison, 'Fallback Sampler Comparison Filtering');\n        // Firefox doesn't support GPUDevice.features yet...\n        if (this.device.features) {\n            this.featureTextureCompressionBC = this.device.features.has('texture-compression-bc');\n        }\n        this.device.onuncapturederror = function (event) {\n            console.error(event.error);\n        };\n        this.swapChainFormat = navigator.gpu.getPreferredCanvasFormat();\n        // @see https://www.w3.org/TR/webgpu/#canvas-configuration\n        this.canvasContext.configure({\n            device: this.device,\n            format: this.swapChainFormat,\n            usage: this.swapChainTextureUsage,\n            // @see https://www.w3.org/TR/webgpu/#gpucanvasalphamode\n            // alphaMode: 'opaque',\n            alphaMode: 'premultiplied',\n        });\n    }\n    Device_WebGPU.prototype.destroy = function () { };\n    // SwapChain\n    Device_WebGPU.prototype.configureSwapChain = function (width, height) {\n        if (this.swapChainWidth === width && this.swapChainHeight === height)\n            return;\n        this.swapChainWidth = width;\n        this.swapChainHeight = height;\n    };\n    Device_WebGPU.prototype.getOnscreenTexture = function () {\n        // @see https://www.w3.org/TR/webgpu/#dom-gpucanvascontext-getcurrenttexture\n        var gpuTexture = this.canvasContext.getCurrentTexture();\n        var gpuTextureView = gpuTexture.createView();\n        var texture = new Texture_WebGPU({\n            id: 0,\n            device: this,\n            descriptor: {\n                format: Format.U8_RGBA_RT,\n                width: this.swapChainWidth,\n                height: this.swapChainHeight,\n                depthOrArrayLayers: 0,\n                dimension: TextureDimension.TEXTURE_2D,\n                mipLevelCount: 1,\n                usage: this.swapChainTextureUsage,\n            },\n            skipCreate: true,\n        });\n        texture.depthOrArrayLayers = 1;\n        texture.sampleCount = 1;\n        texture.gpuTexture = gpuTexture;\n        texture.gpuTextureView = gpuTextureView;\n        texture.name = 'Onscreen';\n        this.setResourceName(texture, 'Onscreen Texture');\n        return texture;\n    };\n    Device_WebGPU.prototype.getDevice = function () {\n        return this;\n    };\n    Device_WebGPU.prototype.getCanvas = function () {\n        return this.canvas;\n    };\n    Device_WebGPU.prototype.beginFrame = function () {\n        assert(this.frameCommandEncoderPool.length === 0);\n    };\n    Device_WebGPU.prototype.endFrame = function () {\n        assert(this.frameCommandEncoderPool.every(function (frameCommandEncoder) { return frameCommandEncoder !== null; }));\n        this.device.queue.submit(this.frameCommandEncoderPool.map(function (frameCommandEncoder) {\n            return frameCommandEncoder.finish();\n        }));\n        this.frameCommandEncoderPool = [];\n        // for (let i = 0; i < this.queryPoolsSubmitted.length; i++) {\n        //   const queryPool = this.queryPoolsSubmitted[i];\n        //   queryPool.cpuBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        //     queryPool.results = new BigUint64Array(\n        //       queryPool.cpuBuffer.getMappedRange(),\n        //     );\n        //   });\n        // }\n        // this.queryPoolsSubmitted.length = 0;\n    };\n    Device_WebGPU.prototype.getNextUniqueId = function () {\n        return ++this._resourceUniqueId;\n    };\n    Device_WebGPU.prototype.createBuffer = function (descriptor) {\n        return new Buffer_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createTexture = function (descriptor) {\n        return new Texture_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    /**\n     * @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createsampler\n     * @see https://www.w3.org/TR/webgpu/#GPUSamplerDescriptor\n     */\n    Device_WebGPU.prototype.createSampler = function (descriptor) {\n        return new Sampler_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createRenderTarget = function (descriptor) {\n        var texture = new Texture_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: __assign(__assign({}, descriptor), { dimension: TextureDimension.TEXTURE_2D, mipLevelCount: 1, depthOrArrayLayers: 1, usage: TextureUsage.RENDER_TARGET }),\n            sampleCount: descriptor.sampleCount,\n        });\n        texture.depthOrArrayLayers = 1;\n        // @ts-ignore\n        texture.type = ResourceType.RenderTarget;\n        return texture;\n    };\n    Device_WebGPU.prototype.createRenderTargetFromTexture = function (texture) {\n        var _a = texture, format = _a.format, width = _a.width, height = _a.height, depthOrArrayLayers = _a.depthOrArrayLayers, sampleCount = _a.sampleCount, mipLevelCount = _a.mipLevelCount, gpuTexture = _a.gpuTexture, gpuTextureView = _a.gpuTextureView, usage = _a.usage;\n        assert(!!(usage & GPUTextureUsage$1.RENDER_ATTACHMENT));\n        var attachment = new Texture_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: {\n                format: format,\n                width: width,\n                height: height,\n                depthOrArrayLayers: depthOrArrayLayers,\n                dimension: TextureDimension.TEXTURE_2D,\n                mipLevelCount: mipLevelCount,\n                usage: usage,\n            },\n            skipCreate: true,\n        });\n        attachment.depthOrArrayLayers = depthOrArrayLayers;\n        attachment.sampleCount = sampleCount;\n        attachment.gpuTexture = gpuTexture;\n        attachment.gpuTextureView = gpuTextureView;\n        return attachment;\n    };\n    Device_WebGPU.prototype.createProgram = function (descriptor) {\n        var _a, _b;\n        // preprocess GLSL first\n        if ((_a = descriptor.vertex) === null || _a === void 0 ? void 0 : _a.glsl) {\n            descriptor.vertex.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'vert', descriptor.vertex.glsl);\n        }\n        if ((_b = descriptor.fragment) === null || _b === void 0 ? void 0 : _b.glsl) {\n            descriptor.fragment.glsl = preprocessShader_GLSL(this.queryVendorInfo(), 'frag', descriptor.fragment.glsl);\n        }\n        return new Program_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createProgramSimple = function (descriptor) {\n        return new Program_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createTextureShared = function (descriptor, texture, skipCreate) {\n        var size = {\n            width: descriptor.width,\n            height: descriptor.height,\n            depthOrArrayLayers: descriptor.depthOrArrayLayers,\n        };\n        var mipLevelCount = descriptor.mipLevelCount;\n        var format = translateTextureFormat(descriptor.format);\n        var dimension = translateTextureDimension(descriptor.dimension);\n        var usage = translateTextureUsage(descriptor.usage);\n        texture.gpuTextureformat = format;\n        texture.dimension = descriptor.dimension;\n        texture.format = descriptor.format;\n        texture.width = descriptor.width;\n        texture.height = descriptor.height;\n        texture.depthOrArrayLayers = descriptor.depthOrArrayLayers;\n        texture.mipLevelCount = mipLevelCount;\n        texture.usage = usage;\n        texture.sampleCount = descriptor.sampleCount;\n        if (!skipCreate) {\n            var gpuTexture = this.device.createTexture({\n                size: size,\n                mipLevelCount: mipLevelCount,\n                format: format,\n                dimension: dimension,\n                sampleCount: descriptor.sampleCount,\n                usage: usage,\n            });\n            var gpuTextureView = gpuTexture.createView();\n            texture.gpuTexture = gpuTexture;\n            texture.gpuTextureView = gpuTextureView;\n        }\n    };\n    Device_WebGPU.prototype.getFallbackSampler = function (samplerEntry) {\n        var formatKind = samplerEntry.formatKind;\n        if (formatKind === SamplerFormatKind.Depth && samplerEntry.comparison) {\n            return this.fallbackSamplerComparison;\n        }\n        else {\n            return this.fallbackSamplerFiltering;\n        }\n    };\n    Device_WebGPU.prototype.getFallbackTexture = function (samplerEntry) {\n        var dimension = samplerEntry.dimension, formatKind = samplerEntry.formatKind;\n        if (dimension === TextureDimension.TEXTURE_2D)\n            return formatKind === SamplerFormatKind.Depth\n                ? this.fallbackTexture2DDepth\n                : this.fallbackTexture2D;\n        else if (dimension === TextureDimension.TEXTURE_2D_ARRAY)\n            return this.fallbackTexture2DArray;\n        else if (dimension === TextureDimension.TEXTURE_3D)\n            return this.fallbackTexture3D;\n        else if (dimension === TextureDimension.TEXTURE_CUBE_MAP)\n            return this.fallbackTextureCube;\n        else\n            throw new Error('whoops');\n    };\n    Device_WebGPU.prototype.createFallbackTexture = function (dimension, formatKind) {\n        var depthOrArrayLayers = dimension === TextureDimension.TEXTURE_CUBE_MAP ? 6 : 1;\n        var format = formatKind === SamplerFormatKind.Float ? Format.U8_RGBA_NORM : Format.D24;\n        return this.createTexture({\n            dimension: dimension,\n            format: format,\n            usage: TextureUsage.SAMPLED,\n            width: 1,\n            height: 1,\n            depthOrArrayLayers: depthOrArrayLayers,\n            mipLevelCount: 1,\n        });\n    };\n    Device_WebGPU.prototype.createBindings = function (descriptor) {\n        return new Bindings_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createInputLayout = function (descriptor) {\n        return new InputLayout_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createComputePipeline = function (descriptor) {\n        return new ComputePipeline_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: descriptor,\n        });\n    };\n    Device_WebGPU.prototype.createRenderPipeline = function (descriptor) {\n        return new RenderPipeline_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: __assign({}, descriptor),\n        });\n    };\n    Device_WebGPU.prototype.createQueryPool = function (type, elemCount) {\n        return new QueryPool_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n            descriptor: {\n                type: type,\n                elemCount: elemCount,\n            },\n        });\n    };\n    Device_WebGPU.prototype.createRenderPipelineInternal = function (renderPipeline, async) {\n        // if (this.device.createRenderPipelineAsync === undefined) {\n        //   async = false;\n        // }\n        var _a;\n        // // If we're already in the process of creating a the pipeline async, no need to kick the process off again...\n        // if (async && renderPipeline.isCreatingAsync) {\n        //   return;\n        // }\n        if (renderPipeline.gpuRenderPipeline !== null) {\n            return;\n        }\n        var descriptor = renderPipeline.descriptor;\n        var program = descriptor.program;\n        var vertexStage = program.vertexStage, fragmentStage = program.fragmentStage;\n        if (vertexStage === null || fragmentStage === null)\n            return;\n        var _b = descriptor.megaStateDescriptor || {}, stencilBack = _b.stencilBack, stencilFront = _b.stencilFront, rest = __rest(_b, [\"stencilBack\", \"stencilFront\"]);\n        var copied = copyMegaState(defaultMegaState);\n        descriptor.megaStateDescriptor = __assign(__assign(__assign({}, copied), { stencilBack: __assign(__assign({}, copied.stencilBack), stencilBack), stencilFront: __assign(__assign({}, copied.stencilFront), stencilFront) }), rest);\n        var defaultAttachmentState = descriptor.megaStateDescriptor.attachmentsState[0];\n        descriptor.colorAttachmentFormats.forEach(function (format, i) {\n            if (!descriptor.megaStateDescriptor.attachmentsState[i]) {\n                descriptor.megaStateDescriptor.attachmentsState[i] =\n                    copyAttachmentState(undefined, defaultAttachmentState);\n            }\n        });\n        var primitive = translatePrimitiveState((_a = descriptor.topology) !== null && _a !== void 0 ? _a : PrimitiveTopology.TRIANGLES, descriptor.megaStateDescriptor);\n        var targets = translateTargets(descriptor.colorAttachmentFormats, descriptor.megaStateDescriptor);\n        var depthStencil = translateDepthStencilState(descriptor.depthStencilAttachmentFormat, descriptor.megaStateDescriptor);\n        var buffers = undefined;\n        if (descriptor.inputLayout !== null)\n            buffers = descriptor.inputLayout.buffers;\n        var sampleCount = descriptor.sampleCount;\n        // renderPipeline.isCreatingAsync = true;\n        var gpuRenderPipelineDescriptor = {\n            // layout,\n            layout: 'auto',\n            vertex: __assign(__assign({}, vertexStage), { buffers: buffers }),\n            primitive: primitive,\n            depthStencil: depthStencil,\n            multisample: {\n                count: sampleCount,\n            },\n            fragment: __assign(__assign({}, fragmentStage), { targets: targets }),\n        };\n        // TODO: async creation\n        // @see https://www.w3.org/TR/webgpu/#dom-gpudevice-createrenderpipeline\n        // renderPipeline.gpuRenderPipeline =\n        //   this.device.createRenderPipeline(gpuRenderPipeline);\n        // if (renderPipeline.name !== undefined)\n        //   renderPipeline.gpuRenderPipeline.label = renderPipeline.name;\n        // if (async) {\n        //   const gpuRenderPipeline = await this.device.createRenderPipelineAsync(\n        //     gpuRenderPipelineDescriptor,\n        //   );\n        //   // We might have created a sync pipeline while we were async building; no way to cancel the async\n        //   // pipeline build at this point, so just chuck it out :/\n        //   if (renderPipeline.gpuRenderPipeline === null)\n        //     renderPipeline.gpuRenderPipeline = gpuRenderPipeline;\n        // } else {\n        renderPipeline.gpuRenderPipeline = this.device.createRenderPipeline(gpuRenderPipelineDescriptor);\n        // }\n        // // if (renderPipeline.ResourceName !== undefined)\n        // //     renderPipeline.gpuRenderPipeline.label = renderPipeline.ResourceName;\n        // renderPipeline.isCreatingAsync = false;\n    };\n    Device_WebGPU.prototype.createReadback = function () {\n        return new Readback_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n        });\n    };\n    Device_WebGPU.prototype.createRenderBundle = function () {\n        return new RenderBundle_WebGPU({\n            id: this.getNextUniqueId(),\n            device: this,\n        });\n    };\n    Device_WebGPU.prototype.createRenderPass = function (renderPassDescriptor) {\n        var pass = this.renderPassPool.pop();\n        if (pass === undefined) {\n            pass = new RenderPass_WebGPU(this);\n        }\n        var frameCommandEncoder = this.frameCommandEncoderPool.pop();\n        if (frameCommandEncoder === undefined) {\n            frameCommandEncoder = this.device.createCommandEncoder();\n        }\n        pass.beginRenderPass(frameCommandEncoder, renderPassDescriptor);\n        return pass;\n    };\n    Device_WebGPU.prototype.createComputePass = function () {\n        var pass = this.computePassPool.pop();\n        if (pass === undefined)\n            pass = new ComputePass_WebGPU();\n        var frameCommandEncoder = this.frameCommandEncoderPool.pop();\n        if (frameCommandEncoder === undefined) {\n            frameCommandEncoder = this.device.createCommandEncoder();\n        }\n        pass.beginComputePass(frameCommandEncoder);\n        return pass;\n    };\n    Device_WebGPU.prototype.submitPass = function (_pass) {\n        var pass = _pass;\n        if (pass instanceof RenderPass_WebGPU) {\n            // release encoder\n            this.frameCommandEncoderPool.push(pass.frameCommandEncoder);\n            pass.finish();\n            this.renderPassPool.push(pass);\n            // if (pass.occlusionQueryPool !== null) {\n            //   this.queryPoolsSubmitted.push(pass.occlusionQueryPool);\n            // }\n        }\n        else if (pass instanceof ComputePass_WebGPU) {\n            this.frameCommandEncoderPool.push(pass.frameCommandEncoder);\n            pass.finish();\n            this.computePassPool.push(pass);\n        }\n    };\n    Device_WebGPU.prototype.copySubTexture2D = function (dst_, dstX, dstY, src_, srcX, srcY, depthOrArrayLayers) {\n        var cmd = this.device.createCommandEncoder();\n        var dst = dst_;\n        var src = src_;\n        var srcCopy = {\n            texture: src.gpuTexture,\n            origin: [srcX, srcY, 0],\n            mipLevel: 0,\n            aspect: 'all',\n        };\n        var dstCopy = {\n            texture: dst.gpuTexture,\n            origin: [dstX, dstY, 0],\n            mipLevel: 0,\n            aspect: 'all',\n        };\n        assert(!!(src.usage & GPUTextureUsage$1.COPY_SRC));\n        assert(!!(dst.usage & GPUTextureUsage$1.COPY_DST));\n        cmd.copyTextureToTexture(srcCopy, dstCopy, [\n            src.width,\n            src.height,\n            depthOrArrayLayers || 1,\n        ]);\n        this.device.queue.submit([cmd.finish()]);\n    };\n    Device_WebGPU.prototype.queryLimits = function () {\n        // GPUAdapter.limits\n        // @see https://www.w3.org/TR/webgpu/#gpu-supportedlimits\n        return {\n            uniformBufferMaxPageWordSize: this.device.limits.maxUniformBufferBindingSize >>> 2,\n            uniformBufferWordAlignment: this.device.limits.minUniformBufferOffsetAlignment >>> 2,\n            supportedSampleCounts: [1],\n            occlusionQueriesRecommended: true,\n            computeShadersSupported: true,\n        };\n    };\n    Device_WebGPU.prototype.queryTextureFormatSupported = function (format, width, height) {\n        if (isFormatTextureCompressionBC(format)) {\n            if (!this.featureTextureCompressionBC)\n                return false;\n            var bb = getFormatBlockSize(format);\n            if (width % bb !== 0 || height % bb !== 0)\n                return false;\n            return this.featureTextureCompressionBC;\n        }\n        switch (format) {\n            case Format.U16_RGBA_NORM:\n                return false;\n            case Format.F32_RGBA:\n                return false; // unfilterable\n        }\n        return true;\n    };\n    Device_WebGPU.prototype.queryPlatformAvailable = function () {\n        // TODO: should listen to lost event\n        return true;\n    };\n    Device_WebGPU.prototype.queryVendorInfo = function () {\n        return this;\n    };\n    Device_WebGPU.prototype.queryRenderPass = function (o) {\n        var pass = o;\n        return pass.descriptor;\n    };\n    Device_WebGPU.prototype.queryRenderTarget = function (o) {\n        var attachment = o;\n        return attachment;\n    };\n    Device_WebGPU.prototype.setResourceName = function (o, s) {\n        o.name = s;\n        if (o.type === ResourceType.Buffer) {\n            var r = o;\n            r.gpuBuffer.label = s;\n        }\n        else if (o.type === ResourceType.Texture) {\n            var r = o;\n            r.gpuTexture.label = s;\n            r.gpuTextureView.label = s;\n        }\n        else if (o.type === ResourceType.RenderTarget) {\n            var r = o;\n            r.gpuTexture.label = s;\n            r.gpuTextureView.label = s;\n        }\n        else if (o.type === ResourceType.Sampler) {\n            var r = o;\n            r.gpuSampler.label = s;\n        }\n        else if (o.type === ResourceType.RenderPipeline) {\n            var r = o;\n            if (r.gpuRenderPipeline !== null)\n                r.gpuRenderPipeline.label = s;\n        }\n    };\n    Device_WebGPU.prototype.setResourceLeakCheck = function (o, v) { };\n    Device_WebGPU.prototype.checkForLeaks = function () { };\n    Device_WebGPU.prototype.programPatched = function (o) { };\n    Device_WebGPU.prototype.pipelineQueryReady = function (o) {\n        var renderPipeline = o;\n        return renderPipeline.gpuRenderPipeline !== null;\n    };\n    Device_WebGPU.prototype.pipelineForceReady = function (o) {\n        var renderPipeline = o;\n        this.createRenderPipelineInternal(renderPipeline, false);\n    };\n    return Device_WebGPU;\n}());\n\nvar WebGPUDeviceContribution = /** @class */ (function () {\n    function WebGPUDeviceContribution(pluginOptions) {\n        this.pluginOptions = pluginOptions;\n    }\n    WebGPUDeviceContribution.prototype.createSwapChain = function ($canvas) {\n        return __awaiter(this, void 0, void 0, function () {\n            var adapter, xrCompatible, e_1, optionalFeatures, requiredFeatures, device, onContextLost_1, context;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // eslint-disable-next-line\n                        if (globalThis.navigator.gpu === undefined)\n                            return [2 /*return*/, null];\n                        adapter = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        xrCompatible = this.pluginOptions.xrCompatible;\n                        return [4 /*yield*/, globalThis.navigator.gpu.requestAdapter({\n                                xrCompatible: xrCompatible,\n                            })];\n                    case 2:\n                        // eslint-disable-next-line\n                        adapter = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        console.log(e_1);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (adapter === null)\n                            return [2 /*return*/, null];\n                        optionalFeatures = [\n                            // 'depth24unorm-stencil8',\n                            'depth32float-stencil8',\n                            'texture-compression-bc',\n                            'float32-filterable',\n                        ];\n                        requiredFeatures = optionalFeatures.filter(function (feature) {\n                            return adapter.features.has(feature);\n                        });\n                        return [4 /*yield*/, adapter.requestDevice({ requiredFeatures: requiredFeatures })];\n                    case 5:\n                        device = _a.sent();\n                        if (device) {\n                            onContextLost_1 = this.pluginOptions.onContextLost;\n                            device.lost.then(function () {\n                                if (onContextLost_1) {\n                                    onContextLost_1();\n                                }\n                            });\n                        }\n                        if (device === null)\n                            return [2 /*return*/, null];\n                        context = $canvas.getContext('webgpu');\n                        if (!context)\n                            return [2 /*return*/, null];\n                        _a.label = 6;\n                    case 6:\n                        _a.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, __wbg_init(this.pluginOptions.shaderCompilerPath)];\n                    case 7:\n                        _a.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        _a.sent();\n                        return [3 /*break*/, 9];\n                    case 9: return [2 /*return*/, new Device_WebGPU(adapter, device, $canvas, context, glsl_compile, WGSLComposer && new WGSLComposer())];\n                }\n            });\n        });\n    };\n    return WebGPUDeviceContribution;\n}());\n\nexport { AddressMode, BlendFactor, BlendMode, BufferFrequencyHint, BufferUsage, ChannelWriteMask, ClipSpaceNearZ, CompareFunction, CullMode, FilterMode, Format, FormatCompFlags, FormatFlags, FormatTypeFlags, FrontFace, GL, IsDepthReversed, MipmapFilterMode, OpaqueBlack, OpaqueWhite, PrimitiveTopology, QueryPoolType, ResourceType, SamplerFormatKind, StencilOp, TextureDimension, TextureEvent, TextureUsage, TransparentBlack, TransparentWhite, UNIFORM_SETTERS, VertexStepMode, ViewportOrigin, WebGLDeviceContribution, WebGPUDeviceContribution, align, alignNonPowerOfTwo, arrayCopy, arrayEqual, assert, assertExists, bindingsDescriptorCopy, bindingsDescriptorEquals, bisectRight, bufferBindingCopy, colorCopy, colorEqual, colorNewCopy, colorNewFromRGBA, compareDepthValues, copyAttachmentState, copyAttachmentStateFromSimple, copyMegaState, copyStencilFaceState, defaultBindingLayoutSamplerDescriptor, defaultMegaState, fallbackUndefined, fillArray, fullscreenMegaState, getAttributeLocations, getDefines, getFormatByteSize, getFormatCompByteSize, getFormatCompFlags, getFormatCompFlagsComponentCount, getFormatComponentCount, getFormatFlags, getFormatSamplerKind, getFormatTypeFlags, getFormatTypeFlagsByteSize, getUniformSetter, getUniforms, inputLayoutBufferDescriptorCopy, inputLayoutBufferDescriptorEquals, inputLayoutDescriptorCopy, inputLayoutDescriptorEquals, isPowerOfTwo, isTypedArray, leftPad, makeFormat, makeMegaState, makeTextureDescriptor2D, nArray, nullify, parseUniformName, prependLineNo, preprocessProgram_GLSL, preprocessShader_GLSL, range, renderPipelineDescriptorCopy, renderPipelineDescriptorEquals, reverseDepthForClearValue, reverseDepthForCompareFunction, reverseDepthForDepthOffset, reverseDepthForOrthographicProjectionMatrix, reverseDepthForPerspectiveProjectionMatrix, samplerBindingCopy, samplerDescriptorEquals, setAttachmentStateSimple, setBitFlagEnabled, setFormatComponentCount, setFormatFlags, setMegaStateFlags, spliceBisectRight, stencilFaceStateEquals, textureBindingCopy, vertexAttributeDescriptorCopy, vertexAttributeDescriptorEquals };\n//# sourceMappingURL=index.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","pop","push","__values","o","m","__read","r","ar","error","isNil$1","toString","isType$1","type","clamp$1","a","min","max","isNumber$1","isType","ARRAY_TYPE","Float32Array","out","glMatrix.ARRAY_TYPE","fromValues","x","z","normalize","len","Math","sqrt","lerp","ax","ay","az","hypot","sub","transformMat4","w","vec","has","prefix","Events","EE","fn","context","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","events","name","names","slice","concat","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","removeListener","undefined","j","on","removeAllListeners","off","prefixed","module","exports","GL","ResourceType","CompareFunction","FrontFace","CullMode","BlendFactor","BlendMode","AddressMode","FilterMode","MipmapFilterMode","PrimitiveTopology","BufferUsage","BufferFrequencyHint","VertexStepMode","TextureEvent","TextureDimension","TextureUsage","ChannelWriteMask","StencilOp","SamplerFormatKind","ViewportOrigin","ClipSpaceNearZ","QueryPoolType","FormatTypeFlags","FormatCompFlags","FormatFlags","Format","makeFormat","comp","flags","getFormatCompFlags","fmt","getFormatTypeFlags","getFormatFlags","getFormatTypeFlagsByteSize","typeFlags","F32","U32","S32","U16","S16","F16","U8","S8","Error","getFormatCompByteSize","getFormatSamplerKind","Depth","Normalized","Float","Uint","Sint","assert","message","colorNewCopy","src","colorNewFromRGBA","A","None","Luminance","R","RG","RGB","RGBA","sRGB","U16_PACKED_5551","U16_PACKED_565","BC1","BC2","BC3","BC4_UNORM","BC4_SNORM","BC5_UNORM","BC5_SNORM","D24","D24S8","Stencil","D32F","D32FS8","RenderTarget","TransparentBlack","isPowerOfTwo","fallbackUndefined","fallback","align","multiple","mask","copyChannelBlendState","dst","blendDstFactor","blendSrcFactor","blendMode","copyStencilFaceState","compare","depthFailOp","passOp","failOp","copyAttachmentState","rgbBlendState","alphaBlendState","channelWriteMask","copyAttachmentsState","copyMegaState","attachmentsState","blendConstant","stencilFront","stencilBack","defaultBlendState","ADD","ONE","ZERO","defaultMegaState","ALL","depthWrite","depthCompare","LEQUAL","stencilWrite","ALWAYS","KEEP","cullMode","NONE","frontFace","CCW","polygonOffset","other","colorCopy","setMegaStateFlags","makeMegaState","_a","defaultBindingLayoutSamplerDescriptor","texture","sampler","formatKind","dimension","TEXTURE_2D","UNIFORM_NAME_REGEXP","parseUniformName","isArray","matches","match","Number","getSamplerSetter","cache","gl","location","update","uniform1i","getArraySetter","functionName","toArray","size","uniformSetter","cacheLength","arrayValue","set","setVectorUniform","setMatrixUniform","FLOAT_ARRAY","INT_ARRAY","UINT_ARRAY","array1","toTypedArray","uniformLength","Type","isFinite","toFloatArray","toIntArray","Int32Array","toUIntArray","Uint32Array","UNIFORM_SETTERS","FLOAT","bind","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","getUniformSetter","info","setter","dtypes","ResourceBase_GL","_super","id","device","_this","trackResourceCreated","destroy","trackResourceDestroyed","isWebGL2","WebGL2RenderingContext","_version","isFormatSizedInteger","translateBufferUsageToTarget","usage","INDEX","ELEMENT_ARRAY_BUFFER","VERTEX","ARRAY_BUFFER","UNIFORM","UNIFORM_BUFFER","translateVertexFormat$1","compFlags","UNSIGNED_BYTE","UNSIGNED_SHORT","BYTE","SHORT","HALF_FLOAT","translateType","translateSize","normalized","translateAddressMode$1","wrapMode","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","translateFilterMode","filter","mipmapFilter","LINEAR","BILINEAR","LINEAR_MIPMAP_LINEAR","POINT","NEAREST_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_NEAREST","NO_MIP","getPlatformBuffer$1","buffer_","byteOffset","gl_buffer_pages","pageByteSize","Bindings_GL","descriptor","Bindings","samplerBindings","uniformBufferBindings","bindingLayouts","createBindingLayouts","firstUniformBuffer","firstSampler","bindingLayoutTables","numUniformBuffers","numSamplers","Buffer_GL","Buffer","viewOrSize","_b","hint","STATIC","uniformBufferMaxPageByteSize","isUBO","bindVertexArray","OES_vertex_array_object","bindVertexArrayOES","byteSize","isNumber","byteLength","byteSizeLeft","createBufferPage","gl_target","setSubData","Uint8Array","buffer","dstByteOffset","data","srcByteOffset","dstPageByteSize","virtBufferByteOffsetEnd","virtBufferByteOffset","physBufferByteOffset","target","COPY_WRITE_BUFFER","ubo","bindBuffer","bufferSubData","deleteBuffer","gl_buffer","ensureResourceExists","createBuffer","gl_hint","STATIC_DRAW","DYNAMIC","DYNAMIC_DRAW","translateBufferHint","bufferData","InputLayout_GL","e_1","e_2","_c","_d","InputLayout","vertexBufferDescriptors","indexBufferFormat","program","U16_R","U32_R","indexBufferType","format","U8_R","translateIndexFormat$1","indexBufferCompByteSize","vao","createVertexArray","createVertexArrayOES","_e","_f","vertexBufferDescriptor","stepMode","attributes","attributes_1","attributes_1_1","attribute","shaderLocation","_g","divisor","location_1","vertexFormat","isNil","vertexAttribPointer","INSTANCE","vertexAttribDivisor","ANGLE_instanced_arrays","vertexAttribDivisorANGLE","enableVertexAttribArray","e_2_1","e_1_1","deleteVertexArray","deleteVertexArrayOES","ProgramCompileState_GL","Texture_GL","fake","Texture","depthOrArrayLayers","mipLevelCount","gl_texture","clampmipLevelCount","immutable","RENDER_TARGET","pixelStore","width","height","mipmaps","createTexture","gl_type","translateTextureType","internalformat","translateTextureInternalFormat","setActiveTexture","TEXTURE0","preprocessImage","bindTexture","texStorage2D","level","DEPTH_COMPONENT","isNPOT","D24_S8","WEBGL_depth_texture","texImage2D","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D_ARRAY","texStorage3D","TEXTURE_3D","TEXTURE_CUBE_MAP","setImageData","levelDatas","lod","isTextureFormatCompressed","is3D","isCube","isTA","gl_format","translateTextureFormat","gl_internal_format","translateInternalTextureFormat","levelData","TEXTURE_CUBE_MAP_POSITIVE_X","texSubImage2D","texImage3D","generateMipmap","deleteTexture","h","unpackFlipY","pixelStorei","UNPACK_FLIP_Y_WEBGL","packAlignment","PACK_ALIGNMENT","unpackAlignment","UNPACK_ALIGNMENT","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","log2","TEXTURE_MAG_FILTER","RenderTarget_GL","gl_renderbuffer","sampleCount","useRenderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","renderbufferStorage","deleteRenderbuffer","Program_GL","rawVertexGLSL","Program","uniformSetters","gl_program","createProgram","gl_shader_vert","gl_shader_frag","compileState","NeedsCompile","tryCompileProgram","deleteProgram","deleteShader","vertex","fragment","glsl","compileShader","postprocess","VERTEX_SHADER","FRAGMENT_SHADER","attachShader","linkProgram","Compiling","readUniformLocationsFromLinkedProgram","readAttributesFromLinkedProgram","count","getProgramParameter","ACTIVE_ATTRIBUTES","defines","shader","replace","isNaN","getDefines","locations","vert","getAttributeLocations","_loop_1","index","getActiveAttrib","this_1","name_1","getAttribLocation","definedLocation","find","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","name_2","location_2","getUniformLocation","contents","createShader","shaderSource","setUniformsLegacy","uniforms","programUsed","uniformName","useProgram","textureIndex","QueryPool_GL","QueryPool","gl_query","c","nArray","elemCount","createQuery","gl_query_type","OcclusionConservative","ANY_SAMPLES_PASSED_CONSERVATIVE","translateQueryPoolType$1","queryResultOcclusion","dstOffs","getQueryParameter","QUERY_RESULT_AVAILABLE","QUERY_RESULT","deleteQuery","Readback_GL","Readback","gl_pbo","gl_sync","clientWaitAsync","sync","interval_ms","test","res","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","clamp","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","getBufferSubDataAsync","dstBuffer","dstOffset","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","readTexture","formatByteSize","PIXEL_PACK_BUFFER","STREAM_READ","bindFramebuffer","READ_FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","readPixels","readTextureSync","FRAMEBUFFER","readBuffer","deleteSync","RenderPipeline_GL","RenderPipeline","drawMode","topology","TRIANGLES","POINTS","TRIANGLE_STRIP","LINES","LINE_STRIP","translatePrimitiveTopology","inputLayout","megaState","megaStateDescriptor","colorAttachmentFormats","depthStencilAttachmentFormat","ComputePipeline_GL","ComputePipeline","Sampler_GL","Sampler","gl_sampler","createSampler","samplerParameteri","addressModeU","addressModeV","TEXTURE_WRAP_R","addressModeW","minFilter","magFilter","lodMinClamp","samplerParameterf","TEXTURE_MIN_LOD","lodMaxClamp","TEXTURE_MAX_LOD","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","maxAnisotropy","EXT_texture_filter_anisotropic","TEXTURE_MAX_ANISOTROPY_EXT","setTextureParameters","deleteSampler","RenderBundle_GL","RenderBundle","commands","replay","forEach","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","heap","fill","TextEncoder","GPUTextureUsage$1","GPUMapMode","translateTextureViewDimension","translateAddressMode","translateMinMagFilter","texFilter","translateMipFilter","getPlatformBuffer","gpuBuffer","translateQueryPoolType","translateCompareFunction","NEVER","LESS","EQUAL","GREATER","NOTEQUAL","GEQUAL","translateVertexStepMode","translateVertexFormat","U8_RG","U8_RGB","U8_RGBA","U8_RG_NORM","U8_RGBA_NORM","S8_RGB_NORM","S8_RGBA_NORM","U16_RG_NORM","U16_RGBA_NORM","S16_RG_NORM","S16_RGBA_NORM","S16_RG","F16_RG","F16_RGBA","F32_R","F32_RG","F32_RGB","F32_RGBA","allocateAndCopyTypedBuffer","sizeOrDstBuffer","sizeInBytes","copyBuffer","S8_R","S8_R_NORM","S8_RG_NORM","buffer_1","ArrayBuffer","Int8Array","U8_R_NORM","U8_RGB_NORM","U8_RGB_SRGB","U8_RGBA_SRGB","buffer_2","S16_R","S16_RGB_NORM","S16_RGBA","buffer_3","Int16Array","U16_RGB","U16_RGBA_5551","U16_R_NORM","buffer_4","Uint16Array","S32_R","buffer_5","U32_RG","buffer_6","buffer_7","getBlockInformationFromFormat","GPUTextureUsage","ResourceBase_WebGPU","Bindings_WebGPU","pipeline","storageBufferBindings","storageTextureBindings","gpuBindGroupEntries","numBindings","binding","offset","gpuBufferBinding","resource","samplerEntry","textureBinding","gpuTextureView","samplerBinding","gpuSampler","lastGroupIndex","findLastIndex","group","gpuBindGroup","map","createBindGroup","layout","getBindGroupLayout","entries","Buffer_WebGPU","useMapRead","MAP_READ","usage_","GPUBufferUsage","STORAGE","COPY_SRC","INDIRECT","COPY_DST","translateBufferUsage","mapBuffer","view","mappedAtCreation","getMappedRange","unmap","chunkStart","chunkEnd","alignedLength","tempView","maxChunk","queue","writeBuffer","ComputePipeline_WebGPU","gpuComputePipeline","computeStage","compute","createComputePipeline","InputLayout_WebGPU","buffers","arrayStride","indexFormat","translateIndexFormat","Program_WebGPU","vertexStage","fragmentStage","createShaderStage","shaderStage","entryPoint","code","wgsl","console","depthTextureName","includes","RegExp","cap","createShaderModule","QueryPool_WebGPU","querySet","createQuerySet","resolveBuffer","QUERY_RESOLVE","cpuBuffer","results","BigInt","Readback_WebGPU","blockInformation","bytesPerRow","bytesPerRowAligned","commandEncoder","gpuTextureformat","ceil","createCommandEncoder","copyTextureToBuffer","gpuTexture","mipLevel","origin","submit","finish","dstArrayBufferView","_size","noDataConversion","floatFormat","BYTES_PER_ELEMENT","gpuReadBuffer","copyBufferToBuffer","mapAsync","READ","copyArrayBuffer","getHalfFloatAsFloatRGBAArrayBuffer","ctor","data2","offset2","reason","dataLength","arrayBuffer","destArray","srcData","pow","NaN","Infinity","RenderPipeline_WebGPU","isCreatingAsync","gpuRenderPipeline","Sampler_WebGPU","Texture_WebGPU","skipCreate","flipY","createTextureShared","textureFromImageBitmapOrCanvas","sources","textureDescriptor","TEXTURE_BINDING","RENDER_ATTACHMENT","copyExternalImageToTexture","source","isImageBitmapOrCanvases","datas","ImageBitmap","HTMLCanvasElement","OffscreenCanvas","isVideo","HTMLVideoElement","importExternalTexture","bytesPerRow_1","writeTexture","createView","RenderBundle_WebGPU","renderBundleEncoder","createRenderBundleEncoder","colorFormats","renderBundle","ProceduralGeometry","props","flipYMatrix","mat4.create","vec3.fromValues","createTopology","applyMa4Position","mat","positions","vec4.create","vec4.transformMat4","updateVertexBuffer","VertexAttributeBufferIndex","POSITION","VertexAttributeLocation","applyMa4Normal","normals","normalMatrix","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4.invert","mat4.transpose","NORMAL","rebuildPosition","from","dirty","applyMat4","vertices","computeBoundingBox","maxX","maxY","maxZ","minX","minY","minZ","aabb","AABB","setMinMax","build","indices","uvs","setIndexBuffer","vertexCount","setVertexBuffer","bufferIndex","byteStride","bufferByteOffset","UV","BufferGeometry","primitiveUv1Padding","primitiveUv1PaddingScale","createConeData","baseRadius","peakRadius","heightSegments","capSegments","roundedCaps","u","top","bottom","tangent","theta","cosTheta","sinTheta","phi","sinPhi","first","second","third","fourth","bx","by","bz","pos","vec3.create","bottomToTop","norm","uvs1","vec3.lerp","sin","PI","cos","vec3.normalize","vec3.sub","_v","lat","lon","latitudeBands","floor","longitudeBands","capOffset","Uniform","CubeGeometry","depth","widthSegments","depthSegments","defineProperty","get","ws","hs","ds","hex","hey","hez","corners","faceAxes","faceNormals","sides","vcounter","generateFace","side","uSegments","vSegments","temp1","temp2","temp3","uv1s","SphereGeometry","radius","TorusGeometry","tubeRadius","ringRadius","segments","nx","ny","nz","rc","rt","PlaneGeometry","he","ls","CylinderGeometry","ConeGeometry","CapsuleGeometry","AmbientLight","style","rest","define","order","uploadUBO","parsedStyle","isCSSRGB","Light","DirectionalLight","direction","getUniformWordCount","intensity","fillColor","MeshBasicMaterial","vertexShader","fragmentShader","BACK","USE_UV","USE_MAP","USE_WIREFRAME","USE_FOG","USE_LIGHT","wireframe","setUniforms","PLACE_HOLDER","programDirty","MAP","aoMap","Material","MeshPhongMaterial","emissive","shininess","specular","bumpScale","doubleSide","specularMap","bumpMap","emissiveColor","parseColor","specularColor","u_Placeholder","EMISSIVE","SHININESS","SPECULAR","USE_SPECULARMAP","SPECULAR_MAP","USE_BUMPMAP","BUMP_MAP","BUMP_SCALE","USE_DOUBLESIDE","MeshLambertMaterial","PointMaterial","SIZE","Plugin","to","pack","init","AbstractRendererPlugin"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}