!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@antv/g-lite"),require("@antv/g-plugin-device-renderer")):"function"==typeof define&&define.amd?define(["exports","@antv/g-lite","@antv/g-plugin-device-renderer"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).G=e.G||{},e.G["3D"]={}),e.window.G,e.window.G.WebGL.DeviceRenderer)}(this,(function(e,t,n){"use strict";var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)};function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+t+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var o=function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;r>n;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},o.apply(this,arguments)};function a(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&0>t.indexOf(r)&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);r.length>i;i++)0>t.indexOf(r[i])&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]])}return n}function _(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{E(r.next(e))}catch(e){o(e)}}function _(e){try{E(r.throw(e))}catch(e){o(e)}}function E(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,_)}E((r=r.apply(e,t||[])).next())}))}function E(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:_(0),throw:_(1),return:_(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function _(_){return function(E){return function(_){if(n)throw new TypeError("Generator is already executing.");for(;o&&(o=0,_[0]&&(a=0)),a;)try{if(n=1,r&&(i=2&_[0]?r.return:_[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,_[1])).done)return i;switch(r=0,i&&(_=[2&_[0],i.value]),_[0]){case 0:case 1:i=_;break;case 4:return a.label++,{value:_[1],done:!1};case 5:a.label++,r=_[1],_=[0];continue;case 7:_=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==_[0]&&2!==_[0])){a=0;continue}if(3===_[0]&&(!i||_[1]>i[0]&&i[3]>_[1])){a.label=_[1];break}if(6===_[0]&&i[1]>a.label){a.label=i[1],i=_;break}if(i&&i[2]>a.label){a.label=i[2],a.ops.push(_);break}i[2]&&a.ops.pop(),a.trys.pop();continue}_=t.call(e,a)}catch(e){_=[6,e],r=0}finally{n=i=0}if(5&_[0])throw _[1];return{value:_[0]?_[1]:void 0,done:!0}}([_,E])}}}function c(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function l(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,o=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a}var u=function(e){return null==e},s={}.toString,R=function(e,t){return s.call(e)==="[object "+t+"]"},f=function(e,t,n){return t>e?t:e>n?n:e},d=function(e){return R(e,"Number")},A="undefined"!=typeof Float32Array?Float32Array:Array;function T(){var e=new A(16);return A!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function p(){var e=new A(3);return A!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function S(e,t,n){var r=new A(3);return r[0]=e,r[1]=t,r[2]=n,r}function M(e,t){var n=t[0],r=t[1],i=t[2],o=n*n+r*r+i*i;return o>0&&(o=1/Math.sqrt(o)),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e}function N(e,t,n,r){var i=t[0],o=t[1],a=t[2];return e[0]=i+r*(n[0]-i),e[1]=o+r*(n[1]-o),e[2]=a+r*(n[2]-a),e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var v=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e};function h(){var e=new A(4);return A!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function I(e,t,n){var r=t[0],i=t[1],o=t[2],a=t[3];return e[0]=n[0]*r+n[4]*i+n[8]*o+n[12]*a,e[1]=n[1]*r+n[5]*i+n[9]*o+n[13]*a,e[2]=n[2]*r+n[6]*i+n[10]*o+n[14]*a,e[3]=n[3]*r+n[7]*i+n[11]*o+n[15]*a,e}p(),function(){var e=h()}();var m={exports:{}};!function(e){var t=Object.prototype.hasOwnProperty,n="~";function r(){}function i(e,t,n){this.fn=e,this.context=t,this.once=n||!1}function o(e,t,r,o,a){if("function"!=typeof r)throw new TypeError("The listener must be a function");var _=new i(r,o||e,a),E=n?n+t:t;return e._events[E]?e._events[E].fn?e._events[E]=[e._events[E],_]:e._events[E].push(_):(e._events[E]=_,e._eventsCount++),e}function a(e,t){0==--e._eventsCount?e._events=new r:delete e._events[t]}function _(){this._events=new r,this._eventsCount=0}Object.create&&(r.prototype=Object.create(null),(new r).__proto__||(n=!1)),_.prototype.eventNames=function(){var e,r,i=[];if(0===this._eventsCount)return i;for(r in e=this._events)t.call(e,r)&&i.push(n?r.slice(1):r);return Object.getOwnPropertySymbols?i.concat(Object.getOwnPropertySymbols(e)):i},_.prototype.listeners=function(e){var t=this._events[n?n+e:e];if(!t)return[];if(t.fn)return[t.fn];for(var r=0,i=t.length,o=Array(i);i>r;r++)o[r]=t[r].fn;return o},_.prototype.listenerCount=function(e){var t=this._events[n?n+e:e];return t?t.fn?1:t.length:0},_.prototype.emit=function(e,t,r,i,o,a){var _=n?n+e:e;if(!this._events[_])return!1;var E,c,l=this._events[_],u=arguments.length;if(l.fn){switch(l.once&&this.removeListener(e,l.fn,void 0,!0),u){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,t),!0;case 3:return l.fn.call(l.context,t,r),!0;case 4:return l.fn.call(l.context,t,r,i),!0;case 5:return l.fn.call(l.context,t,r,i,o),!0;case 6:return l.fn.call(l.context,t,r,i,o,a),!0}for(c=1,E=Array(u-1);u>c;c++)E[c-1]=arguments[c];l.fn.apply(l.context,E)}else{var s,R=l.length;for(c=0;R>c;c++)switch(l[c].once&&this.removeListener(e,l[c].fn,void 0,!0),u){case 1:l[c].fn.call(l[c].context);break;case 2:l[c].fn.call(l[c].context,t);break;case 3:l[c].fn.call(l[c].context,t,r);break;case 4:l[c].fn.call(l[c].context,t,r,i);break;default:if(!E)for(s=1,E=Array(u-1);u>s;s++)E[s-1]=arguments[s];l[c].fn.apply(l[c].context,E)}}return!0},_.prototype.on=function(e,t,n){return o(this,e,t,n,!1)},_.prototype.once=function(e,t,n){return o(this,e,t,n,!0)},_.prototype.removeListener=function(e,t,r,i){var o=n?n+e:e;if(!this._events[o])return this;if(!t)return a(this,o),this;var _=this._events[o];if(_.fn)_.fn!==t||i&&!_.once||r&&_.context!==r||a(this,o);else{for(var E=0,c=[],l=_.length;l>E;E++)(_[E].fn!==t||i&&!_[E].once||r&&_[E].context!==r)&&c.push(_[E]);c.length?this._events[o]=1===c.length?c[0]:c:a(this,o)}return this},_.prototype.removeAllListeners=function(e){var t;return e?this._events[t=n?n+e:e]&&a(this,t):(this._events=new r,this._eventsCount=0),this},_.prototype.off=_.prototype.removeListener,_.prototype.addListener=_.prototype.on,_.prefixed=n,_.EventEmitter=_,e.exports=_}(m);var L,g,C,O,F,P,B,U,D,G,y,x,b,X,H,V,w,W,k,Y,z,K,j,Z,Q,q,J,$=m.exports;function ee(e,t,n){return e<<16|t<<8|n}function te(e){return e>>>8&255}function ne(e){return e>>>16&255}function re(e){return 255&e}function ie(e){switch(e){case Z.F32:case Z.U32:case Z.S32:return 4;case Z.U16:case Z.S16:case Z.F16:return 2;case Z.U8:case Z.S8:return 1;default:throw Error("whoops")}}function oe(e){return ie(ne(e))}function ae(t){var n=re(t);if(n&q.Depth)return e.SamplerFormatKind.Depth;if(n&q.Normalized)return e.SamplerFormatKind.Float;var r=ne(t);if(r===Z.F16||r===Z.F32)return e.SamplerFormatKind.Float;if(r===Z.U8||r===Z.U16||r===Z.U32)return e.SamplerFormatKind.Uint;if(r===Z.S8||r===Z.S16||r===Z.S32)return e.SamplerFormatKind.Sint;throw Error("whoops")}function _e(e,t){if(void 0===t&&(t=""),!e)throw Error("Assert fail: ".concat(t))}function Ee(e){return{r:e.r,g:e.g,b:e.b,a:e.a}}function ce(e,t,n,r){return void 0===r&&(r=1),{r:e,g:t,b:n,a:r}}e.GL=void 0,(L=e.GL||(e.GL={}))[L.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",L[L.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",L[L.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",L[L.POINTS=0]="POINTS",L[L.LINES=1]="LINES",L[L.LINE_LOOP=2]="LINE_LOOP",L[L.LINE_STRIP=3]="LINE_STRIP",L[L.TRIANGLES=4]="TRIANGLES",L[L.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",L[L.TRIANGLE_FAN=6]="TRIANGLE_FAN",L[L.ZERO=0]="ZERO",L[L.ONE=1]="ONE",L[L.SRC_COLOR=768]="SRC_COLOR",L[L.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",L[L.SRC_ALPHA=770]="SRC_ALPHA",L[L.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",L[L.DST_ALPHA=772]="DST_ALPHA",L[L.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",L[L.DST_COLOR=774]="DST_COLOR",L[L.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",L[L.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",L[L.CONSTANT_COLOR=32769]="CONSTANT_COLOR",L[L.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",L[L.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",L[L.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",L[L.FUNC_ADD=32774]="FUNC_ADD",L[L.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",L[L.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",L[L.BLEND_EQUATION=32777]="BLEND_EQUATION",L[L.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",L[L.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",L[L.BLEND_DST_RGB=32968]="BLEND_DST_RGB",L[L.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",L[L.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",L[L.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",L[L.BLEND_COLOR=32773]="BLEND_COLOR",L[L.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",L[L.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",L[L.LINE_WIDTH=2849]="LINE_WIDTH",L[L.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",L[L.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",L[L.CULL_FACE_MODE=2885]="CULL_FACE_MODE",L[L.FRONT_FACE=2886]="FRONT_FACE",L[L.DEPTH_RANGE=2928]="DEPTH_RANGE",L[L.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",L[L.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",L[L.DEPTH_FUNC=2932]="DEPTH_FUNC",L[L.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",L[L.STENCIL_FUNC=2962]="STENCIL_FUNC",L[L.STENCIL_FAIL=2964]="STENCIL_FAIL",L[L.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",L[L.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",L[L.STENCIL_REF=2967]="STENCIL_REF",L[L.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",L[L.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",L[L.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",L[L.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",L[L.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",L[L.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",L[L.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",L[L.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",L[L.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",L[L.VIEWPORT=2978]="VIEWPORT",L[L.SCISSOR_BOX=3088]="SCISSOR_BOX",L[L.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",L[L.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",L[L.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",L[L.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",L[L.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",L[L.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",L[L.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",L[L.RED_BITS=3410]="RED_BITS",L[L.GREEN_BITS=3411]="GREEN_BITS",L[L.BLUE_BITS=3412]="BLUE_BITS",L[L.ALPHA_BITS=3413]="ALPHA_BITS",L[L.DEPTH_BITS=3414]="DEPTH_BITS",L[L.STENCIL_BITS=3415]="STENCIL_BITS",L[L.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",L[L.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",L[L.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",L[L.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",L[L.SAMPLES=32937]="SAMPLES",L[L.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",L[L.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",L[L.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",L[L.VENDOR=7936]="VENDOR",L[L.RENDERER=7937]="RENDERER",L[L.VERSION=7938]="VERSION",L[L.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",L[L.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",L[L.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",L[L.STATIC_DRAW=35044]="STATIC_DRAW",L[L.STREAM_DRAW=35040]="STREAM_DRAW",L[L.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",L[L.ARRAY_BUFFER=34962]="ARRAY_BUFFER",L[L.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",L[L.BUFFER_SIZE=34660]="BUFFER_SIZE",L[L.BUFFER_USAGE=34661]="BUFFER_USAGE",L[L.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",L[L.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",L[L.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",L[L.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",L[L.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",L[L.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",L[L.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",L[L.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",L[L.CULL_FACE=2884]="CULL_FACE",L[L.FRONT=1028]="FRONT",L[L.BACK=1029]="BACK",L[L.FRONT_AND_BACK=1032]="FRONT_AND_BACK",L[L.BLEND=3042]="BLEND",L[L.DEPTH_TEST=2929]="DEPTH_TEST",L[L.DITHER=3024]="DITHER",L[L.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",L[L.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",L[L.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",L[L.SCISSOR_TEST=3089]="SCISSOR_TEST",L[L.STENCIL_TEST=2960]="STENCIL_TEST",L[L.NO_ERROR=0]="NO_ERROR",L[L.INVALID_ENUM=1280]="INVALID_ENUM",L[L.INVALID_VALUE=1281]="INVALID_VALUE",L[L.INVALID_OPERATION=1282]="INVALID_OPERATION",L[L.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",L[L.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",L[L.CW=2304]="CW",L[L.CCW=2305]="CCW",L[L.DONT_CARE=4352]="DONT_CARE",L[L.FASTEST=4353]="FASTEST",L[L.NICEST=4354]="NICEST",L[L.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",L[L.BYTE=5120]="BYTE",L[L.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",L[L.SHORT=5122]="SHORT",L[L.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",L[L.INT=5124]="INT",L[L.UNSIGNED_INT=5125]="UNSIGNED_INT",L[L.FLOAT=5126]="FLOAT",L[L.DOUBLE=5130]="DOUBLE",L[L.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",L[L.ALPHA=6406]="ALPHA",L[L.RGB=6407]="RGB",L[L.RGBA=6408]="RGBA",L[L.LUMINANCE=6409]="LUMINANCE",L[L.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",L[L.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",L[L.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",L[L.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",L[L.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",L[L.VERTEX_SHADER=35633]="VERTEX_SHADER",L[L.COMPILE_STATUS=35713]="COMPILE_STATUS",L[L.DELETE_STATUS=35712]="DELETE_STATUS",L[L.LINK_STATUS=35714]="LINK_STATUS",L[L.VALIDATE_STATUS=35715]="VALIDATE_STATUS",L[L.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",L[L.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",L[L.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",L[L.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",L[L.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",L[L.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",L[L.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",L[L.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",L[L.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",L[L.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",L[L.SHADER_TYPE=35663]="SHADER_TYPE",L[L.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",L[L.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",L[L.NEVER=512]="NEVER",L[L.ALWAYS=519]="ALWAYS",L[L.LESS=513]="LESS",L[L.EQUAL=514]="EQUAL",L[L.LEQUAL=515]="LEQUAL",L[L.GREATER=516]="GREATER",L[L.GEQUAL=518]="GEQUAL",L[L.NOTEQUAL=517]="NOTEQUAL",L[L.KEEP=7680]="KEEP",L[L.REPLACE=7681]="REPLACE",L[L.INCR=7682]="INCR",L[L.DECR=7683]="DECR",L[L.INVERT=5386]="INVERT",L[L.INCR_WRAP=34055]="INCR_WRAP",L[L.DECR_WRAP=34056]="DECR_WRAP",L[L.NEAREST=9728]="NEAREST",L[L.LINEAR=9729]="LINEAR",L[L.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",L[L.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",L[L.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",L[L.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",L[L.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",L[L.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",L[L.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",L[L.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",L[L.TEXTURE_2D=3553]="TEXTURE_2D",L[L.TEXTURE=5890]="TEXTURE",L[L.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",L[L.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",L[L.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",L[L.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",L[L.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",L[L.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",L[L.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",L[L.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",L[L.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",L[L.TEXTURE0=33984]="TEXTURE0",L[L.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",L[L.REPEAT=10497]="REPEAT",L[L.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",L[L.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",L[L.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",L[L.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",L[L.FLOAT_VEC2=35664]="FLOAT_VEC2",L[L.FLOAT_VEC3=35665]="FLOAT_VEC3",L[L.FLOAT_VEC4=35666]="FLOAT_VEC4",L[L.INT_VEC2=35667]="INT_VEC2",L[L.INT_VEC3=35668]="INT_VEC3",L[L.INT_VEC4=35669]="INT_VEC4",L[L.BOOL=35670]="BOOL",L[L.BOOL_VEC2=35671]="BOOL_VEC2",L[L.BOOL_VEC3=35672]="BOOL_VEC3",L[L.BOOL_VEC4=35673]="BOOL_VEC4",L[L.FLOAT_MAT2=35674]="FLOAT_MAT2",L[L.FLOAT_MAT3=35675]="FLOAT_MAT3",L[L.FLOAT_MAT4=35676]="FLOAT_MAT4",L[L.SAMPLER_2D=35678]="SAMPLER_2D",L[L.SAMPLER_CUBE=35680]="SAMPLER_CUBE",L[L.LOW_FLOAT=36336]="LOW_FLOAT",L[L.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",L[L.HIGH_FLOAT=36338]="HIGH_FLOAT",L[L.LOW_INT=36339]="LOW_INT",L[L.MEDIUM_INT=36340]="MEDIUM_INT",L[L.HIGH_INT=36341]="HIGH_INT",L[L.FRAMEBUFFER=36160]="FRAMEBUFFER",L[L.RENDERBUFFER=36161]="RENDERBUFFER",L[L.RGBA4=32854]="RGBA4",L[L.RGB5_A1=32855]="RGB5_A1",L[L.RGB565=36194]="RGB565",L[L.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",L[L.STENCIL_INDEX=6401]="STENCIL_INDEX",L[L.STENCIL_INDEX8=36168]="STENCIL_INDEX8",L[L.DEPTH_STENCIL=34041]="DEPTH_STENCIL",L[L.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",L[L.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",L[L.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",L[L.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",L[L.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",L[L.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",L[L.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",L[L.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",L[L.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",L[L.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",L[L.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",L[L.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",L[L.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",L[L.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",L[L.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",L[L.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",L[L.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",L[L.NONE=0]="NONE",L[L.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",L[L.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",L[L.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",L[L.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",L[L.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",L[L.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",L[L.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",L[L.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",L[L.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",L[L.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",L[L.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",L[L.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",L[L.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",L[L.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",L[L.READ_BUFFER=3074]="READ_BUFFER",L[L.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",L[L.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",L[L.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",L[L.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",L[L.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",L[L.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",L[L.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",L[L.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",L[L.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",L[L.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",L[L.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",L[L.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",L[L.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",L[L.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",L[L.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",L[L.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",L[L.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",L[L.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",L[L.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",L[L.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",L[L.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",L[L.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",L[L.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",L[L.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",L[L.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",L[L.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",L[L.RED=6403]="RED",L[L.RGB8=32849]="RGB8",L[L.RGBA8=32856]="RGBA8",L[L.RGB10_A2=32857]="RGB10_A2",L[L.TEXTURE_3D=32879]="TEXTURE_3D",L[L.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",L[L.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",L[L.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",L[L.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",L[L.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",L[L.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",L[L.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",L[L.SRGB=35904]="SRGB",L[L.SRGB8=35905]="SRGB8",L[L.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",L[L.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",L[L.RGBA32F=34836]="RGBA32F",L[L.RGB32F=34837]="RGB32F",L[L.RGBA16F=34842]="RGBA16F",L[L.RGB16F=34843]="RGB16F",L[L.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",L[L.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",L[L.R11F_G11F_B10F=35898]="R11F_G11F_B10F",L[L.RGB9_E5=35901]="RGB9_E5",L[L.RGBA32UI=36208]="RGBA32UI",L[L.RGB32UI=36209]="RGB32UI",L[L.RGBA16UI=36214]="RGBA16UI",L[L.RGB16UI=36215]="RGB16UI",L[L.RGBA8UI=36220]="RGBA8UI",L[L.RGB8UI=36221]="RGB8UI",L[L.RGBA32I=36226]="RGBA32I",L[L.RGB32I=36227]="RGB32I",L[L.RGBA16I=36232]="RGBA16I",L[L.RGB16I=36233]="RGB16I",L[L.RGBA8I=36238]="RGBA8I",L[L.RGB8I=36239]="RGB8I",L[L.RED_INTEGER=36244]="RED_INTEGER",L[L.RGB_INTEGER=36248]="RGB_INTEGER",L[L.RGBA_INTEGER=36249]="RGBA_INTEGER",L[L.R8=33321]="R8",L[L.RG8=33323]="RG8",L[L.R16F=33325]="R16F",L[L.R32F=33326]="R32F",L[L.RG16F=33327]="RG16F",L[L.RG32F=33328]="RG32F",L[L.R8I=33329]="R8I",L[L.R8UI=33330]="R8UI",L[L.R16I=33331]="R16I",L[L.R16UI=33332]="R16UI",L[L.R32I=33333]="R32I",L[L.R32UI=33334]="R32UI",L[L.RG8I=33335]="RG8I",L[L.RG8UI=33336]="RG8UI",L[L.RG16I=33337]="RG16I",L[L.RG16UI=33338]="RG16UI",L[L.RG32I=33339]="RG32I",L[L.RG32UI=33340]="RG32UI",L[L.R8_SNORM=36756]="R8_SNORM",L[L.RG8_SNORM=36757]="RG8_SNORM",L[L.RGB8_SNORM=36758]="RGB8_SNORM",L[L.RGBA8_SNORM=36759]="RGBA8_SNORM",L[L.RGB10_A2UI=36975]="RGB10_A2UI",L[L.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",L[L.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",L[L.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",L[L.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",L[L.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",L[L.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",L[L.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",L[L.HALF_FLOAT=5131]="HALF_FLOAT",L[L.RG=33319]="RG",L[L.RG_INTEGER=33320]="RG_INTEGER",L[L.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",L[L.CURRENT_QUERY=34917]="CURRENT_QUERY",L[L.QUERY_RESULT=34918]="QUERY_RESULT",L[L.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",L[L.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",L[L.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",L[L.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",L[L.DRAW_BUFFER0=34853]="DRAW_BUFFER0",L[L.DRAW_BUFFER1=34854]="DRAW_BUFFER1",L[L.DRAW_BUFFER2=34855]="DRAW_BUFFER2",L[L.DRAW_BUFFER3=34856]="DRAW_BUFFER3",L[L.DRAW_BUFFER4=34857]="DRAW_BUFFER4",L[L.DRAW_BUFFER5=34858]="DRAW_BUFFER5",L[L.DRAW_BUFFER6=34859]="DRAW_BUFFER6",L[L.DRAW_BUFFER7=34860]="DRAW_BUFFER7",L[L.DRAW_BUFFER8=34861]="DRAW_BUFFER8",L[L.DRAW_BUFFER9=34862]="DRAW_BUFFER9",L[L.DRAW_BUFFER10=34863]="DRAW_BUFFER10",L[L.DRAW_BUFFER11=34864]="DRAW_BUFFER11",L[L.DRAW_BUFFER12=34865]="DRAW_BUFFER12",L[L.DRAW_BUFFER13=34866]="DRAW_BUFFER13",L[L.DRAW_BUFFER14=34867]="DRAW_BUFFER14",L[L.DRAW_BUFFER15=34868]="DRAW_BUFFER15",L[L.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",L[L.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",L[L.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",L[L.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",L[L.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",L[L.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",L[L.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",L[L.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",L[L.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",L[L.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",L[L.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",L[L.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",L[L.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",L[L.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",L[L.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",L[L.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",L[L.SAMPLER_3D=35679]="SAMPLER_3D",L[L.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",L[L.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",L[L.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",L[L.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",L[L.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",L[L.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",L[L.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",L[L.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",L[L.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",L[L.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",L[L.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",L[L.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",L[L.MAX_SAMPLES=36183]="MAX_SAMPLES",L[L.SAMPLER_BINDING=35097]="SAMPLER_BINDING",L[L.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",L[L.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",L[L.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",L[L.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",L[L.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",L[L.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",L[L.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",L[L.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",L[L.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",L[L.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",L[L.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",L[L.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",L[L.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",L[L.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",L[L.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",L[L.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",L[L.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",L[L.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",L[L.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",L[L.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",L[L.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",L[L.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",L[L.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",L[L.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",L[L.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",L[L.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",L[L.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",L[L.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",L[L.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",L[L.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",L[L.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",L[L.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",L[L.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",L[L.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",L[L.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",L[L.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",L[L.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",L[L.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",L[L.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",L[L.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",L[L.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",L[L.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",L[L.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",L[L.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",L[L.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",L[L.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",L[L.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",L[L.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",L[L.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",L[L.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",L[L.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",L[L.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",L[L.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",L[L.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",L[L.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",L[L.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",L[L.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",L[L.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",L[L.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",L[L.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",L[L.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",L[L.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",L[L.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",L[L.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",L[L.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",L[L.UNIFORM_TYPE=35383]="UNIFORM_TYPE",L[L.UNIFORM_SIZE=35384]="UNIFORM_SIZE",L[L.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",L[L.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",L[L.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",L[L.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",L[L.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",L[L.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",L[L.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",L[L.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",L[L.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",L[L.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",L[L.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",L[L.OBJECT_TYPE=37138]="OBJECT_TYPE",L[L.SYNC_CONDITION=37139]="SYNC_CONDITION",L[L.SYNC_STATUS=37140]="SYNC_STATUS",L[L.SYNC_FLAGS=37141]="SYNC_FLAGS",L[L.SYNC_FENCE=37142]="SYNC_FENCE",L[L.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",L[L.UNSIGNALED=37144]="UNSIGNALED",L[L.SIGNALED=37145]="SIGNALED",L[L.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",L[L.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",L[L.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",L[L.WAIT_FAILED=37149]="WAIT_FAILED",L[L.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",L[L.COLOR=6144]="COLOR",L[L.DEPTH=6145]="DEPTH",L[L.STENCIL=6146]="STENCIL",L[L.MIN=32775]="MIN",L[L.MAX=32776]="MAX",L[L.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",L[L.STREAM_READ=35041]="STREAM_READ",L[L.STREAM_COPY=35042]="STREAM_COPY",L[L.STATIC_READ=35045]="STATIC_READ",L[L.STATIC_COPY=35046]="STATIC_COPY",L[L.DYNAMIC_READ=35049]="DYNAMIC_READ",L[L.DYNAMIC_COPY=35050]="DYNAMIC_COPY",L[L.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",L[L.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",L[L.INVALID_INDEX=4294967295]="INVALID_INDEX",L[L.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",L[L.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",L[L.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE",L[L.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",L[L.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",L[L.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",L[L.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",L[L.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",L[L.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",L[L.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",L[L.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",L[L.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",L[L.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",L[L.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",L[L.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",L[L.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",L[L.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",L[L.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",L[L.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",L[L.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",L[L.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",L[L.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",L[L.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",L[L.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",L[L.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",L[L.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",L[L.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",L[L.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",L[L.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",L[L.UNSIGNED_INT_24_8_WEBGL=34042]="UNSIGNED_INT_24_8_WEBGL",L[L.HALF_FLOAT_OES=36193]="HALF_FLOAT_OES",L[L.RGBA32F_EXT=34836]="RGBA32F_EXT",L[L.RGB32F_EXT=34837]="RGB32F_EXT",L[L.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT",L[L.UNSIGNED_NORMALIZED_EXT=35863]="UNSIGNED_NORMALIZED_EXT",L[L.MIN_EXT=32775]="MIN_EXT",L[L.MAX_EXT=32776]="MAX_EXT",L[L.SRGB_EXT=35904]="SRGB_EXT",L[L.SRGB_ALPHA_EXT=35906]="SRGB_ALPHA_EXT",L[L.SRGB8_ALPHA8_EXT=35907]="SRGB8_ALPHA8_EXT",L[L.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT",L[L.FRAGMENT_SHADER_DERIVATIVE_HINT_OES=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT_OES",L[L.COLOR_ATTACHMENT0_WEBGL=36064]="COLOR_ATTACHMENT0_WEBGL",L[L.COLOR_ATTACHMENT1_WEBGL=36065]="COLOR_ATTACHMENT1_WEBGL",L[L.COLOR_ATTACHMENT2_WEBGL=36066]="COLOR_ATTACHMENT2_WEBGL",L[L.COLOR_ATTACHMENT3_WEBGL=36067]="COLOR_ATTACHMENT3_WEBGL",L[L.COLOR_ATTACHMENT4_WEBGL=36068]="COLOR_ATTACHMENT4_WEBGL",L[L.COLOR_ATTACHMENT5_WEBGL=36069]="COLOR_ATTACHMENT5_WEBGL",L[L.COLOR_ATTACHMENT6_WEBGL=36070]="COLOR_ATTACHMENT6_WEBGL",L[L.COLOR_ATTACHMENT7_WEBGL=36071]="COLOR_ATTACHMENT7_WEBGL",L[L.COLOR_ATTACHMENT8_WEBGL=36072]="COLOR_ATTACHMENT8_WEBGL",L[L.COLOR_ATTACHMENT9_WEBGL=36073]="COLOR_ATTACHMENT9_WEBGL",L[L.COLOR_ATTACHMENT10_WEBGL=36074]="COLOR_ATTACHMENT10_WEBGL",L[L.COLOR_ATTACHMENT11_WEBGL=36075]="COLOR_ATTACHMENT11_WEBGL",L[L.COLOR_ATTACHMENT12_WEBGL=36076]="COLOR_ATTACHMENT12_WEBGL",L[L.COLOR_ATTACHMENT13_WEBGL=36077]="COLOR_ATTACHMENT13_WEBGL",L[L.COLOR_ATTACHMENT14_WEBGL=36078]="COLOR_ATTACHMENT14_WEBGL",L[L.COLOR_ATTACHMENT15_WEBGL=36079]="COLOR_ATTACHMENT15_WEBGL",L[L.DRAW_BUFFER0_WEBGL=34853]="DRAW_BUFFER0_WEBGL",L[L.DRAW_BUFFER1_WEBGL=34854]="DRAW_BUFFER1_WEBGL",L[L.DRAW_BUFFER2_WEBGL=34855]="DRAW_BUFFER2_WEBGL",L[L.DRAW_BUFFER3_WEBGL=34856]="DRAW_BUFFER3_WEBGL",L[L.DRAW_BUFFER4_WEBGL=34857]="DRAW_BUFFER4_WEBGL",L[L.DRAW_BUFFER5_WEBGL=34858]="DRAW_BUFFER5_WEBGL",L[L.DRAW_BUFFER6_WEBGL=34859]="DRAW_BUFFER6_WEBGL",L[L.DRAW_BUFFER7_WEBGL=34860]="DRAW_BUFFER7_WEBGL",L[L.DRAW_BUFFER8_WEBGL=34861]="DRAW_BUFFER8_WEBGL",L[L.DRAW_BUFFER9_WEBGL=34862]="DRAW_BUFFER9_WEBGL",L[L.DRAW_BUFFER10_WEBGL=34863]="DRAW_BUFFER10_WEBGL",L[L.DRAW_BUFFER11_WEBGL=34864]="DRAW_BUFFER11_WEBGL",L[L.DRAW_BUFFER12_WEBGL=34865]="DRAW_BUFFER12_WEBGL",L[L.DRAW_BUFFER13_WEBGL=34866]="DRAW_BUFFER13_WEBGL",L[L.DRAW_BUFFER14_WEBGL=34867]="DRAW_BUFFER14_WEBGL",L[L.DRAW_BUFFER15_WEBGL=34868]="DRAW_BUFFER15_WEBGL",L[L.MAX_COLOR_ATTACHMENTS_WEBGL=36063]="MAX_COLOR_ATTACHMENTS_WEBGL",L[L.MAX_DRAW_BUFFERS_WEBGL=34852]="MAX_DRAW_BUFFERS_WEBGL",L[L.VERTEX_ARRAY_BINDING_OES=34229]="VERTEX_ARRAY_BINDING_OES",L[L.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",L[L.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",L[L.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",L[L.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",L[L.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",L[L.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",L[L.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",function(e){e[e.Buffer=0]="Buffer",e[e.Texture=1]="Texture",e[e.RenderTarget=2]="RenderTarget",e[e.Sampler=3]="Sampler",e[e.Program=4]="Program",e[e.Bindings=5]="Bindings",e[e.InputLayout=6]="InputLayout",e[e.RenderPipeline=7]="RenderPipeline",e[e.ComputePipeline=8]="ComputePipeline",e[e.Readback=9]="Readback",e[e.QueryPool=10]="QueryPool",e[e.RenderBundle=11]="RenderBundle"}(g||(g={})),e.CompareFunction=void 0,(C=e.CompareFunction||(e.CompareFunction={}))[C.NEVER=512]="NEVER",C[C.LESS=513]="LESS",C[C.EQUAL=514]="EQUAL",C[C.LEQUAL=515]="LEQUAL",C[C.GREATER=516]="GREATER",C[C.NOTEQUAL=517]="NOTEQUAL",C[C.GEQUAL=518]="GEQUAL",C[C.ALWAYS=519]="ALWAYS",e.FrontFace=void 0,(O=e.FrontFace||(e.FrontFace={}))[O.CCW=2305]="CCW",O[O.CW=2304]="CW",e.CullMode=void 0,(F=e.CullMode||(e.CullMode={}))[F.NONE=0]="NONE",F[F.FRONT=1]="FRONT",F[F.BACK=2]="BACK",F[F.FRONT_AND_BACK=3]="FRONT_AND_BACK",e.BlendFactor=void 0,(P=e.BlendFactor||(e.BlendFactor={}))[P.ZERO=0]="ZERO",P[P.ONE=1]="ONE",P[P.SRC=768]="SRC",P[P.ONE_MINUS_SRC=769]="ONE_MINUS_SRC",P[P.DST=774]="DST",P[P.ONE_MINUS_DST=775]="ONE_MINUS_DST",P[P.SRC_ALPHA=770]="SRC_ALPHA",P[P.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",P[P.DST_ALPHA=772]="DST_ALPHA",P[P.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",P[P.CONST=32769]="CONST",P[P.ONE_MINUS_CONSTANT=32770]="ONE_MINUS_CONSTANT",P[P.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",e.BlendMode=void 0,(B=e.BlendMode||(e.BlendMode={}))[B.ADD=32774]="ADD",B[B.SUBSTRACT=32778]="SUBSTRACT",B[B.REVERSE_SUBSTRACT=32779]="REVERSE_SUBSTRACT",B[B.MIN=32775]="MIN",B[B.MAX=32776]="MAX",e.AddressMode=void 0,(U=e.AddressMode||(e.AddressMode={}))[U.CLAMP_TO_EDGE=0]="CLAMP_TO_EDGE",U[U.REPEAT=1]="REPEAT",U[U.MIRRORED_REPEAT=2]="MIRRORED_REPEAT",function(e){e[e.POINT=0]="POINT",e[e.BILINEAR=1]="BILINEAR"}(D||(D={})),e.MipmapFilterMode=void 0,(G=e.MipmapFilterMode||(e.MipmapFilterMode={}))[G.NO_MIP=0]="NO_MIP",G[G.NEAREST=1]="NEAREST",G[G.LINEAR=2]="LINEAR",e.PrimitiveTopology=void 0,(y=e.PrimitiveTopology||(e.PrimitiveTopology={}))[y.POINTS=0]="POINTS",y[y.TRIANGLES=1]="TRIANGLES",y[y.TRIANGLE_STRIP=2]="TRIANGLE_STRIP",y[y.LINES=3]="LINES",y[y.LINE_STRIP=4]="LINE_STRIP",function(e){e[e.MAP_READ=1]="MAP_READ",e[e.MAP_WRITE=2]="MAP_WRITE",e[e.COPY_SRC=4]="COPY_SRC",e[e.COPY_DST=8]="COPY_DST",e[e.INDEX=16]="INDEX",e[e.VERTEX=32]="VERTEX",e[e.UNIFORM=64]="UNIFORM",e[e.STORAGE=128]="STORAGE",e[e.INDIRECT=256]="INDIRECT",e[e.QUERY_RESOLVE=512]="QUERY_RESOLVE"}(x||(x={})),e.BufferFrequencyHint=void 0,(b=e.BufferFrequencyHint||(e.BufferFrequencyHint={}))[b.STATIC=1]="STATIC",b[b.DYNAMIC=2]="DYNAMIC",e.VertexStepMode=void 0,(X=e.VertexStepMode||(e.VertexStepMode={}))[X.VERTEX=1]="VERTEX",X[X.INSTANCE=2]="INSTANCE",function(e){e.LOADED="loaded"}(H||(H={})),e.TextureDimension=void 0,(V=e.TextureDimension||(e.TextureDimension={}))[V.TEXTURE_2D=0]="TEXTURE_2D",V[V.TEXTURE_2D_ARRAY=1]="TEXTURE_2D_ARRAY",V[V.TEXTURE_3D=2]="TEXTURE_3D",V[V.TEXTURE_CUBE_MAP=3]="TEXTURE_CUBE_MAP",e.TextureUsage=void 0,(w=e.TextureUsage||(e.TextureUsage={}))[w.SAMPLED=1]="SAMPLED",w[w.RENDER_TARGET=2]="RENDER_TARGET",w[w.STORAGE=4]="STORAGE",e.ChannelWriteMask=void 0,(W=e.ChannelWriteMask||(e.ChannelWriteMask={}))[W.NONE=0]="NONE",W[W.RED=1]="RED",W[W.GREEN=2]="GREEN",W[W.BLUE=4]="BLUE",W[W.ALPHA=8]="ALPHA",W[W.RGB=7]="RGB",W[W.ALL=15]="ALL",e.StencilOp=void 0,(k=e.StencilOp||(e.StencilOp={}))[k.KEEP=7680]="KEEP",k[k.ZERO=0]="ZERO",k[k.REPLACE=7681]="REPLACE",k[k.INVERT=5386]="INVERT",k[k.INCREMENT_CLAMP=7682]="INCREMENT_CLAMP",k[k.DECREMENT_CLAMP=7683]="DECREMENT_CLAMP",k[k.INCREMENT_WRAP=34055]="INCREMENT_WRAP",k[k.DECREMENT_WRAP=34056]="DECREMENT_WRAP",e.SamplerFormatKind=void 0,(Y=e.SamplerFormatKind||(e.SamplerFormatKind={}))[Y.Float=0]="Float",Y[Y.UnfilterableFloat=1]="UnfilterableFloat",Y[Y.Uint=2]="Uint",Y[Y.Sint=3]="Sint",Y[Y.Depth=4]="Depth",function(e){e[e.LOWER_LEFT=0]="LOWER_LEFT",e[e.UPPER_LEFT=1]="UPPER_LEFT"}(z||(z={})),function(e){e[e.NEGATIVE_ONE=0]="NEGATIVE_ONE",e[e.ZERO=1]="ZERO"}(K||(K={})),function(e){e[e.OcclusionConservative=0]="OcclusionConservative"}(j||(j={})),function(e){e[e.U8=1]="U8",e[e.U16=2]="U16",e[e.U32=3]="U32",e[e.S8=4]="S8",e[e.S16=5]="S16",e[e.S32=6]="S32",e[e.F16=7]="F16",e[e.F32=8]="F32",e[e.BC1=65]="BC1",e[e.BC2=66]="BC2",e[e.BC3=67]="BC3",e[e.BC4_UNORM=68]="BC4_UNORM",e[e.BC4_SNORM=69]="BC4_SNORM",e[e.BC5_UNORM=70]="BC5_UNORM",e[e.BC5_SNORM=71]="BC5_SNORM",e[e.U16_PACKED_5551=97]="U16_PACKED_5551",e[e.U16_PACKED_565=98]="U16_PACKED_565",e[e.D24=129]="D24",e[e.D32F=130]="D32F",e[e.D24S8=131]="D24S8",e[e.D32FS8=132]="D32FS8"}(Z||(Z={})),function(e){e[e.R=1]="R",e[e.RG=2]="RG",e[e.RGB=3]="RGB",e[e.RGBA=4]="RGBA",e[e.A=5]="A"}(Q||(Q={})),function(e){e[e.None=0]="None",e[e.Normalized=1]="Normalized",e[e.sRGB=2]="sRGB",e[e.Depth=4]="Depth",e[e.Stencil=8]="Stencil",e[e.RenderTarget=16]="RenderTarget",e[e.Luminance=32]="Luminance"}(q||(q={})),e.Format=void 0,(J=e.Format||(e.Format={}))[J.ALPHA=ee(Z.U8,Q.A,q.None)]="ALPHA",J[J.U8_LUMINANCE=ee(Z.U8,Q.A,q.Luminance)]="U8_LUMINANCE",J[J.F16_LUMINANCE=ee(Z.F16,Q.A,q.Luminance)]="F16_LUMINANCE",J[J.F32_LUMINANCE=ee(Z.F32,Q.A,q.Luminance)]="F32_LUMINANCE",J[J.F16_R=ee(Z.F16,Q.R,q.None)]="F16_R",J[J.F16_RG=ee(Z.F16,Q.RG,q.None)]="F16_RG",J[J.F16_RGB=ee(Z.F16,Q.RGB,q.None)]="F16_RGB",J[J.F16_RGBA=ee(Z.F16,Q.RGBA,q.None)]="F16_RGBA",J[J.F32_R=ee(Z.F32,Q.R,q.None)]="F32_R",J[J.F32_RG=ee(Z.F32,Q.RG,q.None)]="F32_RG",J[J.F32_RGB=ee(Z.F32,Q.RGB,q.None)]="F32_RGB",J[J.F32_RGBA=ee(Z.F32,Q.RGBA,q.None)]="F32_RGBA",J[J.U8_R=ee(Z.U8,Q.R,q.None)]="U8_R",J[J.U8_R_NORM=ee(Z.U8,Q.R,q.Normalized)]="U8_R_NORM",J[J.U8_RG=ee(Z.U8,Q.RG,q.None)]="U8_RG",J[J.U8_RG_NORM=ee(Z.U8,Q.RG,q.Normalized)]="U8_RG_NORM",J[J.U8_RGB=ee(Z.U8,Q.RGB,q.None)]="U8_RGB",J[J.U8_RGB_NORM=ee(Z.U8,Q.RGB,q.Normalized)]="U8_RGB_NORM",J[J.U8_RGB_SRGB=ee(Z.U8,Q.RGB,q.sRGB|q.Normalized)]="U8_RGB_SRGB",J[J.U8_RGBA=ee(Z.U8,Q.RGBA,q.None)]="U8_RGBA",J[J.U8_RGBA_NORM=ee(Z.U8,Q.RGBA,q.Normalized)]="U8_RGBA_NORM",J[J.U8_RGBA_SRGB=ee(Z.U8,Q.RGBA,q.sRGB|q.Normalized)]="U8_RGBA_SRGB",J[J.U16_R=ee(Z.U16,Q.R,q.None)]="U16_R",J[J.U16_R_NORM=ee(Z.U16,Q.R,q.Normalized)]="U16_R_NORM",J[J.U16_RG_NORM=ee(Z.U16,Q.RG,q.Normalized)]="U16_RG_NORM",J[J.U16_RGBA_NORM=ee(Z.U16,Q.RGBA,q.Normalized)]="U16_RGBA_NORM",J[J.U16_RGBA=ee(Z.U16,Q.RGBA,q.None)]="U16_RGBA",J[J.U16_RGB=ee(Z.U16,Q.RGB,q.None)]="U16_RGB",J[J.U16_RG=ee(Z.U16,Q.RG,q.None)]="U16_RG",J[J.U32_R=ee(Z.U32,Q.R,q.None)]="U32_R",J[J.U32_RG=ee(Z.U32,Q.RG,q.None)]="U32_RG",J[J.U32_RGB=ee(Z.U32,Q.RGB,q.None)]="U32_RGB",J[J.U32_RGBA=ee(Z.U32,Q.RGBA,q.None)]="U32_RGBA",J[J.S8_R=ee(Z.S8,Q.R,q.None)]="S8_R",J[J.S8_R_NORM=ee(Z.S8,Q.R,q.Normalized)]="S8_R_NORM",J[J.S8_RG_NORM=ee(Z.S8,Q.RG,q.Normalized)]="S8_RG_NORM",J[J.S8_RGB_NORM=ee(Z.S8,Q.RGB,q.Normalized)]="S8_RGB_NORM",J[J.S8_RGBA_NORM=ee(Z.S8,Q.RGBA,q.Normalized)]="S8_RGBA_NORM",J[J.S16_R=ee(Z.S16,Q.R,q.None)]="S16_R",J[J.S16_RG=ee(Z.S16,Q.RG,q.None)]="S16_RG",J[J.S16_RG_NORM=ee(Z.S16,Q.RG,q.Normalized)]="S16_RG_NORM",J[J.S16_RGB_NORM=ee(Z.S16,Q.RGB,q.Normalized)]="S16_RGB_NORM",J[J.S16_RGBA=ee(Z.S16,Q.RGBA,q.None)]="S16_RGBA",J[J.S16_RGBA_NORM=ee(Z.S16,Q.RGBA,q.Normalized)]="S16_RGBA_NORM",J[J.S32_R=ee(Z.S32,Q.R,q.None)]="S32_R",J[J.S32_RG=ee(Z.S32,Q.RG,q.None)]="S32_RG",J[J.S32_RGB=ee(Z.S32,Q.RGB,q.None)]="S32_RGB",J[J.S32_RGBA=ee(Z.S32,Q.RGBA,q.None)]="S32_RGBA",J[J.U16_RGBA_5551=ee(Z.U16_PACKED_5551,Q.RGBA,q.Normalized)]="U16_RGBA_5551",J[J.U16_RGB_565=ee(Z.U16_PACKED_565,Q.RGB,q.Normalized)]="U16_RGB_565",J[J.BC1=ee(Z.BC1,Q.RGBA,q.Normalized)]="BC1",J[J.BC1_SRGB=ee(Z.BC1,Q.RGBA,q.Normalized|q.sRGB)]="BC1_SRGB",J[J.BC2=ee(Z.BC2,Q.RGBA,q.Normalized)]="BC2",J[J.BC2_SRGB=ee(Z.BC2,Q.RGBA,q.Normalized|q.sRGB)]="BC2_SRGB",J[J.BC3=ee(Z.BC3,Q.RGBA,q.Normalized)]="BC3",J[J.BC3_SRGB=ee(Z.BC3,Q.RGBA,q.Normalized|q.sRGB)]="BC3_SRGB",J[J.BC4_UNORM=ee(Z.BC4_UNORM,Q.R,q.Normalized)]="BC4_UNORM",J[J.BC4_SNORM=ee(Z.BC4_SNORM,Q.R,q.Normalized)]="BC4_SNORM",J[J.BC5_UNORM=ee(Z.BC5_UNORM,Q.RG,q.Normalized)]="BC5_UNORM",J[J.BC5_SNORM=ee(Z.BC5_SNORM,Q.RG,q.Normalized)]="BC5_SNORM",J[J.D24=ee(Z.D24,Q.R,q.Depth)]="D24",J[J.D24_S8=ee(Z.D24S8,Q.RG,q.Depth|q.Stencil)]="D24_S8",J[J.D32F=ee(Z.D32F,Q.R,q.Depth)]="D32F",J[J.D32F_S8=ee(Z.D32FS8,Q.RG,q.Depth|q.Stencil)]="D32F_S8",J[J.U8_RGB_RT=ee(Z.U8,Q.RGB,q.RenderTarget|q.Normalized)]="U8_RGB_RT",J[J.U8_RGBA_RT=ee(Z.U8,Q.RGBA,q.RenderTarget|q.Normalized)]="U8_RGBA_RT",J[J.U8_RGBA_RT_SRGB=ee(Z.U8,Q.RGBA,q.RenderTarget|q.Normalized|q.sRGB)]="U8_RGBA_RT_SRGB";var le=ce(0,0,0,0);function ue(e){return!(!e||0!=(e&e-1))}function se(e,t){return null!=e?e:t}function Re(e,t){var n=t-1;return e+n&~n}function fe(e,t){e.blendDstFactor=t.blendDstFactor,e.blendSrcFactor=t.blendSrcFactor,e.blendMode=t.blendMode}function de(e,t){return void 0===e&&(e={}),e.compare=t.compare,e.depthFailOp=t.depthFailOp,e.passOp=t.passOp,e.failOp=t.failOp,e.mask=t.mask,e}function Ae(e,t){return void 0===e&&(e={rgbBlendState:{},alphaBlendState:{},channelWriteMask:0}),fe(e.rgbBlendState,t.rgbBlendState),fe(e.alphaBlendState,t.alphaBlendState),e.channelWriteMask=t.channelWriteMask,e}function Te(e,t){e.length!==t.length&&(e.length=t.length);for(var n=0;t.length>n;n++)e[n]=Ae(e[n],t[n])}function pe(e){var t=Object.assign({},e);return t.attachmentsState=[],Te(t.attachmentsState,e.attachmentsState),t.blendConstant=t.blendConstant&&Ee(t.blendConstant),t.stencilFront=de(void 0,e.stencilFront),t.stencilBack=de(void 0,e.stencilBack),t}ce(0,0,0,1),ce(1,1,1,0),ce(1,1,1,1);var Se={blendMode:e.BlendMode.ADD,blendSrcFactor:e.BlendFactor.ONE,blendDstFactor:e.BlendFactor.ZERO},Me={attachmentsState:[{channelWriteMask:e.ChannelWriteMask.ALL,rgbBlendState:Se,alphaBlendState:Se}],blendConstant:Ee(le),depthWrite:!0,depthCompare:e.CompareFunction.LEQUAL,stencilWrite:!1,stencilFront:{compare:e.CompareFunction.ALWAYS,passOp:e.StencilOp.KEEP,depthFailOp:e.StencilOp.KEEP,failOp:e.StencilOp.KEEP},stencilBack:{compare:e.CompareFunction.ALWAYS,passOp:e.StencilOp.KEEP,depthFailOp:e.StencilOp.KEEP,failOp:e.StencilOp.KEEP},cullMode:e.CullMode.NONE,frontFace:e.FrontFace.CCW,polygonOffset:!1};!function(e,t){void 0===e&&(e=null),void 0===t&&(t=Me);var n=pe(t);null!==e&&function(e,t){void 0!==t.attachmentsState&&Te(e.attachmentsState,t.attachmentsState),e.blendConstant&&t.blendConstant&&function(e,t){e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a}(e.blendConstant,t.blendConstant),e.depthCompare=se(t.depthCompare,e.depthCompare),e.depthWrite=se(t.depthWrite,e.depthWrite),e.stencilWrite=se(t.stencilWrite,e.stencilWrite),e.stencilFront&&t.stencilFront&&de(e.stencilFront,t.stencilFront),e.stencilBack&&t.stencilBack&&de(e.stencilBack,t.stencilBack),e.cullMode=se(t.cullMode,e.cullMode),e.frontFace=se(t.frontFace,e.frontFace),e.polygonOffset=se(t.polygonOffset,e.polygonOffset)}(n,e)}({depthCompare:e.CompareFunction.ALWAYS,depthWrite:!1},Me);var Ne,ve={texture:null,sampler:null,formatKind:e.SamplerFormatKind.Float,dimension:e.TextureDimension.TEXTURE_2D},he=/([^[]*)(\[[0-9]+\])?/;function Ie(e){if("]"!==e[e.length-1])return{name:e,length:1,isArray:!1};var t=e.match(he);if(!t||2>t.length)throw Error("Failed to parse GLSL uniform name ".concat(e));return{name:t[1],length:Number(t[2])||1,isArray:!!t[2]}}function me(){var e=null;return function(t,n,r){var i=e!==r;return i&&(t.uniform1i(n,r),e=r),i}}function Le(e,t,n,r){var i=null,o=null;return function(a,_,E){var c=t(E,n),l=c.length,u=!1;if(null===i)i=new Float32Array(l),o=l,u=!0;else{_e(o===l,"Uniform length cannot change.");for(var s=0;l>s;++s)if(c[s]!==i[s]){u=!0;break}}return u&&(r(a,e,_,c),i.set(c)),u}}function ge(e,t,n,r){e[t](n,r)}function Ce(e,t,n,r){e[t](n,!1,r)}var Oe={},Fe={},Pe={},Be=[0];function Ue(e,t,n,r){1===t&&"boolean"==typeof e&&(e=e?1:0),Number.isFinite(e)&&(Be[0]=e,e=Be);var i=e.length;if(e instanceof n)return e;var o=r[i];o||(o=new n(i),r[i]=o);for(var a=0;i>a;a++)o[a]=e[a];return o}function De(e,t){return Ue(e,t,Float32Array,Oe)}function Ge(e,t){return Ue(e,t,Int32Array,Fe)}function ye(e,t){return Ue(e,t,Uint32Array,Pe)}var xe=((Ne={})[e.GL.FLOAT]=Le.bind(null,"uniform1fv",De,1,ge),Ne[e.GL.FLOAT_VEC2]=Le.bind(null,"uniform2fv",De,2,ge),Ne[e.GL.FLOAT_VEC3]=Le.bind(null,"uniform3fv",De,3,ge),Ne[e.GL.FLOAT_VEC4]=Le.bind(null,"uniform4fv",De,4,ge),Ne[e.GL.INT]=Le.bind(null,"uniform1iv",Ge,1,ge),Ne[e.GL.INT_VEC2]=Le.bind(null,"uniform2iv",Ge,2,ge),Ne[e.GL.INT_VEC3]=Le.bind(null,"uniform3iv",Ge,3,ge),Ne[e.GL.INT_VEC4]=Le.bind(null,"uniform4iv",Ge,4,ge),Ne[e.GL.BOOL]=Le.bind(null,"uniform1iv",Ge,1,ge),Ne[e.GL.BOOL_VEC2]=Le.bind(null,"uniform2iv",Ge,2,ge),Ne[e.GL.BOOL_VEC3]=Le.bind(null,"uniform3iv",Ge,3,ge),Ne[e.GL.BOOL_VEC4]=Le.bind(null,"uniform4iv",Ge,4,ge),Ne[e.GL.FLOAT_MAT2]=Le.bind(null,"uniformMatrix2fv",De,4,Ce),Ne[e.GL.FLOAT_MAT3]=Le.bind(null,"uniformMatrix3fv",De,9,Ce),Ne[e.GL.FLOAT_MAT4]=Le.bind(null,"uniformMatrix4fv",De,16,Ce),Ne[e.GL.UNSIGNED_INT]=Le.bind(null,"uniform1uiv",ye,1,ge),Ne[e.GL.UNSIGNED_INT_VEC2]=Le.bind(null,"uniform2uiv",ye,2,ge),Ne[e.GL.UNSIGNED_INT_VEC3]=Le.bind(null,"uniform3uiv",ye,3,ge),Ne[e.GL.UNSIGNED_INT_VEC4]=Le.bind(null,"uniform4uiv",ye,4,ge),Ne[e.GL.FLOAT_MAT2x3]=Le.bind(null,"uniformMatrix2x3fv",De,6,Ce),Ne[e.GL.FLOAT_MAT2x4]=Le.bind(null,"uniformMatrix2x4fv",De,8,Ce),Ne[e.GL.FLOAT_MAT3x2]=Le.bind(null,"uniformMatrix3x2fv",De,6,Ce),Ne[e.GL.FLOAT_MAT3x4]=Le.bind(null,"uniformMatrix3x4fv",De,12,Ce),Ne[e.GL.FLOAT_MAT4x2]=Le.bind(null,"uniformMatrix4x2fv",De,8,Ce),Ne[e.GL.FLOAT_MAT4x3]=Le.bind(null,"uniformMatrix4x3fv",De,12,Ce),Ne[e.GL.SAMPLER_2D]=me,Ne[e.GL.SAMPLER_CUBE]=me,Ne[e.GL.SAMPLER_3D]=me,Ne[e.GL.SAMPLER_2D_SHADOW]=me,Ne[e.GL.SAMPLER_2D_ARRAY]=me,Ne[e.GL.SAMPLER_2D_ARRAY_SHADOW]=me,Ne[e.GL.SAMPLER_CUBE_SHADOW]=me,Ne[e.GL.INT_SAMPLER_2D]=me,Ne[e.GL.INT_SAMPLER_3D]=me,Ne[e.GL.INT_SAMPLER_CUBE]=me,Ne[e.GL.INT_SAMPLER_2D_ARRAY]=me,Ne[e.GL.UNSIGNED_INT_SAMPLER_2D]=me,Ne[e.GL.UNSIGNED_INT_SAMPLER_3D]=me,Ne[e.GL.UNSIGNED_INT_SAMPLER_CUBE]=me,Ne[e.GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]=me,Ne);function be(e,t,n){var r=xe[n.type];if(!r)throw Error("Unknown GLSL uniform type ".concat(n.type));return r().bind(null,e,t)}var Xe={"[object Int8Array]":5120,"[object Int16Array]":5122,"[object Int32Array]":5124,"[object Uint8Array]":5121,"[object Uint8ClampedArray]":5121,"[object Uint16Array]":5123,"[object Uint32Array]":5125,"[object Float32Array]":5126,"[object Float64Array]":5121,"[object ArrayBuffer]":5121};var He=function(e){function t(t){var n=t.id,r=t.device,i=e.call(this)||this;return i.id=n,i.device=r,null!==i.device.resourceCreationTracker&&i.device.resourceCreationTracker.trackResourceCreated(i),i}return i(t,e),t.prototype.destroy=function(){null!==this.device.resourceCreationTracker&&this.device.resourceCreationTracker.trackResourceDestroyed(this)},t}($);function Ve(e){return"undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||!(!e||2!==e._version)}function we(e){if(re(e)&q.Normalized)return!1;var t=ne(e);return t===Z.S8||t===Z.S16||t===Z.S32||(t===Z.U8||t===Z.U16||t===Z.U32)}function We(t){return t&x.INDEX?e.GL.ELEMENT_ARRAY_BUFFER:t&x.VERTEX?e.GL.ARRAY_BUFFER:t&x.UNIFORM?e.GL.UNIFORM_BUFFER:void 0}function ke(t){var n=ne(t),r=te(t),i=re(t),o=function(t){switch(t){case Z.U8:return e.GL.UNSIGNED_BYTE;case Z.U16:return e.GL.UNSIGNED_SHORT;case Z.U32:return e.GL.UNSIGNED_INT;case Z.S8:return e.GL.BYTE;case Z.S16:return e.GL.SHORT;case Z.S32:return e.GL.INT;case Z.F16:return e.GL.HALF_FLOAT;case Z.F32:return e.GL.FLOAT;default:throw Error("whoops")}}(n),a=function(e){switch(e){case Q.R:return 1;case Q.RG:return 2;case Q.RGB:return 3;case Q.RGBA:return 4;default:return 1}}(r);return{size:a,type:o,normalized:!!(i&q.Normalized)}}function Ye(t){switch(t){case e.AddressMode.CLAMP_TO_EDGE:return e.GL.CLAMP_TO_EDGE;case e.AddressMode.REPEAT:return e.GL.REPEAT;case e.AddressMode.MIRRORED_REPEAT:return e.GL.MIRRORED_REPEAT;default:throw Error("whoops")}}function ze(t,n){if(n===e.MipmapFilterMode.LINEAR&&t===D.BILINEAR)return e.GL.LINEAR_MIPMAP_LINEAR;if(n===e.MipmapFilterMode.LINEAR&&t===D.POINT)return e.GL.NEAREST_MIPMAP_LINEAR;if(n===e.MipmapFilterMode.NEAREST&&t===D.BILINEAR)return e.GL.LINEAR_MIPMAP_NEAREST;if(n===e.MipmapFilterMode.NEAREST&&t===D.POINT)return e.GL.NEAREST_MIPMAP_NEAREST;if(n===e.MipmapFilterMode.NO_MIP&&t===D.BILINEAR)return e.GL.LINEAR;if(n===e.MipmapFilterMode.NO_MIP&&t===D.POINT)return e.GL.NEAREST;throw Error("Unknown texture filter mode")}function Ke(e,t){void 0===t&&(t=0);return e.gl_buffer_pages[t/e.pageByteSize|0]}!function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;r.type=g.Bindings;var i=n.samplerBindings;return r.uniformBufferBindings=n.uniformBufferBindings||[],r.samplerBindings=i||[],r.bindingLayouts=r.createBindingLayouts(),r}i(t,e),t.prototype.createBindingLayouts=function(){var e=0,t=0,n=[],r=this.uniformBufferBindings.length,i=this.samplerBindings.length;return n.push({firstUniformBuffer:e,numUniformBuffers:r,firstSampler:t,numSamplers:i}),{numUniformBuffers:e+=r,numSamplers:t+=i,bindingLayoutTables:n}}}(He),function(t){function n(n){var r=n.device,i=n.descriptor,o=t.call(this,{id:n.id,device:r})||this;o.type=g.Buffer;var a=i.viewOrSize,_=i.usage,E=i.hint,c=void 0===E?e.BufferFrequencyHint.STATIC:E,l=r.uniformBufferMaxPageByteSize,u=r.gl,s=_&x.UNIFORM;s||(Ve(u)?u.bindVertexArray(null):r.OES_vertex_array_object.bindVertexArrayOES(null));var R,f=d(a)?Re(a,4):Re(a.byteLength,4);if(o.gl_buffer_pages=[],s){for(var A=f;A>0;)o.gl_buffer_pages.push(o.createBufferPage(Math.min(A,l),_,c)),A-=l;R=l}else o.gl_buffer_pages.push(o.createBufferPage(f,_,c)),R=f;return o.pageByteSize=R,o.byteSize=f,o.usage=_,o.gl_target=We(_),d(a)||o.setSubData(0,new Uint8Array(a.buffer)),s||(Ve(u)?u.bindVertexArray(o.device.currentBoundVAO):r.OES_vertex_array_object.bindVertexArrayOES(o.device.currentBoundVAO)),o}i(n,t),n.prototype.setSubData=function(e,t,n,r){void 0===n&&(n=0),void 0===r&&(r=t.byteLength-n);for(var i=this.device.gl,o=this.pageByteSize,a=e+r,_=e,E=e%o;a>_;){var c=Ve(i)?i.COPY_WRITE_BUFFER:this.gl_target,l=Ke(this,_);if(l.ubo)return;i.bindBuffer(c,l),Ve(i)?i.bufferSubData(c,E,t,n,Math.min(a-_,o)):i.bufferSubData(c,E,t),_+=o,E=0,n+=o,this.device.debugGroupStatisticsBufferUpload()}},n.prototype.destroy=function(){t.prototype.destroy.call(this);for(var e=0;this.gl_buffer_pages.length>e;e++)this.gl_buffer_pages[e].ubo||this.device.gl.deleteBuffer(this.gl_buffer_pages[e]);this.gl_buffer_pages=[]},n.prototype.createBufferPage=function(t,n,r){var i=this.device.gl,o=n&x.UNIFORM;if(!Ve(i)&&o)return{ubo:!0};var a=this.device.ensureResourceExists(i.createBuffer()),_=We(n),E=function(t){switch(t){case e.BufferFrequencyHint.STATIC:return e.GL.STATIC_DRAW;case e.BufferFrequencyHint.DYNAMIC:return e.GL.DYNAMIC_DRAW}}(r);return i.bindBuffer(_,a),i.bufferData(_,t,E),a}}(He),function(t){function n(n){var r,i,o,a,_,E=n.device,l=n.descriptor,s=t.call(this,{id:n.id,device:E})||this;s.type=g.InputLayout;var R=l.vertexBufferDescriptors,f=l.indexBufferFormat,d=l.program;_e(f===e.Format.U16_R||f===e.Format.U32_R||null===f);var A=null!==f?function(t){switch(t){case e.Format.U8_R:return e.GL.UNSIGNED_BYTE;case e.Format.U16_R:return e.GL.UNSIGNED_SHORT;case e.Format.U32_R:return e.GL.UNSIGNED_INT;default:throw Error("whoops")}}(f):null,T=null!==f?oe(f):null,p=s.device.gl,S=s.device.ensureResourceExists(Ve(p)?p.createVertexArray():E.OES_vertex_array_object.createVertexArrayOES());Ve(p)?p.bindVertexArray(S):E.OES_vertex_array_object.bindVertexArrayOES(S),p.bindBuffer(p.ARRAY_BUFFER,Ke(s.device.fallbackVertexBuffer));try{for(var M=c(l.vertexBufferDescriptors),N=M.next();!N.done;N=M.next()){var v=N.value,h=v.stepMode,I=v.attributes;try{for(var m=(o=void 0,c(I)),L=m.next();!L.done;L=m.next()){var C=L.value,O=C.shaderLocation,F=C.format,P=C.divisor,B=void 0===P?1:P,U=Ve(p)?O:null===(_=d.attributes[O])||void 0===_?void 0:_.location,D=ke(F);if(C.vertexFormat=D,!u(U))we(F),p.vertexAttribPointer(U,D.size,D.type,D.normalized,0,0),h===e.VertexStepMode.INSTANCE&&(Ve(p)?p.vertexAttribDivisor(U,B):E.ANGLE_instanced_arrays.vertexAttribDivisorANGLE(U,B)),p.enableVertexAttribArray(U)}}catch(e){o={error:e}}finally{try{L&&!L.done&&(a=m.return)&&a.call(m)}finally{if(o)throw o.error}}}}catch(e){r={error:e}}finally{try{N&&!N.done&&(i=M.return)&&i.call(M)}finally{if(r)throw r.error}}return Ve(p)?p.bindVertexArray(null):E.OES_vertex_array_object.bindVertexArrayOES(null),s.vertexBufferDescriptors=R,s.vao=S,s.indexBufferFormat=f,s.indexBufferType=A,s.indexBufferCompByteSize=T,s.program=d,s}i(n,t),n.prototype.destroy=function(){t.prototype.destroy.call(this),this.device.currentBoundVAO===this.vao&&(Ve(this.device.gl)?(this.device.gl.bindVertexArray(null),this.device.gl.deleteVertexArray(this.vao)):(this.device.OES_vertex_array_object.bindVertexArrayOES(null),this.device.OES_vertex_array_object.deleteVertexArrayOES(this.vao)),this.device.currentBoundVAO=null)}}(He);var je,Ze=function(t){function n(n){var r=n.device,i=n.descriptor,a=n.fake,_=t.call(this,{id:n.id,device:r})||this;_.type=g.Texture,i=o({dimension:e.TextureDimension.TEXTURE_2D,depthOrArrayLayers:1,mipLevelCount:1},i);var E,c,l=_.device.gl,u=_.clampmipLevelCount(i);if(_.immutable=i.usage===e.TextureUsage.RENDER_TARGET,_.pixelStore=i.pixelStore,_.format=i.format,_.dimension=i.dimension,_.formatKind=ae(i.format),_.width=i.width,_.height=i.height,_.depthOrArrayLayers=i.depthOrArrayLayers,_.mipmaps=u>=1,!a){c=_.device.ensureResourceExists(l.createTexture());var s=_.device.translateTextureType(i.format),R=_.device.translateTextureInternalFormat(i.format);if(_.device.setActiveTexture(l.TEXTURE0),_.device.currentTextures[0]=null,_.preprocessImage(),i.dimension===e.TextureDimension.TEXTURE_2D){if(l.bindTexture(E=e.GL.TEXTURE_2D,c),_.immutable)if(Ve(l))l.texStorage2D(E,u,R,i.width,i.height);else{var f=(R===e.GL.DEPTH_COMPONENT||_.isNPOT(),0);(_.format!==e.Format.D32F&&_.format!==e.Format.D24_S8||Ve(l)||r.WEBGL_depth_texture)&&(l.texImage2D(E,f,R,i.width,i.height,0,R,s,null),_.mipmaps&&(_.mipmaps=!1,l.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_MIN_FILTER,e.GL.LINEAR),l.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_WRAP_S,e.GL.CLAMP_TO_EDGE),l.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_WRAP_T,e.GL.CLAMP_TO_EDGE)))}_e(1===i.depthOrArrayLayers)}else if(i.dimension===e.TextureDimension.TEXTURE_2D_ARRAY)l.bindTexture(E=e.GL.TEXTURE_2D_ARRAY,c),_.immutable&&Ve(l)&&l.texStorage3D(E,u,R,i.width,i.height,i.depthOrArrayLayers);else if(i.dimension===e.TextureDimension.TEXTURE_3D)l.bindTexture(E=e.GL.TEXTURE_3D,c),_.immutable&&Ve(l)&&l.texStorage3D(E,u,R,i.width,i.height,i.depthOrArrayLayers);else{if(i.dimension!==e.TextureDimension.TEXTURE_CUBE_MAP)throw Error("whoops");l.bindTexture(E=e.GL.TEXTURE_CUBE_MAP,c),_.immutable&&Ve(l)&&l.texStorage2D(E,u,R,i.width,i.height),_e(6===i.depthOrArrayLayers)}}return _.gl_texture=c,_.gl_target=E,_.mipLevelCount=u,_}return i(n,t),n.prototype.setImageData=function(t,n){void 0===n&&(n=0);var r=this.device.gl;!function(e){switch(ne(e)){case Z.BC1:case Z.BC2:case Z.BC3:case Z.BC4_UNORM:case Z.BC4_SNORM:case Z.BC5_UNORM:case Z.BC5_SNORM:return!0;default:;}}(this.format);var i=this.gl_target===e.GL.TEXTURE_3D||this.gl_target===e.GL.TEXTURE_2D_ARRAY,o=this.gl_target===e.GL.TEXTURE_CUBE_MAP,a=Object.prototype.toString.call(t[0])in Xe;this.device.setActiveTexture(r.TEXTURE0),this.device.currentTextures[0]=null;var _,E,c=t[0];a?(_=this.width,E=this.height):(E=c.height,this.width=_=c.width,this.height=E),r.bindTexture(this.gl_target,this.gl_texture);var l=this.device.translateTextureFormat(this.format),u=Ve(r)?this.device.translateInternalTextureFormat(this.format):l,s=this.device.translateTextureType(this.format);this.preprocessImage();for(var R=0;this.depthOrArrayLayers>R;R++){var f=t[R],d=this.gl_target;o&&(d=e.GL.TEXTURE_CUBE_MAP_POSITIVE_X+R%6),this.immutable?r.texSubImage2D(d,n,0,0,_,E,l,s,f):Ve(r)?i?r.texImage3D(d,n,u,_,E,this.depthOrArrayLayers,0,l,s,f):r.texImage2D(d,n,u,_,E,0,l,s,f):a?r.texImage2D(d,n,l,_,E,0,l,s,f):r.texImage2D(d,n,l,l,s,f)}this.mipmaps&&this.generateMipmap(i)},n.prototype.destroy=function(){t.prototype.destroy.call(this),this.device.gl.deleteTexture(this.gl_texture)},n.prototype.clampmipLevelCount=function(t){if(t.dimension===e.TextureDimension.TEXTURE_2D_ARRAY&&t.depthOrArrayLayers>1&&ne(t.format)===Z.BC1)for(var n=t.width,r=t.height,i=0;t.mipLevelCount>i;i++){if(2>=n||2>=r)return i-1;n=Math.max(n/2|0,1),r=Math.max(r/2|0,1)}return t.mipLevelCount},n.prototype.preprocessImage=function(){var t=this.device.gl;this.pixelStore&&(this.pixelStore.unpackFlipY&&t.pixelStorei(e.GL.UNPACK_FLIP_Y_WEBGL,!0),this.pixelStore.packAlignment&&t.pixelStorei(e.GL.PACK_ALIGNMENT,this.pixelStore.packAlignment),this.pixelStore.unpackAlignment&&t.pixelStorei(e.GL.UNPACK_ALIGNMENT,this.pixelStore.unpackAlignment))},n.prototype.generateMipmap=function(t){void 0===t&&(t=!1);var n=this.device.gl;return!Ve(n)&&this.isNPOT()||this.gl_texture&&this.gl_target&&(n.bindTexture(this.gl_target,this.gl_texture),t?(n.texParameteri(this.gl_target,e.GL.TEXTURE_BASE_LEVEL,0),n.texParameteri(this.gl_target,e.GL.TEXTURE_MAX_LEVEL,Math.log2(this.width)),n.texParameteri(this.gl_target,e.GL.TEXTURE_MIN_FILTER,e.GL.LINEAR_MIPMAP_LINEAR),n.texParameteri(this.gl_target,e.GL.TEXTURE_MAG_FILTER,e.GL.LINEAR)):n.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_MIN_FILTER,e.GL.NEAREST_MIPMAP_LINEAR),n.generateMipmap(this.gl_target),n.bindTexture(this.gl_target,null)),this},n.prototype.isNPOT=function(){return!Ve(this.device.gl)&&(!ue(this.width)||!ue(this.height))},n}(He);!function(t){function n(n){var r=n.device,i=n.descriptor,o=t.call(this,{id:n.id,device:r})||this;o.type=g.RenderTarget,o.gl_renderbuffer=null,o.texture=null;var a=o.device.gl,_=i.format,E=i.width,c=i.height,l=i.sampleCount,u=void 0===l?1:l,s=i.texture,R=!1;if(_!==e.Format.D32F&&_!==e.Format.D24_S8||!s||Ve(a)||r.WEBGL_depth_texture||(s.destroy(),o.texture=null,R=!0),!R&&s)o.texture=s;else{o.gl_renderbuffer=o.device.ensureResourceExists(a.createRenderbuffer()),a.bindRenderbuffer(a.RENDERBUFFER,o.gl_renderbuffer);var f=o.device.translateTextureInternalFormat(_,!0);Ve(a)&&u>1?a.renderbufferStorageMultisample(e.GL.RENDERBUFFER,u,f,E,c):a.renderbufferStorage(e.GL.RENDERBUFFER,f,E,c)}return o.format=_,o.width=E,o.height=c,o.sampleCount=u,o}i(n,t),n.prototype.destroy=function(){t.prototype.destroy.call(this),null!==this.gl_renderbuffer&&this.device.gl.deleteRenderbuffer(this.gl_renderbuffer),this.texture&&this.texture.destroy()}}(He),function(e){e[e.NeedsCompile=0]="NeedsCompile",e[e.Compiling=1]="Compiling",e[e.NeedsBind=2]="NeedsBind",e[e.ReadyToUse=3]="ReadyToUse"}(je||(je={})),function(e){function t(t,n){var r=t.descriptor,i=e.call(this,{id:t.id,device:t.device})||this;i.rawVertexGLSL=n,i.type=g.Program,i.uniformSetters={},i.attributes=[];var o=i.device.gl;return i.descriptor=r,i.gl_program=i.device.ensureResourceExists(o.createProgram()),i.gl_shader_vert=null,i.gl_shader_frag=null,i.compileState=je.NeedsCompile,i.tryCompileProgram(),i}i(t,e),t.prototype.destroy=function(){e.prototype.destroy.call(this),this.device.gl.deleteProgram(this.gl_program),this.device.gl.deleteShader(this.gl_shader_vert),this.device.gl.deleteShader(this.gl_shader_frag)},t.prototype.tryCompileProgram=function(){_e(this.compileState===je.NeedsCompile);var e=this.descriptor,t=e.vertex,n=e.fragment,r=this.device.gl;(null==t?void 0:t.glsl)&&(null==n?void 0:n.glsl)&&(this.gl_shader_vert=this.compileShader(t.postprocess?t.postprocess(t.glsl):t.glsl,r.VERTEX_SHADER),this.gl_shader_frag=this.compileShader(n.postprocess?n.postprocess(n.glsl):n.glsl,r.FRAGMENT_SHADER),r.attachShader(this.gl_program,this.gl_shader_vert),r.attachShader(this.gl_program,this.gl_shader_frag),r.linkProgram(this.gl_program),this.compileState=je.Compiling,Ve(r)||(this.readUniformLocationsFromLinkedProgram(),this.readAttributesFromLinkedProgram()))},t.prototype.readAttributesFromLinkedProgram=function(){for(var e,t=this.device.gl,n=t.getProgramParameter(this.gl_program,t.ACTIVE_ATTRIBUTES),r=function(e){var t={};return e.replace(/^\s*#define\s*(\S*)\s*(\S*)\s*$/gm,(function(e,n,r){var i=Number(r);return t[n]=isNaN(i)?r:i,""})),t}(this.descriptor.vertex.glsl),i=function(e,t){var n=[];return e.replace(/^\s*layout\(location\s*=\s*(\S*)\)\s*in\s+\S+\s*(.*);$/gm,(function(e,r,i){var o=Number(r);return n.push({location:isNaN(o)?t[r]:o,name:i}),""})),n}(this.rawVertexGLSL,r),o=function(n){var r=t.getActiveAttrib(a.gl_program,n),o=r.name,_=r.type,E=r.size,c=t.getAttribLocation(a.gl_program,o),l=null===(e=i.find((function(e){return e.name===o})))||void 0===e?void 0:e.location;0>c||u(l)||(a.attributes[l]={name:o,location:c,type:_,size:E})},a=this,_=0;n>_;_++)o(_)},t.prototype.readUniformLocationsFromLinkedProgram=function(){for(var e=this.device.gl,t=e.getProgramParameter(this.gl_program,e.ACTIVE_UNIFORMS),n=0;t>n;n++){var r=e.getActiveUniform(this.gl_program,n),i=Ie(r.name).name,o=e.getUniformLocation(this.gl_program,i);if(this.uniformSetters[i]=be(e,o,r),r&&r.size>1)for(var a=0;r.size>a;a++)o=e.getUniformLocation(this.gl_program,"".concat(i,"[").concat(a,"]")),this.uniformSetters["".concat(i,"[").concat(a,"]")]=be(e,o,r)}},t.prototype.compileShader=function(e,t){var n=this.device.gl,r=this.device.ensureResourceExists(n.createShader(t));return n.shaderSource(r,e),n.compileShader(r),r},t.prototype.setUniformsLegacy=function(e){void 0===e&&(e={});var t=this.device.gl;if(!Ve(t)){var n=!1;for(var r in e){n||(t.useProgram(this.gl_program),n=!0);var i=this.uniformSetters[r];if(i){var o=e[r];o instanceof Ze&&(o=o.textureIndex),i(o)}}}return this}}(He),function(t){function n(n){var r=n.descriptor,i=t.call(this,{id:n.id,device:n.device})||this;i.type=g.QueryPool;var o=i.device.gl;if(Ve(o)){var a=r.type;i.gl_query=function(e,t){for(var n=Array(e),r=0;e>r;r++)n[r]=t();return n}(r.elemCount,(function(){return i.device.ensureResourceExists(o.createQuery())})),i.gl_query_type=function(t){if(t===j.OcclusionConservative)return e.GL.ANY_SAMPLES_PASSED_CONSERVATIVE;throw Error("whoops")}(a)}return i}i(n,t),n.prototype.queryResultOcclusion=function(e){var t=this.device.gl;if(Ve(t)){var n=this.gl_query[e];return t.getQueryParameter(n,t.QUERY_RESULT_AVAILABLE)?!!t.getQueryParameter(n,t.QUERY_RESULT):null}return null},n.prototype.destroy=function(){t.prototype.destroy.call(this);var e=this.device.gl;if(Ve(e))for(var n=0;this.gl_query.length>n;n++)e.deleteQuery(this.gl_query[n])}}(He),function(t){function n(e){var n=t.call(this,{id:e.id,device:e.device})||this;return n.type=g.Readback,n.gl_pbo=null,n.gl_sync=null,n}i(n,t),n.prototype.clientWaitAsync=function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=10);var r=this.device.gl;return new Promise((function(i,o){!function a(){var _=r.clientWaitSync(e,t,0);_!=r.WAIT_FAILED?_!=r.TIMEOUT_EXPIRED?i():setTimeout(a,f(n,0,r.MAX_CLIENT_WAIT_TIMEOUT_WEBGL)):o()}()}))},n.prototype.getBufferSubDataAsync=function(e,t,n,r,i,o){return _(this,void 0,void 0,(function(){var a;return E(this,(function(_){switch(_.label){case 0:return Ve(a=this.device.gl)?(this.gl_sync=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0),a.flush(),[4,this.clientWaitAsync(this.gl_sync,0,10)]):[3,2];case 1:return _.sent(),a.bindBuffer(e,t),a.getBufferSubData(e,n,r,i,o),a.bindBuffer(e,null),[2,r];case 2:return[2]}}))}))},n.prototype.readTexture=function(t,n,r,i,o,a,c,l){return void 0===c&&(c=0),void 0===l&&(l=a.byteLength||0),_(this,void 0,void 0,(function(){var _,u,s,R,f;return E(this,(function(E){var d;return _=this.device.gl,s=this.device.translateTextureFormat((u=t).format),R=this.device.translateTextureType(u.format),f=ie(ne(d=u.format))*te(d),Ve(_)?(this.gl_pbo=this.device.ensureResourceExists(_.createBuffer()),_.bindBuffer(_.PIXEL_PACK_BUFFER,this.gl_pbo),_.bufferData(_.PIXEL_PACK_BUFFER,l,_.STREAM_READ),_.bindBuffer(_.PIXEL_PACK_BUFFER,null),_.bindFramebuffer(e.GL.READ_FRAMEBUFFER,this.device.readbackFramebuffer),_.framebufferTexture2D(e.GL.READ_FRAMEBUFFER,e.GL.COLOR_ATTACHMENT0,e.GL.TEXTURE_2D,u.gl_texture,0),_.bindBuffer(_.PIXEL_PACK_BUFFER,this.gl_pbo),_.readPixels(n,r,i,o,s,R,c*f),_.bindBuffer(_.PIXEL_PACK_BUFFER,null),[2,this.getBufferSubDataAsync(_.PIXEL_PACK_BUFFER,this.gl_pbo,0,a,c,0)]):[2,this.readTextureSync(t,n,r,i,o,a,c,l)]}))}))},n.prototype.readTextureSync=function(t,n,r,i,o,a,_,E){void 0===E&&(E=a.byteLength||0);var c=this.device.gl,l=t,u=this.device.translateTextureType(l.format);return c.bindFramebuffer(e.GL.FRAMEBUFFER,this.device.readbackFramebuffer),c.framebufferTexture2D(e.GL.FRAMEBUFFER,e.GL.COLOR_ATTACHMENT0,e.GL.TEXTURE_2D,l.gl_texture,0),c.pixelStorei(c.PACK_ALIGNMENT,4),c.readPixels(n,r,i,o,c.RGBA,u,a),a},n.prototype.readBuffer=function(e,t,n,r,i){return _(this,void 0,void 0,(function(){var o;return E(this,(function(a){return Ve(o=this.device.gl)?[2,this.getBufferSubDataAsync(o.ARRAY_BUFFER,Ke(e,t),t,n,r,i)]:[2,Promise.reject()]}))}))},n.prototype.destroy=function(){t.prototype.destroy.call(this),Ve(this.device.gl)&&(null!==this.gl_sync&&this.device.gl.deleteSync(this.gl_sync),null!==this.gl_pbo&&this.device.gl.deleteBuffer(this.gl_pbo))}}(He),function(t){function n(n){var r,i,a=n.descriptor,_=t.call(this,{id:n.id,device:n.device})||this;return _.type=g.RenderPipeline,_.drawMode=function(t){switch(t){case e.PrimitiveTopology.TRIANGLES:return e.GL.TRIANGLES;case e.PrimitiveTopology.POINTS:return e.GL.POINTS;case e.PrimitiveTopology.TRIANGLE_STRIP:return e.GL.TRIANGLE_STRIP;case e.PrimitiveTopology.LINES:return e.GL.LINES;case e.PrimitiveTopology.LINE_STRIP:return e.GL.LINE_STRIP;default:throw Error("Unknown primitive topology mode")}}(null!==(r=a.topology)&&void 0!==r?r:e.PrimitiveTopology.TRIANGLES),_.program=a.program,_.inputLayout=a.inputLayout,_.megaState=o(o({},pe(Me)),a.megaStateDescriptor),_.colorAttachmentFormats=a.colorAttachmentFormats.slice(),_.depthStencilAttachmentFormat=a.depthStencilAttachmentFormat,_.sampleCount=null!==(i=a.sampleCount)&&void 0!==i?i:1,_}i(n,t)}(He),function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;return r.type=g.ComputePipeline,r.descriptor=n,r}i(t,e)}(He),function(t){function n(n){var r,i,o=n.descriptor,a=t.call(this,{id:n.id,device:n.device})||this;a.type=g.Sampler;var _=a.device.gl;if(Ve(_)){var E=a.device.ensureResourceExists(_.createSampler());_.samplerParameteri(E,e.GL.TEXTURE_WRAP_S,Ye(o.addressModeU)),_.samplerParameteri(E,e.GL.TEXTURE_WRAP_T,Ye(o.addressModeV)),_.samplerParameteri(E,e.GL.TEXTURE_WRAP_R,Ye(null!==(r=o.addressModeW)&&void 0!==r?r:o.addressModeU)),_.samplerParameteri(E,e.GL.TEXTURE_MIN_FILTER,ze(o.minFilter,o.mipmapFilter)),_.samplerParameteri(E,e.GL.TEXTURE_MAG_FILTER,ze(o.magFilter,e.MipmapFilterMode.NO_MIP)),void 0!==o.lodMinClamp&&_.samplerParameterf(E,e.GL.TEXTURE_MIN_LOD,o.lodMinClamp),void 0!==o.lodMaxClamp&&_.samplerParameterf(E,e.GL.TEXTURE_MAX_LOD,o.lodMaxClamp),void 0!==o.compareFunction&&(_.samplerParameteri(E,_.TEXTURE_COMPARE_MODE,_.COMPARE_REF_TO_TEXTURE),_.samplerParameteri(E,_.TEXTURE_COMPARE_FUNC,o.compareFunction));var c=null!==(i=o.maxAnisotropy)&&void 0!==i?i:1;c>1&&null!==a.device.EXT_texture_filter_anisotropic&&(_e(o.minFilter===D.BILINEAR&&o.magFilter===D.BILINEAR&&o.mipmapFilter===e.MipmapFilterMode.LINEAR),_.samplerParameterf(E,a.device.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT,c)),a.gl_sampler=E}else a.descriptor=o;return a}i(n,t),n.prototype.setTextureParameters=function(t,n,r){var i,o=this.device.gl,a=this.descriptor;this.isNPOT(n,r)?o.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_MIN_FILTER,e.GL.LINEAR):o.texParameteri(t,e.GL.TEXTURE_MIN_FILTER,ze(a.minFilter,a.mipmapFilter)),o.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_WRAP_S,Ye(a.addressModeU)),o.texParameteri(e.GL.TEXTURE_2D,e.GL.TEXTURE_WRAP_T,Ye(a.addressModeV)),o.texParameteri(t,e.GL.TEXTURE_MAG_FILTER,ze(a.magFilter,e.MipmapFilterMode.NO_MIP));var _=null!==(i=a.maxAnisotropy)&&void 0!==i?i:1;_>1&&null!==this.device.EXT_texture_filter_anisotropic&&(_e(a.minFilter===D.BILINEAR&&a.magFilter===D.BILINEAR&&a.mipmapFilter===e.MipmapFilterMode.LINEAR),o.texParameteri(t,this.device.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT,_))},n.prototype.destroy=function(){t.prototype.destroy.call(this),Ve(this.device.gl)&&this.device.gl.deleteSampler(this.gl_sampler)},n.prototype.isNPOT=function(e,t){return!ue(e)||!ue(t)}}(He),function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=g.RenderBundle,t.commands=[],t}i(t,e),t.prototype.push=function(e){this.commands.push(e)},t.prototype.replay=function(){this.commands.forEach((function(e){return e()}))}}(He);const Qe="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&Qe.decode();const qe=Array(128).fill(void 0);qe.push(void 0,null,!0,!1);"undefined"!=typeof TextEncoder&&new TextEncoder("utf-8");var Je,$e;function et(t){if(t===e.TextureDimension.TEXTURE_2D)return"2d";if(t===e.TextureDimension.TEXTURE_CUBE_MAP)return"cube";if(t===e.TextureDimension.TEXTURE_2D_ARRAY)return"2d-array";if(t===e.TextureDimension.TEXTURE_3D)return"3d";throw Error("whoops")}function tt(t){if(t===e.AddressMode.CLAMP_TO_EDGE)return"clamp-to-edge";if(t===e.AddressMode.REPEAT)return"repeat";if(t===e.AddressMode.MIRRORED_REPEAT)return"mirror-repeat";throw Error("whoops")}function nt(e){if(e===D.BILINEAR)return"linear";if(e===D.POINT)return"nearest";throw Error("whoops")}function rt(t){if(t===e.MipmapFilterMode.LINEAR)return"linear";if(t===e.MipmapFilterMode.NEAREST)return"nearest";if(t===e.MipmapFilterMode.NO_MIP)return"nearest";throw Error("whoops")}function it(e){return e.gpuBuffer}function ot(e){if(e===j.OcclusionConservative)return"occlusion";throw Error("whoops")}function at(t){if(t===e.CompareFunction.NEVER)return"never";if(t===e.CompareFunction.LESS)return"less";if(t===e.CompareFunction.EQUAL)return"equal";if(t===e.CompareFunction.LEQUAL)return"less-equal";if(t===e.CompareFunction.GREATER)return"greater";if(t===e.CompareFunction.NOTEQUAL)return"not-equal";if(t===e.CompareFunction.GEQUAL)return"greater-equal";if(t===e.CompareFunction.ALWAYS)return"always";throw Error("whoops")}function _t(t){if(t===e.VertexStepMode.VERTEX)return"vertex";if(t===e.VertexStepMode.INSTANCE)return"instance";throw Error("whoops")}function Et(t){if(t===e.Format.U8_R)return"uint8x2";if(t===e.Format.U8_RG)return"uint8x2";if(t===e.Format.U8_RGB)return"uint8x4";if(t===e.Format.U8_RGBA)return"uint8x4";if(t===e.Format.U8_RG_NORM)return"unorm8x2";if(t===e.Format.U8_RGBA_NORM)return"unorm8x4";if(t===e.Format.S8_RGB_NORM)return"snorm8x4";if(t===e.Format.S8_RGBA_NORM)return"snorm8x4";if(t===e.Format.U16_RG_NORM)return"unorm16x2";if(t===e.Format.U16_RGBA_NORM)return"unorm16x4";if(t===e.Format.S16_RG_NORM)return"snorm16x2";if(t===e.Format.S16_RGBA_NORM)return"snorm16x4";if(t===e.Format.S16_RG)return"uint16x2";if(t===e.Format.F16_RG)return"float16x2";if(t===e.Format.F16_RGBA)return"float16x4";if(t===e.Format.F32_R)return"float32";if(t===e.Format.F32_RG)return"float32x2";if(t===e.Format.F32_RGB)return"float32x3";if(t===e.Format.F32_RGBA)return"float32x4";throw"whoops"}function ct(t,n,r,i){switch(void 0===r&&(r=!1),t){case e.Format.S8_R:case e.Format.S8_R_NORM:case e.Format.S8_RG_NORM:case e.Format.S8_RGB_NORM:case e.Format.S8_RGBA_NORM:var o=(ArrayBuffer,new Int8Array(n));return i&&o.set(new Int8Array(i)),o;case e.Format.U8_R:case e.Format.U8_R_NORM:case e.Format.U8_RG:case e.Format.U8_RG_NORM:case e.Format.U8_RGB:case e.Format.U8_RGB_NORM:case e.Format.U8_RGB_SRGB:case e.Format.U8_RGBA:case e.Format.U8_RGBA_NORM:case e.Format.U8_RGBA_SRGB:var a=(ArrayBuffer,new Uint8Array(n));return i&&a.set(new Uint8Array(i)),a;case e.Format.S16_R:case e.Format.S16_RG:case e.Format.S16_RG_NORM:case e.Format.S16_RGB_NORM:case e.Format.S16_RGBA:case e.Format.S16_RGBA_NORM:var _=n instanceof ArrayBuffer?new Int16Array(n):new Int16Array(r?n/2:n);return i&&_.set(new Int16Array(i)),_;case e.Format.U16_R:case e.Format.U16_RGB:case e.Format.U16_RGBA_5551:case e.Format.U16_RGBA_NORM:case e.Format.U16_RG_NORM:case e.Format.U16_R_NORM:var E=n instanceof ArrayBuffer?new Uint16Array(n):new Uint16Array(r?n/2:n);return i&&E.set(new Uint16Array(i)),E;case e.Format.S32_R:var c=n instanceof ArrayBuffer?new Int32Array(n):new Int32Array(r?n/4:n);return i&&c.set(new Int32Array(i)),c;case e.Format.U32_R:case e.Format.U32_RG:var l=n instanceof ArrayBuffer?new Uint32Array(n):new Uint32Array(r?n/4:n);return i&&l.set(new Uint32Array(i)),l;case e.Format.F32_R:case e.Format.F32_RG:case e.Format.F32_RGB:case e.Format.F32_RGBA:var u=n instanceof ArrayBuffer?new Float32Array(n):new Float32Array(r?n/4:n);return i&&u.set(new Float32Array(i)),u}var s=(ArrayBuffer,new Uint8Array(n));return i&&s.set(new Uint8Array(i)),s}function lt(e){switch(e){case"r8unorm":case"r8snorm":case"r8uint":case"r8sint":return{width:1,height:1,length:1};case"r16uint":case"r16sint":case"r16float":case"rg8unorm":case"rg8snorm":case"rg8uint":case"rg8sint":case"depth16unorm":return{width:1,height:1,length:2};case"r32uint":case"r32sint":case"r32float":case"rg16uint":case"rg16sint":case"rg16float":case"rgba8unorm":case"rgba8unorm-srgb":case"rgba8snorm":case"rgba8uint":case"rgba8sint":case"bgra8unorm":case"bgra8unorm-srgb":case"rgb9e5ufloat":case"rgb10a2unorm":case"rg11b10ufloat":case"depth32float":default:return{width:1,height:1,length:4};case"rg32uint":case"rg32sint":case"rg32float":case"rgba16uint":case"rgba16sint":case"rgba16float":return{width:1,height:1,length:8};case"rgba32uint":case"rgba32sint":case"rgba32float":return{width:1,height:1,length:16};case"stencil8":throw Error("No fixed size for Stencil8 format!");case"depth24plus":throw Error("No fixed size for Depth24Plus format!");case"depth24plus-stencil8":throw Error("No fixed size for Depth24PlusStencil8 format!");case"depth32float-stencil8":return{width:1,height:1,length:5};case"bc7-rgba-unorm":case"bc7-rgba-unorm-srgb":case"bc6h-rgb-ufloat":case"bc6h-rgb-float":case"bc2-rgba-unorm":case"bc2-rgba-unorm-srgb":case"bc3-rgba-unorm":case"bc3-rgba-unorm-srgb":case"bc5-rg-unorm":case"bc5-rg-snorm":return{width:4,height:4,length:16};case"bc4-r-unorm":case"bc4-r-snorm":case"bc1-rgba-unorm":case"bc1-rgba-unorm-srgb":return{width:4,height:4,length:8}}}!function(e){e[e.COPY_SRC=1]="COPY_SRC",e[e.COPY_DST=2]="COPY_DST",e[e.TEXTURE_BINDING=4]="TEXTURE_BINDING",e[e.STORAGE_BINDING=8]="STORAGE_BINDING",e[e.STORAGE=8]="STORAGE",e[e.RENDER_ATTACHMENT=16]="RENDER_ATTACHMENT"}(Je||(Je={})),function(e){e[e.READ=1]="READ",e[e.WRITE=2]="WRITE"}($e||($e={}));var ut=function(e){function t(t){var n=t.id,r=t.device,i=e.call(this)||this;return i.id=n,i.device=r,i}return i(t,e),t.prototype.destroy=function(){},t}($);!function(e){function t(t){var n,r,i=t.descriptor,a=e.call(this,{id:t.id,device:t.device})||this;a.type=g.Bindings;var _=i.pipeline;_e(!!_);var E=i.uniformBufferBindings,c=i.storageBufferBindings,l=i.samplerBindings,u=i.storageTextureBindings;a.numUniformBuffers=(null==E?void 0:E.length)||0;var s=[[],[],[],[]],R=0;if(E&&E.length)for(var f=0;E.length>f;f++){var d=i.uniformBufferBindings[f],A=d.binding,T=d.size,p=d.offset,S={buffer:it(d.buffer),offset:null!=p?p:0,size:T};s[0].push({binding:null!=A?A:R++,resource:S})}if(l&&l.length){R=0;for(f=0;l.length>f;f++){var M=o(o({},l[f]),ve),N=null!==(A=i.samplerBindings[f]).texture?A.texture:a.device.getFallbackTexture(M);if(M.dimension=N.dimension,M.formatKind=ae(N.format),s[1].push({binding:null!==(n=A.textureBinding)&&void 0!==n?n:R++,resource:N.gpuTextureView}),-1!==A.samplerBinding){var v=null!==A.sampler?A.sampler:a.device.getFallbackSampler(M),h=v.gpuSampler;s[1].push({binding:null!==(r=A.samplerBinding)&&void 0!==r?r:R++,resource:h})}}}if(c&&c.length){R=0;for(f=0;c.length>f;f++){var I=i.storageBufferBindings[f];A=I.binding,T=I.size,p=I.offset,S={buffer:it(I.buffer),offset:null!=p?p:0,size:T};s[2].push({binding:null!=A?A:R++,resource:S})}}if(u&&u.length){R=0;for(f=0;u.length>f;f++){var m=i.storageTextureBindings[f];s[3].push({binding:null!=(A=m.binding)?A:R++,resource:(N=m.texture).gpuTextureView})}}var L=s.findLastIndex((function(e){return!!e.length}));return a.gpuBindGroup=s.map((function(e,t){return L>=t&&a.device.device.createBindGroup({layout:_.getBindGroupLayout(t),entries:e})})),a}i(t,e)}(ut),function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;r.type=g.Buffer;var i=n.usage,o=n.viewOrSize,a=!!(i&x.MAP_READ);r.usage=function(e){var t=0;return e&x.INDEX&&(t|=GPUBufferUsage.INDEX),e&x.VERTEX&&(t|=GPUBufferUsage.VERTEX),e&x.UNIFORM&&(t|=GPUBufferUsage.UNIFORM),e&x.STORAGE&&(t|=GPUBufferUsage.STORAGE),e&x.COPY_SRC&&(t|=GPUBufferUsage.COPY_SRC),e&x.INDIRECT&&(t|=GPUBufferUsage.INDIRECT),t|GPUBufferUsage.COPY_DST}(i),a&&(r.usage=x.MAP_READ|x.COPY_DST);var _=!d(o);(r.view=d(o)?null:o,r.size=d(o)?Re(o,4):Re(o.byteLength,4),d(o))?r.gpuBuffer=r.device.device.createBuffer({usage:r.usage,size:r.size,mappedAtCreation:!!a&&_}):(r.gpuBuffer=r.device.device.createBuffer({usage:r.usage,size:r.size,mappedAtCreation:!0}),new(o&&o.constructor||Float32Array)(r.gpuBuffer.getMappedRange()).set(o),r.gpuBuffer.unmap());return r}i(t,e),t.prototype.setSubData=function(e,t,n,r){void 0===n&&(n=0),void 0===r&&(r=0);var i=this.gpuBuffer,o=t.byteOffset+n,a=o+(r=Math.min(r=r||t.byteLength,this.size-e)),_=r+3&-4;if(_!==r){var E=new Uint8Array(t.buffer.slice(o,a));(t=new Uint8Array(_)).set(E),n=0,o=0,a=_,r=_}for(var c=15728640,l=0;a-(o+l)>c;)this.device.device.queue.writeBuffer(i,e+l,t.buffer,o+l,c),l+=c;this.device.device.queue.writeBuffer(i,e+l,t.buffer,o+l,r-l)},t.prototype.destroy=function(){e.prototype.destroy.call(this),this.gpuBuffer.destroy()}}(ut),function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;r.type=g.ComputePipeline,r.gpuComputePipeline=null,r.descriptor=n;var i=n.program.computeStage;if(null===i)return r;var a={layout:"auto",compute:o({},i)};return r.gpuComputePipeline=r.device.device.createComputePipeline(a),void 0!==r.name&&(r.gpuComputePipeline.label=r.name),r}i(t,e),t.prototype.getBindGroupLayout=function(e){return this.gpuComputePipeline.getBindGroupLayout(e)}}(ut),function(t){function n(n){var r,i,o,a,_=n.descriptor,E=t.call(this,{id:n.id,device:n.device})||this;E.type=g.InputLayout;var l=[];try{for(var u=c(_.vertexBufferDescriptors),s=u.next();!s.done;s=u.next()){var R=s.value,f=R.attributes;l.push({arrayStride:R.arrayStride,stepMode:_t(R.stepMode),attributes:[]});try{for(var d=(o=void 0,c(f)),A=d.next();!A.done;A=d.next()){var T=A.value,p=T.offset;l[l.length-1].attributes.push({shaderLocation:T.shaderLocation,format:Et(T.format),offset:p})}}catch(e){o={error:e}}finally{try{A&&!A.done&&(a=d.return)&&a.call(d)}finally{if(o)throw o.error}}}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=u.return)&&i.call(u)}finally{if(r)throw r.error}}return E.indexFormat=function(t){if(null!==t){if(t===e.Format.U16_R)return"uint16";if(t===e.Format.U32_R)return"uint32";throw Error("whoops")}}(_.indexBufferFormat),E.buffers=l,E}i(n,t)}(ut),function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;return r.type=g.Program,r.vertexStage=null,r.fragmentStage=null,r.computeStage=null,r.descriptor=n,n.vertex&&(r.vertexStage=r.createShaderStage(n.vertex,"vertex")),n.fragment&&(r.fragmentStage=r.createShaderStage(n.fragment,"fragment")),n.compute&&(r.computeStage=r.createShaderStage(n.compute,"compute")),r}i(t,e),t.prototype.setUniformsLegacy=function(e){},t.prototype.createShaderStage=function(e,t){var n,r,i=e.glsl,o=e.entryPoint,a=e.postprocess,_=e.wgsl;if(!_)try{_=this.device.glsl_compile(i,t,!1)}catch(e){throw console.error(e,i),Error("whoops")}var E=function(e){if(!_.includes(e))return"continue";_=(_=_.replace("var T_".concat(e,": texture_2d<f32>;"),"var T_".concat(e,": texture_depth_2d;"))).replace(RegExp("textureSample\\(T_".concat(e,"(.*)\\);$"),"gm"),(function(t,n){return"vec4<f32>(textureSample(T_".concat(e).concat(n,"), 0.0, 0.0, 0.0);")}))};try{for(var l=c(["u_TextureFramebufferDepth"]),u=l.next();!u.done;u=l.next()){E(u.value)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(r=l.return)&&r.call(l)}finally{if(n)throw n.error}}return a&&(_=a(_)),{module:this.device.device.createShaderModule({code:_}),entryPoint:o||"main"}}}(ut),function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;r.type=g.QueryPool;var i=n.elemCount;return r.querySet=r.device.device.createQuerySet({type:ot(n.type),count:i}),r.resolveBuffer=r.device.device.createBuffer({size:8*i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),r.cpuBuffer=r.device.device.createBuffer({size:8*i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),r.results=null,r}i(t,e),t.prototype.queryResultOcclusion=function(e){return null===this.results?null:this.results[e]!==BigInt(0)},t.prototype.destroy=function(){e.prototype.destroy.call(this),this.querySet.destroy(),this.resolveBuffer.destroy(),this.cpuBuffer.destroy()}}(ut),function(t){function n(e){var n=t.call(this,{id:e.id,device:e.device})||this;return n.type=g.Readback,n}i(n,t),n.prototype.readTexture=function(t,n,r,i,o,a,c,l){return void 0===c&&(c=0),_(this,void 0,void 0,(function(){var _,l,u,s,R,f,d;return E(this,(function(E){return 0,l=lt((_=t).gpuTextureformat),f=this.device.createBuffer({usage:x.STORAGE|x.MAP_READ|x.COPY_DST,hint:e.BufferFrequencyHint.STATIC,viewOrSize:R=(s=256*Math.ceil((u=Math.ceil(i/l.width)*l.length)/256))*o}),(d=this.device.device.createCommandEncoder()).copyTextureToBuffer({texture:_.gpuTexture,mipLevel:0,origin:{x:n,y:r,z:0}},{buffer:f.gpuBuffer,offset:0,bytesPerRow:s},{width:i,height:o,depthOrArrayLayers:1}),this.device.device.queue.submit([d.finish()]),[2,this.readBuffer(f,0,a.byteLength===R?a:null,c,R,_.format,!0,!1,u,s,o)]}))}))},n.prototype.readTextureSync=function(e,t,n,r,i,o,a,_){throw Error("ERROR_MSG_METHOD_NOT_IMPLEMENTED")},n.prototype.readBuffer=function(t,n,r,i,o,a,_,E,c,l,u){var s=this;void 0===n&&(n=0),void 0===r&&(r=null),void 0===o&&(o=0),void 0===a&&(a=e.Format.U8_RGB),void 0===_&&(_=!1),void 0===c&&(c=0),void 0===l&&(l=0),void 0===u&&(u=0);var R=t,f=o||R.size,d=r||R.view,A=d&&d.constructor&&d.constructor.BYTES_PER_ELEMENT||oe(a),T=R;if(!(R.usage&x.MAP_READ&&R.usage&x.COPY_DST)){var p=this.device.device.createCommandEncoder();T=this.device.createBuffer({usage:x.STORAGE|x.MAP_READ|x.COPY_DST,hint:e.BufferFrequencyHint.STATIC,viewOrSize:f}),p.copyBufferToBuffer(R.gpuBuffer,n,T.gpuBuffer,0,f),this.device.device.queue.submit([p.finish()])}return new Promise((function(e,t){T.gpuBuffer.mapAsync($e.READ,n,f).then((function(){var t=T.gpuBuffer.getMappedRange(n,f),r=d;if(_)r=null===r?ct(a,f,!0,t):ct(a,r.buffer,void 0,t);else if(null===r)switch(A){case 1:(r=new Uint8Array(f)).set(new Uint8Array(t));break;case 2:r=s.getHalfFloatAsFloatRGBAArrayBuffer(f/2,t);break;case 4:(r=new Float32Array(f/4)).set(new Float32Array(t))}else switch(A){case 1:(r=new Uint8Array(r.buffer)).set(new Uint8Array(t));break;case 2:r=s.getHalfFloatAsFloatRGBAArrayBuffer(f/2,t,d);break;case 4:var i=d&&d.constructor||Float32Array;(r=new i(r.buffer)).set(new i(t))}if(c!==l){1!==A||_||(c*=2,l*=2);for(var o=new Uint8Array(r.buffer),E=c,R=0,p=1;u>p;++p){R=p*l;for(var S=0;c>S;++S)o[E++]=o[R++]}r=0===A||_?new Uint8Array(o.buffer,0,E):new Float32Array(o.buffer,0,E/4)}T.gpuBuffer.unmap(),e(r)}),(function(e){return t(e)}))}))},n.prototype.getHalfFloatAsFloatRGBAArrayBuffer=function(e,t,n){n||(n=new Float32Array(e));for(var r,i,o,a,_=new Uint16Array(t);e--;)n[e]=(i=void 0,o=void 0,a=void 0,i=(32768&(r=_[e]))>>15,a=1023&r,0===(o=(31744&r)>>10)?(i?-1:1)*Math.pow(2,-14)*(a/1024):31==o?a?NaN:1/0*(i?-1:1):(i?-1:1)*Math.pow(2,o-15)*(1+a/1024));return n}}(ut),function(e){function t(t){var n=t.descriptor,r=e.call(this,{id:t.id,device:t.device})||this;return r.type=g.RenderPipeline,r.isCreatingAsync=!1,r.gpuRenderPipeline=null,r.descriptor=n,r.device.createRenderPipelineInternal(r,!1),r}i(t,e),t.prototype.getBindGroupLayout=function(e){return this.gpuRenderPipeline.getBindGroupLayout(e)}}(ut),function(t){function n(n){var r,i,o=n.descriptor,a=t.call(this,{id:n.id,device:n.device})||this;a.type=g.Sampler;var _=o.lodMinClamp,E=o.mipmapFilter===e.MipmapFilterMode.NO_MIP?o.lodMinClamp:o.lodMaxClamp,c=null!==(r=o.maxAnisotropy)&&void 0!==r?r:1;return c>1&&_e(o.minFilter===D.BILINEAR&&o.magFilter===D.BILINEAR&&o.mipmapFilter===e.MipmapFilterMode.LINEAR),a.gpuSampler=a.device.device.createSampler({addressModeU:tt(o.addressModeU),addressModeV:tt(o.addressModeV),addressModeW:tt(null!==(i=o.addressModeW)&&void 0!==i?i:o.addressModeU),lodMinClamp:_,lodMaxClamp:E,minFilter:nt(o.minFilter),magFilter:nt(o.magFilter),mipmapFilter:rt(o.mipmapFilter),compare:void 0!==o.compareFunction?at(o.compareFunction):void 0,maxAnisotropy:c}),a}i(n,t)}(ut),function(t){function n(n){var r=n.descriptor,i=n.skipCreate,o=n.sampleCount,a=t.call(this,{id:n.id,device:n.device})||this;a.type=g.Texture,a.flipY=!1;var _=r.format,E=r.dimension,c=r.width,l=r.height,u=r.depthOrArrayLayers,s=r.mipLevelCount,R=r.usage,f=r.pixelStore;return a.flipY=!!(null==f?void 0:f.unpackFlipY),a.device.createTextureShared({format:_,dimension:null!=E?E:e.TextureDimension.TEXTURE_2D,width:c,height:l,depthOrArrayLayers:null!=u?u:1,mipLevelCount:null!=s?s:1,usage:R,sampleCount:null!=o?o:1},a,i),a}i(n,t),n.prototype.textureFromImageBitmapOrCanvas=function(e,t,n){for(var r=t[0].width,i=t[0].height,o={size:{width:r,height:i,depthOrArrayLayers:n},format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT},a=e.createTexture(o),_=0;t.length>_;_++)e.queue.copyExternalImageToTexture({source:t[_],flipY:this.flipY},{texture:a,origin:[0,0,_]},[r,i]);return[a,r,i]},n.prototype.isImageBitmapOrCanvases=function(e){var t=e[0];return t instanceof ImageBitmap||t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas},n.prototype.isVideo=function(e){return e[0]instanceof HTMLVideoElement},n.prototype.setImageData=function(e,t){var n,r,i,o,a=this,_=this.device.device;if(this.isImageBitmapOrCanvases(e))r=(n=l(this.textureFromImageBitmapOrCanvas(_,e,this.depthOrArrayLayers),3))[0],i=n[1],o=n[2];else if(this.isVideo(e))r=_.importExternalTexture({source:e[0]});else{var E=lt(this.gpuTextureformat),c=Math.ceil(this.width/E.width)*E.length;e.forEach((function(e){_.queue.writeTexture({texture:a.gpuTexture},e,{bytesPerRow:c},{width:a.width,height:a.height})}))}this.width=i,this.height=o,r&&(this.gpuTexture=r),this.gpuTextureView=this.gpuTexture.createView({dimension:et(this.dimension)})},n.prototype.destroy=function(){t.prototype.destroy.call(this),this.gpuTexture.destroy()}}(ut),function(e){function t(t){var n=e.call(this,{id:t.id,device:t.device})||this;return n.type=g.RenderBundle,n.renderBundleEncoder=n.device.device.createRenderBundleEncoder({colorFormats:[n.device.swapChainFormat]}),n}i(t,e),t.prototype.finish=function(){this.renderBundle=this.renderBundleEncoder.finish()}}(ut);var st=function(r){function o(e,t){void 0===t&&(t={});var n,i,o=r.call(this,e,t)||this;return o.flipYMatrix=(n=T(),i=S(1,-1,1),n[0]=i[0],n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=i[1],n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=i[2],n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n),o.topology=o.createTopology(),o}return i(o,r),o.prototype.applyMa4Position=function(e,t){for(var r=h(),i=0;t.byteLength/4>i;i+=3)r[0]=t[i],r[1]=t[i+1],r[2]=t[i+2],r[3]=1,I(r,r,e),t[i]=r[0],t[i+1]=r[1],t[i+2]=r[2];this.updateVertexBuffer(n.VertexAttributeBufferIndex.POSITION,n.VertexAttributeLocation.POSITION,0,new Uint8Array(t.buffer))},o.prototype.applyMa4Normal=function(e,t){var r,i,o=h(),a=((r=T())[0]=(i=e)[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],r);!function(e,t){var n=t[0],r=t[1],i=t[2],o=t[3],a=t[4],_=t[5],E=t[6],c=t[7],l=t[8],u=t[9],s=t[10],R=t[11],f=t[12],d=t[13],A=t[14],T=t[15],p=n*_-r*a,S=n*E-i*a,M=n*c-o*a,N=r*E-i*_,v=r*c-o*_,h=i*c-o*E,I=l*d-u*f,m=l*A-s*f,L=l*T-R*f,g=u*A-s*d,C=u*T-R*d,O=s*T-R*A,F=p*O-S*C+M*g+N*L-v*m+h*I;F&&(e[0]=(_*O-E*C+c*g)*(F=1/F),e[1]=(i*C-r*O-o*g)*F,e[2]=(d*h-A*v+T*N)*F,e[3]=(s*v-u*h-R*N)*F,e[4]=(E*L-a*O-c*m)*F,e[5]=(n*O-i*L+o*m)*F,e[6]=(A*M-f*h-T*S)*F,e[7]=(l*h-s*M+R*S)*F,e[8]=(a*C-_*L+c*I)*F,e[9]=(r*L-n*C-o*I)*F,e[10]=(f*v-d*M+T*p)*F,e[11]=(u*M-l*v-R*p)*F,e[12]=(_*m-a*g-E*I)*F,e[13]=(n*g-r*m+i*I)*F,e[14]=(d*S-f*N-A*p)*F,e[15]=(l*N-u*S+s*p)*F)}(a,a),function(e,t){if(e===t){var n=t[1],r=t[2],i=t[3],o=t[6],a=t[7],_=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=n,e[6]=t[9],e[7]=t[13],e[8]=r,e[9]=o,e[11]=t[14],e[12]=i,e[13]=a,e[14]=_}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15]}(a,a);for(var _=0;t.byteLength/4>_;_+=3)o[0]=t[_],o[1]=t[_+1],o[2]=t[_+2],o[3]=1,I(o,o,a),t[_]=o[0],t[_+1]=o[1],t[_+2]=o[2];this.updateVertexBuffer(n.VertexAttributeBufferIndex.NORMAL,n.VertexAttributeLocation.NORMAL,0,new Uint8Array(t.buffer))},o.prototype.rebuildPosition=function(){this.topology=this.createTopology();var e=Float32Array.from(this.topology.positions);this.applyMa4Position(this.flipYMatrix,e),this.dirty=!0},o.prototype.applyMat4=function(e){this.applyMa4Position(e,this.vertices[n.VertexAttributeBufferIndex.POSITION]),this.applyMa4Normal(e,this.vertices[n.VertexAttributeBufferIndex.NORMAL])},o.prototype.computeBoundingBox=function(){for(var e=this.topology.positions,n=-1/0,r=-1/0,i=-1/0,o=1/0,a=1/0,_=1/0,E=0;e.length>E;E+=3){var c=e[E],l=e[E+1],u=e[E+2];n=Math.max(n,c),r=Math.max(r,l),i=Math.max(i,u),o=Math.min(o,c),a=Math.min(a,l),_=Math.min(_,u)}var s=new t.AABB;return s.setMinMax([o,a,_],[n,r,i]),s},o.prototype.build=function(){var t=this.topology,r=t.indices,i=t.positions,o=t.normals,a=t.uvs;this.setIndexBuffer(new Uint32Array(r)),this.vertexCount=r.length,this.setVertexBuffer({bufferIndex:n.VertexAttributeBufferIndex.POSITION,byteStride:12,stepMode:e.VertexStepMode.VERTEX,attributes:[{format:e.Format.F32_RGB,bufferByteOffset:0,location:n.VertexAttributeLocation.POSITION}],data:Float32Array.from(i)}),this.setVertexBuffer({bufferIndex:n.VertexAttributeBufferIndex.NORMAL,byteStride:12,stepMode:e.VertexStepMode.VERTEX,attributes:[{format:e.Format.F32_RGB,bufferByteOffset:0,location:n.VertexAttributeLocation.NORMAL}],data:Float32Array.from(o)}),this.setVertexBuffer({bufferIndex:n.VertexAttributeBufferIndex.UV,byteStride:8,stepMode:e.VertexStepMode.VERTEX,attributes:[{format:e.Format.F32_RG,bufferByteOffset:0,location:n.VertexAttributeLocation.UV}],data:Float32Array.from(a)}),this.applyMat4(this.flipYMatrix),this.dirty=!0},o}(n.BufferGeometry),Rt=4/64,ft=.875;function dt(e,t,n,r,i,o){var a,_,E,c,l,u,s,R,f,d,A,T,h,I,m,L,g,C,O,F,P,B,U,D,G,y,x,b,X,H=p(),V=p(),w=p(),W=[],k=[],Y=[],z=[],K=[];if(n>0)for(a=0;r>=a;a++)for(_=0;i>=_;_++){N(H,f=S((h=Math.sin(A=_/i*2*Math.PI-Math.PI))*e,-n/2,(T=Math.cos(A))*e),R=S(h*t,n/2,T*t),a/r),M(V,v(V,R,f)),d=S(T,0,-h),M(w,(D=void 0,G=void 0,y=void 0,x=void 0,b=void 0,X=void 0,D=(B=d)[0],x=(U=V)[0],(P=w)[0]=(G=B[1])*(X=U[2])-(y=B[2])*(b=U[1]),P[1]=y*x-D*X,P[2]=D*b-G*x,P)),W.push(H[0],H[1],H[2]),k.push(w[0],w[1],w[2]),Y.push(u=_/i,1-(s=a/r));var j=s;s=u,u=j,z.push(u=(u/=3)*ft+Rt,1-(s=s*ft+Rt)),r>a&&i>_&&(O=(a+1)*(i+1)+(_+1),K.push(L=a*(i+1)+_,g=a*(i+1)+(_+1),C=(a+1)*(i+1)+_),K.push(g,O,C))}if(o){var Z=void 0,Q=void 0,q=Math.floor(i/2),J=i,$=n/2;for(Z=0;q>=Z;Z++)for(h=Math.sin(A=Z*Math.PI*.5/q),T=Math.cos(A),Q=0;J>=Q;Q++)m=Math.sin(I=2*Q*Math.PI/J-Math.PI/2),u=1-Q/J,s=1-Z/q,W.push((E=Math.cos(I)*h)*t,(c=T)*t+$,(l=m*h)*t),k.push(E,c,l),Y.push(u,1-s),u=(u/=3)*ft+Rt,z.push(u+=1/3,1-(s=(s/=3)*ft+Rt));for(F=(r+1)*(i+1),Z=0;q>Z;++Z)for(Q=0;J>Q;++Q)K.push(F+(L=Z*(J+1)+Q)+1,F+(g=L+J+1),F+L),K.push(F+L+1,F+g+1,F+g);for(Z=0;q>=Z;Z++)for(h=Math.sin(A=.5*Math.PI+Z*Math.PI*.5/q),T=Math.cos(A),Q=0;J>=Q;Q++)m=Math.sin(I=2*Q*Math.PI/J-Math.PI/2),u=1-Q/J,s=1-Z/q,W.push((E=Math.cos(I)*h)*t,(c=T)*t-$,(l=m*h)*t),k.push(E,c,l),Y.push(u,1-s),u=(u/=3)*ft+Rt,z.push(u+=2/3,1-(s=(s/=3)*ft+Rt));for(F=(r+1)*(i+1)+(J+1)*(q+1),Z=0;q>Z;++Z)for(Q=0;J>Q;++Q)K.push(F+(L=Z*(J+1)+Q)+1,F+(g=L+J+1),F+L),K.push(F+L+1,F+g+1,F+g)}else{if(F=(r+1)*(i+1),e>0)for(a=0;i>a;a++)c=-n/2,u=1-((E=Math.sin(A=a/i*2*Math.PI))+1)/2,s=((l=Math.cos(A))+1)/2,W.push(E*e,c,l*e),k.push(0,-1,0),Y.push(u,1-s),u=(u/=3)*ft+Rt,z.push(u+=1/3,1-(s=(s/=3)*ft+Rt)),a>1&&K.push(F,F+a,F+a-1);if(F+=i,t>0)for(a=0;i>a;a++)c=n/2,u=1-((E=Math.sin(A=a/i*2*Math.PI))+1)/2,s=((l=Math.cos(A))+1)/2,W.push(E*t,c,l*t),k.push(0,1,0),Y.push(u,1-s),u=(u/=3)*ft+Rt,z.push(u+=2/3,1-(s=(s/=3)*ft+Rt)),a>1&&K.push(F,F+a-1,F+a)}return{positions:W,normals:k,uvs:Y,uvs1:z,indices:K}}var At,Tt=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({width:1,height:1,depth:1,widthSegments:1,heightSegments:1,depthSegments:1},n))||this}return i(t,e),Object.defineProperty(t.prototype,"width",{get:function(){return this.props.width},set:function(e){this.props.width!==e&&(this.props.width=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.props.height},set:function(e){this.props.height!==e&&(this.props.height=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depth",{get:function(){return this.props.depth},set:function(e){this.props.depth!==e&&(this.props.depth=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"widthSegments",{get:function(){return this.props.widthSegments},set:function(e){this.props.widthSegments!==e&&(this.props.widthSegments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"heightSegments",{get:function(){return this.props.heightSegments},set:function(e){this.props.heightSegments!==e&&(this.props.heightSegments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depthSegments",{get:function(){return this.props.depthSegments},set:function(e){this.props.depthSegments!==e&&(this.props.depthSegments=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e=this.props,t=e.widthSegments,n=e.heightSegments,r=e.depthSegments,i=e.height,o=e.width,a=e.depth,_=void 0===t?1:t,E=void 0===n?1:n,c=void 0===r?1:r,l=(void 0===o?1:o)/2,u=(void 0===i?1:i)/2,s=(void 0===a?1:a)/2,R=[S(-l,-u,s),S(l,-u,s),S(l,u,s),S(-l,u,s),S(l,-u,-s),S(-l,-u,-s),S(-l,u,-s),S(l,u,-s)],f=[[0,1,3],[4,5,7],[3,2,6],[1,0,4],[1,4,2],[5,0,6]],d=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],A=1,T=2,M=3,h=4,I=5,m=[],L=[],g=[],C=[],O=[],F=0,P=function(e,t,n){var r,i,o,a,_,E,c;for(o=0;t>=o;o++)for(a=0;n>=a;a++){var l=p(),u=p(),s=p(),A=p();N(l,R[f[e][0]],R[f[e][1]],o/t),N(u,R[f[e][0]],R[f[e][2]],a/n),v(s,u,R[f[e][0]]),(_=A)[0]=(E=l)[0]+(c=s)[0],_[1]=E[1]+c[1],_[2]=E[2]+c[2],r=o/t,i=a/n,m.push(A[0],A[1],A[2]),L.push(d[e][0],d[e][1],d[e][2]),g.push(r,1-i),r=(r/=3)*ft+Rt,i=(i/=3)*ft+Rt,C.push(r+=e%3/3,1-(i+=Math.floor(e/3)/3)),t>o&&n>a&&(O.push(F+n+1,F+1,F),O.push(F+n+1,F+n+2,F+1)),F++}};return P(0,_,E),P(A,_,E),P(T,_,c),P(M,_,c),P(h,c,E),P(I,c,E),{indices:O,positions:m,normals:L,uvs:g,uv1s:C}},t}(st),pt=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({radius:.5,latitudeBands:16,longitudeBands:16},n))||this}return i(t,e),Object.defineProperty(t.prototype,"radius",{get:function(){return this.props.radius},set:function(e){this.props.radius!==e&&(this.props.radius=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"latitudeBands",{get:function(){return this.props.latitudeBands},set:function(e){this.props.latitudeBands!==e&&(this.props.latitudeBands=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"longitudeBands",{get:function(){return this.props.longitudeBands},set:function(e){this.props.longitudeBands!==e&&(this.props.longitudeBands=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e,t,n,r,i,o,a,_,E,c,l,u,s,R,f=this.props,d=f.radius,A=void 0===d?.5:d,T=f.latitudeBands,p=void 0===T?16:T,S=f.longitudeBands,M=void 0===S?16:S,N=[],v=[],h=[],I=[];for(t=0;p>=t;t++)for(r=Math.sin(n=t*Math.PI/p),i=Math.cos(n),e=0;M>=e;e++)a=Math.sin(o=2*e*Math.PI/M-Math.PI/2),s=1-e/M,R=1-t/p,N.push((c=Math.cos(o)*r)*A,(l=i)*A,(u=a*r)*A),v.push(c,l,u),h.push(s,1-R);for(t=0;p>t;++t)for(e=0;M>e;++e)I.push((_=t*(M+1)+e)+1,E=_+M+1,_),I.push(_+1,E+1,E);return{indices:I,positions:N,normals:v,uvs:h,uv1s:h}},t}(st),St=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({tubeRadius:.2,ringRadius:.3,segments:30,sides:20},n))||this}return i(t,e),Object.defineProperty(t.prototype,"tubeRadius",{get:function(){return this.props.tubeRadius},set:function(e){this.props.tubeRadius!==e&&(this.props.tubeRadius=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"ringRadius",{get:function(){return this.props.ringRadius},set:function(e){this.props.ringRadius!==e&&(this.props.ringRadius=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"segments",{get:function(){return this.props.segments},set:function(e){this.props.segments!==e&&(this.props.segments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"sides",{get:function(){return this.props.sides},set:function(e){this.props.sides!==e&&(this.props.sides=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e,t,n,r,i,o,a,_,E,c,l=this.props,u=l.tubeRadius,s=l.ringRadius,R=l.segments,f=void 0===R?30:R,d=l.sides,A=void 0===d?20:d,T=void 0===u?.2:u,p=void 0===s?.3:s,S=[],M=[],N=[],v=[];for(E=0;A>=E;E++)for(c=0;f>=c;c++)if(e=Math.cos(2*Math.PI*c/f)*(p+T*Math.cos(2*Math.PI*E/A)),t=Math.sin(2*Math.PI*E/A)*T,n=Math.sin(2*Math.PI*c/f)*(p+T*Math.cos(2*Math.PI*E/A)),r=Math.cos(2*Math.PI*c/f)*Math.cos(2*Math.PI*E/A),i=Math.sin(2*Math.PI*E/A),o=Math.sin(2*Math.PI*c/f)*Math.cos(2*Math.PI*E/A),a=E/A,_=1-c/f,S.push(e,t,n),M.push(r,i,o),N.push(a,1-_),A>E&&f>c){var h=(E+1)*(f+1)+c,I=E*(f+1)+(c+1),m=(E+1)*(f+1)+(c+1);v.push(E*(f+1)+c,h,I),v.push(h,m,I)}return{indices:v,positions:S,normals:M,uvs:N,uv1s:N}},t}(st),Mt=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({width:1,depth:1,widthSegments:5,depthSegments:5},n))||this}return i(t,e),Object.defineProperty(t.prototype,"width",{get:function(){return this.props.width},set:function(e){this.props.width!==e&&(this.props.width=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depth",{get:function(){return this.props.depth},set:function(e){this.props.depth!==e&&(this.props.depth=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"widthSegments",{get:function(){return this.props.widthSegments},set:function(e){this.props.widthSegments!==e&&(this.props.widthSegments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"depthSegments",{get:function(){return this.props.depthSegments},set:function(e){this.props.depthSegments!==e&&(this.props.depthSegments=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e,t,n,r,i=[],o=[],a=[],_=[],E=this.props,c=E.widthSegments,l=E.depthSegments,u=E.width,s=E.depth,R=(void 0===u?1:u)/2,f=(void 0===s?1:s)/2,d=void 0===c?5:c,A=void 0===l?5:l,T=0;for(e=0;d>=e;e++)for(t=0;A>=t;t++)0,n=e/d,r=t/A,i.push(2*R*e/d-R,0,-(2*f*t/A-f)),o.push(0,1,0),a.push(n,1-r),d>e&&A>t&&(_.push(T+A+1,T+1,T),_.push(T+A+1,T+A+2,T+1)),T++;return{indices:_,positions:i,normals:o,uvs:a,uv1s:a}},t}(st),Nt=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({radius:.5,height:1,heightSegments:5,capSegments:20},n))||this}return i(t,e),Object.defineProperty(t.prototype,"radius",{get:function(){return this.props.radius},set:function(e){this.props.radius!==e&&(this.props.radius=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.props.height},set:function(e){this.props.height!==e&&(this.props.height=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"heightSegments",{get:function(){return this.props.heightSegments},set:function(e){this.props.heightSegments!==e&&(this.props.heightSegments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"capSegments",{get:function(){return this.props.capSegments},set:function(e){this.props.capSegments!==e&&(this.props.capSegments=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e=this.props,t=e.radius,n=dt(t,t,e.height,e.heightSegments,e.capSegments,!1);return{indices:n.indices,positions:n.positions,normals:n.normals,uvs:n.uvs,uv1s:n.uvs1}},t}(st),vt=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({baseRadius:.5,peakRadius:0,height:1,heightSegments:5,capSegments:18},n))||this}return i(t,e),Object.defineProperty(t.prototype,"baseRadius",{get:function(){return this.props.baseRadius},set:function(e){this.props.baseRadius!==e&&(this.props.baseRadius=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"peakRadius",{get:function(){return this.props.peakRadius},set:function(e){this.props.peakRadius!==e&&(this.props.peakRadius=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.props.height},set:function(e){this.props.height!==e&&(this.props.height=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"heightSegments",{get:function(){return this.props.heightSegments},set:function(e){this.props.heightSegments!==e&&(this.props.heightSegments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"capSegments",{get:function(){return this.props.capSegments},set:function(e){this.props.capSegments!==e&&(this.props.capSegments=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e=this.props,t=dt(e.baseRadius,e.peakRadius,e.height,e.heightSegments,e.capSegments,!1);return{indices:t.indices,positions:t.positions,normals:t.normals,uvs:t.uvs,uv1s:t.uvs1}},t}(st),ht=function(e){function t(t,n){return void 0===n&&(n={}),e.call(this,t,o({radius:.5,height:1,heightSegments:1,sides:20},n))||this}return i(t,e),Object.defineProperty(t.prototype,"radius",{get:function(){return this.props.radius},set:function(e){this.props.radius!==e&&(this.props.radius=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.props.height},set:function(e){this.props.height!==e&&(this.props.height=e,this.rebuildPosition())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"heightSegments",{get:function(){return this.props.heightSegments},set:function(e){this.props.heightSegments!==e&&(this.props.heightSegments=e,this.build())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"sides",{get:function(){return this.props.sides},set:function(e){this.props.sides!==e&&(this.props.sides=e,this.build())},enumerable:!1,configurable:!0}),t.prototype.createTopology=function(){var e=this.props,t=e.radius,n=dt(t,t,e.height-2*t,e.heightSegments,e.sides,!0);return{indices:n.indices,positions:n.positions,normals:n.normals,uvs:n.uvs,uv1s:n.uvs1}},t}(st),It=function(e){function n(t){void 0===t&&(t={});var n=this,r=t.style,i=a(t,["style"]);return(n=e.call(this,o({style:o({fill:"black"},r)},i))||this).define="NUM_AMBIENT_LIGHTS",n.order=-1,n}return i(n,e),n.prototype.uploadUBO=function(e,n){var r=this.parsedStyle.fill;t.isCSSRGB(r)&&e.push({name:"u_AmbientLightColor",value:[Number(r.r)/255,Number(r.g)/255,Number(r.b)/255]})},n}(n.Light),mt=function(e){function n(t){void 0===t&&(t={});var n=this,r=t.style,i=a(t,["style"]);return(n=e.call(this,o({style:o({direction:S(0,-1,0)},r)},i))||this).define="NUM_DIR_LIGHTS",n.order=10,n}return i(n,e),n.prototype.getUniformWordCount=function(){return 8},n.prototype.uploadUBO=function(e,n){var r=this.parsedStyle,i=r.fill,o=r.direction,a=r.intensity;if(t.isCSSRGB(i)){var _=[Number(i.r)/255,Number(i.g)/255,Number(i.b)/255];e.push({name:"directionalLights[".concat(n,"].direction"),value:o}),e.push({name:"directionalLights[".concat(n,"].intensity"),value:a}),e.push({name:"directionalLights[".concat(n,"].color"),value:_})}},n}(n.Light);!function(e){e.MAP="u_Map",e.PLACE_HOLDER="u_Placeholder"}(At||(At={}));var Lt,gt=function(t){function n(n,r){var i,a=t.call(this,n,o({vertexShader:"#define GLSLIFY 1\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  vec4 u_Placeholder;\n};\n\nlayout(location = MODEL_MATRIX0) in vec4 a_ModelMatrix0;\nlayout(location = MODEL_MATRIX1) in vec4 a_ModelMatrix1;\nlayout(location = MODEL_MATRIX2) in vec4 a_ModelMatrix2;\nlayout(location = MODEL_MATRIX3) in vec4 a_ModelMatrix3;\nlayout(location = PACKED_COLOR) in vec4 a_PackedColor;\nlayout(location = PACKED_STYLE1) in vec4 a_StylePacked1;\nlayout(location = PACKED_STYLE2) in vec4 a_StylePacked2;\nlayout(location = PICKING_COLOR) in vec4 a_PickingColor;\n\nout vec4 v_PickingResult;\nout vec4 v_Color;\nout vec4 v_StrokeColor;\nout vec4 v_StylePacked1;\nout vec4 v_StylePacked2;\n\n#define COLOR_SCALE 1. / 255.\nvoid setPickingColor(vec3 pickingColor) {\n  v_PickingResult.rgb = pickingColor * COLOR_SCALE;\n}\n\nvec2 unpack_float(const float packedValue) {\n  int packedIntValue = int(packedValue);\n  int v0 = packedIntValue / 256;\n  return vec2(v0, packedIntValue - v0 * 256);\n}\nvec4 decode_color(const vec2 encodedColor) {\n  return vec4(\n    unpack_float(encodedColor[0]) / 255.0,\n    unpack_float(encodedColor[1]) / 255.0\n  );\n}\nvec4 project(vec4 pos, mat4 pm, mat4 vm, mat4 mm) {\n  return pm * vm * mm * pos;\n}\n\nlayout(location = POSITION) in vec3 a_Position;\n\n#ifdef USE_UV\n  layout(location = UV) in vec2 a_Uv;\n  out vec2 v_Uv;\n#endif\n\n#ifdef USE_WIREFRAME\n  layout(location = BARYCENTRIC) in vec3 a_Barycentric;\n  out vec3 v_Barycentric;\n#endif\n\nvoid main() {\n  // WGSL will remove unused uniforms.\n  float a = u_Placeholder.x;\n\n  vec4 a_Color = decode_color(a_PackedColor.xy);\nvec4 a_StrokeColor = decode_color(a_PackedColor.zw);\n\nmat4 u_ModelMatrix = mat4(a_ModelMatrix0, a_ModelMatrix1, a_ModelMatrix2, a_ModelMatrix3);\nvec4 u_StrokeColor = a_StrokeColor;\nfloat u_Opacity = a_StylePacked1.x;\nfloat u_FillOpacity = a_StylePacked1.y;\nfloat u_StrokeOpacity = a_StylePacked1.z;\nfloat u_StrokeWidth = a_StylePacked1.w;\nfloat u_ZIndex = a_PickingColor.w;\nvec2 u_Anchor = a_StylePacked2.yz;\nfloat u_IncreasedLineWidthForHitTesting = a_StylePacked2.w;\n\nsetPickingColor(a_PickingColor.xyz);\n\nv_Color = a_Color;\nv_StrokeColor = a_StrokeColor;\nv_StylePacked1 = a_StylePacked1;\nv_StylePacked2 = a_StylePacked2;\n\n// #ifdef CLIPSPACE_NEAR_ZERO\n//     gl_Position.z = (gl_Position.z + gl_Position.w) * 0.5;\n// #endif\n\n  gl_Position = project(vec4(a_Position, 1.0), u_ProjectionMatrix, u_ViewMatrix, u_ModelMatrix);\n\n  #ifdef USE_UV\n  v_Uv = a_Uv;\n#endif\n\n  #ifdef USE_WIREFRAME\n  v_Barycentric = a_Barycentric;\n#endif\n\n}",fragmentShader:"#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n  #define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( float x ) { return x*x; }\nfloat pow3( float x ) { return x*x*x; }\nfloat pow4( float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( vec2 uv ) {\n  const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n  highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n  return fract( sin( sn ) * c );\n}\n\nmat3 transposeMat3(mat3 inMatrix) {\n  vec3 i0 = inMatrix[0];\n  vec3 i1 = inMatrix[1];\n  vec3 i2 = inMatrix[2];\n\n  mat3 outMatrix = mat3(\n    vec3(i0.x, i1.x, i2.x),\n    vec3(i0.y, i1.y, i2.y),\n    vec3(i0.z, i1.z, i2.z)\n    );\n\n  return outMatrix;\n}\n\n// https://github.com/glslify/glsl-inverse/blob/master/index.glsl\nmat3 inverseMat3(mat3 inMatrix) {\n  float a00 = inMatrix[0][0], a01 = inMatrix[0][1], a02 = inMatrix[0][2];\n  float a10 = inMatrix[1][0], a11 = inMatrix[1][1], a12 = inMatrix[1][2];\n  float a20 = inMatrix[2][0], a21 = inMatrix[2][1], a22 = inMatrix[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n          b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n          b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nstruct DirectionalLight {\n  vec3 direction;\n  float intensity;\n  vec3 color;\n};\n\nstruct IncidentLight {\n  vec3 color;\n  vec3 direction;\n  bool visible;\n};\n\nstruct ReflectedLight {\n  vec3 directDiffuse;\n  vec3 directSpecular;\n  vec3 indirectDiffuse;\n  vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n  vec3 position;\n  vec3 normal;\n  vec3 viewDir;\n};\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  vec4 u_Placeholder;\n};\n\nin vec4 v_PickingResult;\nin vec4 v_Color;\nin vec4 v_StrokeColor;\nin vec4 v_StylePacked1;\nin vec4 v_StylePacked2;\n#ifdef USE_UV\n  in vec2 v_Uv;\n#endif\n#ifdef USE_MAP\n  uniform sampler2D u_Map;\n#endif\n#ifdef USE_WIREFRAME\n  in vec3 v_Barycentric;\n\n  float edgeFactor() {\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * u_WireframeLineWidth, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n  }\n#endif\n\n#ifdef USE_FOG\n  #define FOGMODE_NONE 0.\n  #define FOGMODE_EXP 1.\n  #define FOGMODE_EXP2 2.\n  #define FOGMODE_LINEAR 3.\n\n  // in float v_FogDepth;\n\n  float dBlendModeFogFactor = 1.0;\n\n  vec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    // float depth = v_FogDepth;\n    float fogFactor;\n    float fogStart = u_FogInfos.y;\n    float fogEnd = u_FogInfos.z;\n    float fogDensity = u_FogInfos.w;\n\n    if (u_FogInfos.x == FOGMODE_NONE) {\n      fogFactor = 1.0;\n    } else if (u_FogInfos.x == FOGMODE_EXP) {\n      fogFactor = exp(-depth * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_EXP2) {\n      fogFactor = exp(-depth * depth * fogDensity * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_LINEAR) {\n      fogFactor = (fogEnd - depth) / (fogEnd - fogStart);\n    }\n\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    return mix(u_FogColor * dBlendModeFogFactor, color, fogFactor);\n  }\n#endif\n\nout vec4 outputColor;\n\nvoid main() {\n  vec4 u_Color = v_Color;\nvec4 u_StrokeColor = v_StrokeColor;\nfloat u_Opacity = v_StylePacked1.x;\nfloat u_FillOpacity = v_StylePacked1.y;\nfloat u_StrokeOpacity = v_StylePacked1.z;\nfloat u_StrokeWidth = v_StylePacked1.w;\nfloat u_Visible = v_StylePacked2.x;\nvec3 u_PickingColor = v_PickingResult.xyz;\n\nif (u_Visible < 0.5) {\n    discard;\n}\n  #ifdef USE_MAP\n  #ifdef USE_PATTERN\n    vec4 texelColor = texture(SAMPLER_2D(u_Map), v_Uv);\n    u_Color = texelColor;\n  #else\n    vec4 texelColor = texture(SAMPLER_2D(u_Map), v_Uv);\n    u_Color = texelColor;\n  #endif\n#endif\n\n  if (u_IsPicking > 0.5) {\n    if (u_PickingColor.x == 0.0 && u_PickingColor.y == 0.0 && u_PickingColor.z == 0.0) {\n      discard;\n    }\n    outputColor = vec4(u_PickingColor, 1.0);\n  } else {\n    outputColor = u_Color;\n    outputColor.a = outputColor.a * u_Opacity;\n    vec4 diffuseColor = outputColor;\n\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n    reflectedLight.indirectDiffuse += vec3( 1.0 );\n    reflectedLight.indirectDiffuse *= outputColor.rgb;\n\n    vec3 outgoingLight = reflectedLight.indirectDiffuse;\n    \n    outputColor = vec4(outgoingLight, diffuseColor.a);\n\n    #ifdef USE_WIREFRAME\n  vec3 color = mix(outputColor.xyz, u_WireframeLineColor, (1.0 - edgeFactor()));\n  outputColor.xyz = color;\n#endif\n    #ifdef USE_FOG\n  outputColor.rgb = addFog(outputColor.rgb);\n#endif\n  }\n}",cullMode:e.CullMode.BACK},r))||this;a.defines=o(o({},a.defines),{USE_UV:!0,USE_MAP:!1,USE_WIREFRAME:!1,USE_FOG:!1,USE_LIGHT:!1});var _=r||{},E=_.map,c=_.wireframe;return E&&(a.map=E),a.wireframe=c,a.setUniforms(((i={})[At.PLACE_HOLDER]=[0,0,0,0],i)),a}return i(n,t),Object.defineProperty(n.prototype,"map",{get:function(){return this.props.map},set:function(e){var t;this.props.map!==e&&(this.props.map=e,this.programDirty=!0),this.setUniforms(((t={})[At.MAP]=e,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"aoMap",{get:function(){return this.props.aoMap},set:function(e){this.props.aoMap=e},enumerable:!1,configurable:!0}),n}(n.Material);!function(e){e.EMISSIVE="u_Emissive",e.SHININESS="u_Shininess",e.SPECULAR="u_Specular",e.BUMP_SCALE="u_BumpScale",e.SPECULAR_MAP="u_SpecularMap",e.BUMP_MAP="u_BumpMap"}(Lt||(Lt={}));var Ct,Ot=function(e){function n(n,r){var i,a=e.call(this,n,o({vertexShader:"#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n  #define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( float x ) { return x*x; }\nfloat pow3( float x ) { return x*x*x; }\nfloat pow4( float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( vec2 uv ) {\n  const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n  highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n  return fract( sin( sn ) * c );\n}\n\nmat3 transposeMat3(mat3 inMatrix) {\n  vec3 i0 = inMatrix[0];\n  vec3 i1 = inMatrix[1];\n  vec3 i2 = inMatrix[2];\n\n  mat3 outMatrix = mat3(\n    vec3(i0.x, i1.x, i2.x),\n    vec3(i0.y, i1.y, i2.y),\n    vec3(i0.z, i1.z, i2.z)\n    );\n\n  return outMatrix;\n}\n\n// https://github.com/glslify/glsl-inverse/blob/master/index.glsl\nmat3 inverseMat3(mat3 inMatrix) {\n  float a00 = inMatrix[0][0], a01 = inMatrix[0][1], a02 = inMatrix[0][2];\n  float a10 = inMatrix[1][0], a11 = inMatrix[1][1], a12 = inMatrix[1][2];\n  float a20 = inMatrix[2][0], a21 = inMatrix[2][1], a22 = inMatrix[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n          b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n          b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nstruct DirectionalLight {\n  vec3 direction;\n  float intensity;\n  vec3 color;\n};\n\nstruct IncidentLight {\n  vec3 color;\n  vec3 direction;\n  bool visible;\n};\n\nstruct ReflectedLight {\n  vec3 directDiffuse;\n  vec3 directSpecular;\n  vec3 indirectDiffuse;\n  vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n  vec3 position;\n  vec3 normal;\n  vec3 viewDir;\n};\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  vec3 u_Emissive;\n  float u_Shininess;\n  vec3 u_Specular;\n\n  #ifdef USE_LIGHT\n    #ifdef USE_BUMPMAP\n      float u_BumpScale;\n    #endif\n\n    #ifdef NUM_AMBIENT_LIGHTS\n      vec3 u_AmbientLightColor;\n    #endif\n\n    #ifdef NUM_DIR_LIGHTS\n      DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n    #endif\n  #endif\n};\n\nlayout(location = MODEL_MATRIX0) in vec4 a_ModelMatrix0;\nlayout(location = MODEL_MATRIX1) in vec4 a_ModelMatrix1;\nlayout(location = MODEL_MATRIX2) in vec4 a_ModelMatrix2;\nlayout(location = MODEL_MATRIX3) in vec4 a_ModelMatrix3;\nlayout(location = PACKED_COLOR) in vec4 a_PackedColor;\nlayout(location = PACKED_STYLE1) in vec4 a_StylePacked1;\nlayout(location = PACKED_STYLE2) in vec4 a_StylePacked2;\nlayout(location = PICKING_COLOR) in vec4 a_PickingColor;\n\nout vec4 v_PickingResult;\nout vec4 v_Color;\nout vec4 v_StrokeColor;\nout vec4 v_StylePacked1;\nout vec4 v_StylePacked2;\n\n#define COLOR_SCALE 1. / 255.\nvoid setPickingColor(vec3 pickingColor) {\n  v_PickingResult.rgb = pickingColor * COLOR_SCALE;\n}\n\nvec2 unpack_float(const float packedValue) {\n  int packedIntValue = int(packedValue);\n  int v0 = packedIntValue / 256;\n  return vec2(v0, packedIntValue - v0 * 256);\n}\nvec4 decode_color(const vec2 encodedColor) {\n  return vec4(\n    unpack_float(encodedColor[0]) / 255.0,\n    unpack_float(encodedColor[1]) / 255.0\n  );\n}\nvec4 project(vec4 pos, mat4 pm, mat4 vm, mat4 mm) {\n  return pm * vm * mm * pos;\n}\n\nlayout(location = POSITION) in vec3 a_Position;\nlayout(location = NORMAL) in vec3 a_Normal;\n\n#ifdef USE_UV\n  layout(location = UV) in vec2 a_Uv;\n  out vec2 v_Uv;\n#endif\n\n#ifdef USE_WIREFRAME\n  layout(location = BARYCENTRIC) in vec3 a_Barycentric;\n  out vec3 v_Barycentric;\n#endif\n\nout vec3 v_ViewPosition;\nout vec3 v_Normal;\n\nvoid main() {\n  vec4 a_Color = decode_color(a_PackedColor.xy);\nvec4 a_StrokeColor = decode_color(a_PackedColor.zw);\n\nmat4 u_ModelMatrix = mat4(a_ModelMatrix0, a_ModelMatrix1, a_ModelMatrix2, a_ModelMatrix3);\nvec4 u_StrokeColor = a_StrokeColor;\nfloat u_Opacity = a_StylePacked1.x;\nfloat u_FillOpacity = a_StylePacked1.y;\nfloat u_StrokeOpacity = a_StylePacked1.z;\nfloat u_StrokeWidth = a_StylePacked1.w;\nfloat u_ZIndex = a_PickingColor.w;\nvec2 u_Anchor = a_StylePacked2.yz;\nfloat u_IncreasedLineWidthForHitTesting = a_StylePacked2.w;\n\nsetPickingColor(a_PickingColor.xyz);\n\nv_Color = a_Color;\nv_StrokeColor = a_StrokeColor;\nv_StylePacked1 = a_StylePacked1;\nv_StylePacked2 = a_StylePacked2;\n\n// #ifdef CLIPSPACE_NEAR_ZERO\n//     gl_Position.z = (gl_Position.z + gl_Position.w) * 0.5;\n// #endif\n\n  vec4 position = vec4(a_Position, 1.0);\n\n  gl_Position = project(position, u_ProjectionMatrix, u_ViewMatrix, u_ModelMatrix);\n\n  vec4 mvPosition = u_ViewMatrix * u_ModelMatrix * position;\n  v_ViewPosition = - mvPosition.xyz;\n\n  // v_ViewPosition = vec3(mvPosition) / mvPosition.w;\n\n  mat3 normalWorld = mat3(transposeMat3(inverseMat3(mat3(u_ViewMatrix * u_ModelMatrix))));\n  v_Normal = normalize(normalWorld * a_Normal);\n\n  #ifdef USE_UV\n  v_Uv = a_Uv;\n#endif\n\n  #ifdef USE_WIREFRAME\n  v_Barycentric = a_Barycentric;\n#endif\n\n}",fragmentShader:"#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n  #define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( float x ) { return x*x; }\nfloat pow3( float x ) { return x*x*x; }\nfloat pow4( float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( vec2 uv ) {\n  const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n  highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n  return fract( sin( sn ) * c );\n}\n\nmat3 transposeMat3(mat3 inMatrix) {\n  vec3 i0 = inMatrix[0];\n  vec3 i1 = inMatrix[1];\n  vec3 i2 = inMatrix[2];\n\n  mat3 outMatrix = mat3(\n    vec3(i0.x, i1.x, i2.x),\n    vec3(i0.y, i1.y, i2.y),\n    vec3(i0.z, i1.z, i2.z)\n    );\n\n  return outMatrix;\n}\n\n// https://github.com/glslify/glsl-inverse/blob/master/index.glsl\nmat3 inverseMat3(mat3 inMatrix) {\n  float a00 = inMatrix[0][0], a01 = inMatrix[0][1], a02 = inMatrix[0][2];\n  float a10 = inMatrix[1][0], a11 = inMatrix[1][1], a12 = inMatrix[1][2];\n  float a20 = inMatrix[2][0], a21 = inMatrix[2][1], a22 = inMatrix[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n          b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n          b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nstruct DirectionalLight {\n  vec3 direction;\n  float intensity;\n  vec3 color;\n};\n\nstruct IncidentLight {\n  vec3 color;\n  vec3 direction;\n  bool visible;\n};\n\nstruct ReflectedLight {\n  vec3 directDiffuse;\n  vec3 directSpecular;\n  vec3 indirectDiffuse;\n  vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n  vec3 position;\n  vec3 normal;\n  vec3 viewDir;\n};\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  vec3 u_Emissive;\n  float u_Shininess;\n  vec3 u_Specular;\n\n  #ifdef USE_LIGHT\n    #ifdef USE_BUMPMAP\n      float u_BumpScale;\n    #endif\n\n    #ifdef NUM_AMBIENT_LIGHTS\n      vec3 u_AmbientLightColor;\n    #endif\n\n    #ifdef NUM_DIR_LIGHTS\n      DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n    #endif\n  #endif\n};\n\nin vec4 v_PickingResult;\nin vec4 v_Color;\nin vec4 v_StrokeColor;\nin vec4 v_StylePacked1;\nin vec4 v_StylePacked2;\n#ifdef USE_UV\n  in vec2 v_Uv;\n#endif\n#ifdef USE_MAP\n  uniform sampler2D u_Map;\n#endif\n#if defined(USE_BUMPMAP) && defined(USE_LIGHT)\n  uniform sampler2D u_BumpMap;\n\n  // Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n  // http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n  // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n  vec2 dHdxy_fwd() {\n    vec2 dSTdx = dFdx( v_Uv );\n    vec2 dSTdy = dFdy( v_Uv );\n\n    float Hll = u_BumpScale * texture(SAMPLER_2D(u_BumpMap), v_Uv ).x;\n    float dBx = u_BumpScale * texture(SAMPLER_2D(u_BumpMap), v_Uv + dSTdx ).x - Hll;\n    float dBy = u_BumpScale * texture(SAMPLER_2D(u_BumpMap), v_Uv + dSTdy ).x - Hll;\n\n    return vec2( dBx, dBy );\n  }\n\n  vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\n    // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n    vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n    vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n    vec3 vN = surf_norm;\t\t// normalized\n\n    vec3 R1 = cross( vSigmaY, vN );\n    vec3 R2 = cross( vN, vSigmaX );\n\n    float fDet = dot( vSigmaX, R1 ) * faceDirection;\n\n    vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n    return normalize( abs( fDet ) * surf_norm - vGrad );\n  }\n#endif\n#ifdef USE_SPECULARMAP\n  uniform sampler2D u_SpecularMap;\n#endif\nvec3 BRDF_Lambert(vec3 diffuseColor) {\n  return RECIPROCAL_PI * diffuseColor;\n}\n\nvec3 F_Schlick(\n  vec3 f0,\n  float f90,\n  float dotVH\n) {\n  // Original approximation by Christophe Schlick '94\n  // float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n  // Optimized variant (presented by Epic at SIGGRAPH '13)\n  // https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n  float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n  return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\n\nfloat G_BlinnPhong_Implicit( /* float dotNL, float dotNV */ ) {\n  // geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n  return 0.25;\n}\n\nfloat D_BlinnPhong(\n  float shininess,\n  float dotNH\n) {\n  return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\n\nvec3 BRDF_BlinnPhong(\n  vec3 lightDir,\n  vec3 viewDir,\n  vec3 normal,\n  vec3 specularColor,\n  float shininess\n) {\n  vec3 halfDir = normalize( lightDir + viewDir );\n\n  float dotNH = saturate( dot( normal, halfDir ) );\n  float dotVH = saturate( dot( viewDir, halfDir ) );\n\n  vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\n  float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n  float D = D_BlinnPhong( shininess, dotNH );\n\n  return F * ( G * D );\n}\n\n#ifdef USE_WIREFRAME\n  in vec3 v_Barycentric;\n\n  float edgeFactor() {\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * u_WireframeLineWidth, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n  }\n#endif\n\n#ifdef USE_FOG\n  #define FOGMODE_NONE 0.\n  #define FOGMODE_EXP 1.\n  #define FOGMODE_EXP2 2.\n  #define FOGMODE_LINEAR 3.\n\n  // in float v_FogDepth;\n\n  float dBlendModeFogFactor = 1.0;\n\n  vec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    // float depth = v_FogDepth;\n    float fogFactor;\n    float fogStart = u_FogInfos.y;\n    float fogEnd = u_FogInfos.z;\n    float fogDensity = u_FogInfos.w;\n\n    if (u_FogInfos.x == FOGMODE_NONE) {\n      fogFactor = 1.0;\n    } else if (u_FogInfos.x == FOGMODE_EXP) {\n      fogFactor = exp(-depth * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_EXP2) {\n      fogFactor = exp(-depth * depth * fogDensity * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_LINEAR) {\n      fogFactor = (fogEnd - depth) / (fogEnd - fogStart);\n    }\n\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    return mix(u_FogColor * dBlendModeFogFactor, color, fogFactor);\n  }\n#endif\n\n#ifdef USE_LIGHT\n  void getDirectionalLightInfo(\n    DirectionalLight directionalLight, \n    GeometricContext geometry,\n    out IncidentLight light\n  ) {\n    light.color = directionalLight.color * directionalLight.intensity;\n    light.direction = normalize(directionalLight.direction);\n    light.visible = true;\n  }\n\n  vec3 getAmbientLightIrradiance( vec3 ambientLightColor ) {\n    vec3 irradiance = ambientLightColor;\n    return irradiance;\n  }\n#endif\nstruct BlinnPhongMaterial {\n  vec3 diffuseColor;\n  vec3 specularColor;\n  float specularShininess;\n  float specularStrength;\n};\n\nvoid RE_Direct_BlinnPhong(\n  IncidentLight directLight,\n  GeometricContext geometry,\n  BlinnPhongMaterial material,\n  inout ReflectedLight reflectedLight\n) {\n  float dotNL = saturate(dot(geometry.normal, directLight.direction));\n  vec3 irradiance = dotNL * directLight.color;\n\n  reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n  reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong(\n  vec3 irradiance,\n  GeometricContext geometry,\n  BlinnPhongMaterial material,\n  inout ReflectedLight reflectedLight\n) {\n  reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n\n#define RE_Direct           RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse  RE_IndirectDiffuse_BlinnPhong\n\nin vec3 v_ViewPosition;\nin vec3 v_Normal;\n\nout vec4 outputColor;\n\nvoid main() {\n  vec4 u_Color = v_Color;\nvec4 u_StrokeColor = v_StrokeColor;\nfloat u_Opacity = v_StylePacked1.x;\nfloat u_FillOpacity = v_StylePacked1.y;\nfloat u_StrokeOpacity = v_StylePacked1.z;\nfloat u_StrokeWidth = v_StylePacked1.w;\nfloat u_Visible = v_StylePacked2.x;\nvec3 u_PickingColor = v_PickingResult.xyz;\n\nif (u_Visible < 0.5) {\n    discard;\n}\n\n  // diffusemap\n  #ifdef USE_MAP\n  #ifdef USE_PATTERN\n    vec4 texelColor = texture(SAMPLER_2D(u_Map), v_Uv);\n    u_Color = texelColor;\n  #else\n    vec4 texelColor = texture(SAMPLER_2D(u_Map), v_Uv);\n    u_Color = texelColor;\n  #endif\n#endif\n  // specularmap\n  float specularStrength = 1.0;\n\n#ifdef USE_SPECULARMAP\n  vec4 texelSpecular = texture(SAMPLER_2D(u_SpecularMap), v_Uv);\n  specularStrength = texelSpecular.r;\n#endif\n  // bumpmap & normalmap\n  float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\nvec3 normal = normalize(v_Normal);\n#ifdef USE_DOUBLESIDE\n  normal = normal * faceDirection;\n#endif\n\n// #ifdef USE_TANGENT\n//   vec3 tangent = normalize( vTangent );\n//   vec3 bitangent = normalize( vBitangent );\n\n//   #ifdef DOUBLE_SIDED\n//     tangent = tangent * faceDirection;\n//     bitangent = bitangent * faceDirection;\n//   #endif\n\n// #if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n// mat3 vTBN = mat3( tangent, bitangent, normal );\n\n// #endif\n// #endif\n  #ifdef OBJECTSPACE_NORMALMAP\n  // normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n  // #ifdef FLIP_SIDED\n  //   normal = - normal;\n  // #endif\n\n  // #ifdef DOUBLE_SIDED\n  //   normal = normal * faceDirection;\n  // #endif\n\n  // normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n  // vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n  // mapN.xy *= normalScale;\n\n  // #ifdef USE_TANGENT\n  //   normal = normalize( vTBN * mapN );\n  // #else\n  //   normal = perturbNormal2Arb( - v_ViewPosition, normal, mapN, faceDirection );\n  // #endif\n\n#elif defined(USE_BUMPMAP) && defined(USE_LIGHT)\n  normal = perturbNormalArb( - v_ViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif\n\n  if (u_IsPicking > 0.5) {\n    if (u_PickingColor.x == 0.0 && u_PickingColor.y == 0.0 && u_PickingColor.z == 0.0) {\n      discard;\n    }\n    outputColor = vec4(u_PickingColor, 1.0);\n  } else {\n    outputColor = u_Color;\n    outputColor.a = outputColor.a * u_Opacity;\n\n    vec4 diffuseColor = outputColor;\n    ReflectedLight reflectedLight = ReflectedLight(vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ));\n    vec3 totalEmissiveRadiance = u_Emissive;\n\n    // calculate lighting accumulation\n    BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = u_Specular;\nmaterial.specularShininess = u_Shininess;\nmaterial.specularStrength = specularStrength;\n    GeometricContext geometry;\ngeometry.position = - v_ViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = u_IsOrtho == 1.0 ? vec3(0, 0, 1) : normalize(v_ViewPosition);\n\nIncidentLight directLight;\n#if defined( NUM_DIR_LIGHTS ) && ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n  DirectionalLight directionalLight;\n  #if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n    DirectionalLightShadow directionalLightShadow;\n  #endif\n\n  #pragma unroll_loop_start\n  for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n    directionalLight = directionalLights[ i ];\n\n    getDirectionalLightInfo( directionalLight, geometry, directLight );\n\n    #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n      directionalLightShadow = directionalLightShadows[ i ];\n      directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n    #endif\n\n    RE_Direct( directLight, geometry, material, reflectedLight );\n  }\n  #pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n  vec3 iblIrradiance = vec3(0.0);\n  vec3 ambient = vec3(0.0);\n  #ifdef NUM_AMBIENT_LIGHTS\n    ambient = u_AmbientLightColor;\n  #endif\n  vec3 irradiance = getAmbientLightIrradiance(ambient);\n\n  // irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n  // #if ( NUM_HEMI_LIGHTS > 0 )\n  //   #pragma unroll_loop_start\n  //   for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n  //     irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n  //   }\n  //   #pragma unroll_loop_end\n  // #endif\n#endif\n\n#if defined( RE_IndirectSpecular )\n  vec3 radiance = vec3( 0.0 );\n  vec3 clearcoatRadiance = vec3( 0.0 );\n#endif\n\n    #if defined( RE_IndirectDiffuse )\n  RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n\n#if defined( RE_IndirectSpecular )\n  RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif\n\n    vec3 outgoingLight = reflectedLight.directDiffuse +\n      reflectedLight.indirectDiffuse + \n      reflectedLight.directSpecular + \n      reflectedLight.indirectSpecular + \n      totalEmissiveRadiance;\n\n    outputColor = vec4(outgoingLight, diffuseColor.a);\n\n    #ifdef USE_WIREFRAME\n  vec3 color = mix(outputColor.xyz, u_WireframeLineColor, (1.0 - edgeFactor()));\n  outputColor.xyz = color;\n#endif\n    #ifdef USE_FOG\n  outputColor.rgb = addFog(outputColor.rgb);\n#endif\n  }\n}",emissive:"black",shininess:30,specular:"#111111",bumpScale:1,doubleSide:!1},r))||this,_=a.specularMap,E=a.bumpMap,c=a.doubleSide,l=a.shininess,u=a.specular,s=t.parseColor(a.emissive),R=t.parseColor(u);return a.setUniforms(((i={u_Placeholder:null})[Lt.EMISSIVE]=[Number(s.r)/255,Number(s.g)/255,Number(s.b)/255],i[Lt.SHININESS]=l,i[Lt.SPECULAR]=[Number(R.r)/255,Number(R.g)/255,Number(R.b)/255],i)),_&&(a.specularMap=_),E&&(a.bumpMap=E),a.doubleSide=c,a.defines=o(o({},a.defines),{USE_LIGHT:!0}),a}return i(n,e),Object.defineProperty(n.prototype,"emissive",{get:function(){return this.props.emissive},set:function(e){var n;this.props.emissive=e;var r=t.parseColor(e);this.setUniforms(((n={})[Lt.EMISSIVE]=[Number(r.r)/255,Number(r.g)/255,Number(r.b)/255],n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"shininess",{get:function(){return this.props.shininess},set:function(e){var t;this.props.shininess=e,this.setUniforms(((t={})[Lt.SHININESS]=e,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"specular",{get:function(){return this.props.specular},set:function(e){var n;this.props.specular=e;var r=t.parseColor(e);this.setUniforms(((n={})[Lt.SPECULAR]=[Number(r.r)/255,Number(r.g)/255,Number(r.b)/255],n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"specularMap",{get:function(){return this.props.specularMap},set:function(e){var t;this.props.map!==e&&(this.props.specularMap=e,this.programDirty=!0),this.defines.USE_SPECULARMAP=!!e,this.setUniforms(((t={})[Lt.SPECULAR_MAP]=e,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"bumpMap",{get:function(){return this.props.bumpMap},set:function(e){var t;this.props.map!==e&&(this.props.bumpMap=e,this.programDirty=!0),this.defines.USE_BUMPMAP=!!e,this.setUniforms(((t={})[Lt.BUMP_MAP]=e,t[Lt.BUMP_SCALE]=this.bumpScale,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"bumpScale",{get:function(){return this.props.bumpScale},set:function(e){var t;this.props.bumpScale=e,this.setUniforms(((t={})[Lt.BUMP_SCALE]=e,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"doubleSide",{get:function(){return this.props.doubleSide},set:function(e){this.props.doubleSide=e,this.defines.USE_DOUBLESIDE=e},enumerable:!1,configurable:!0}),n}(gt);!function(e){e.EMISSIVE="u_Emissive",e.BUMP_SCALE="u_BumpScale",e.BUMP_MAP="u_BumpMap"}(Ct||(Ct={}));var Ft,Pt=function(e){function n(n,r){var i,a=e.call(this,n,o({vertexShader:"#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n  #define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( float x ) { return x*x; }\nfloat pow3( float x ) { return x*x*x; }\nfloat pow4( float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( vec2 uv ) {\n  const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n  highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n  return fract( sin( sn ) * c );\n}\n\nmat3 transposeMat3(mat3 inMatrix) {\n  vec3 i0 = inMatrix[0];\n  vec3 i1 = inMatrix[1];\n  vec3 i2 = inMatrix[2];\n\n  mat3 outMatrix = mat3(\n    vec3(i0.x, i1.x, i2.x),\n    vec3(i0.y, i1.y, i2.y),\n    vec3(i0.z, i1.z, i2.z)\n    );\n\n  return outMatrix;\n}\n\n// https://github.com/glslify/glsl-inverse/blob/master/index.glsl\nmat3 inverseMat3(mat3 inMatrix) {\n  float a00 = inMatrix[0][0], a01 = inMatrix[0][1], a02 = inMatrix[0][2];\n  float a10 = inMatrix[1][0], a11 = inMatrix[1][1], a12 = inMatrix[1][2];\n  float a20 = inMatrix[2][0], a21 = inMatrix[2][1], a22 = inMatrix[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n          b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n          b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nstruct DirectionalLight {\n  vec3 direction;\n  float intensity;\n  vec3 color;\n};\n\nstruct IncidentLight {\n  vec3 color;\n  vec3 direction;\n  bool visible;\n};\n\nstruct ReflectedLight {\n  vec3 directDiffuse;\n  vec3 directSpecular;\n  vec3 indirectDiffuse;\n  vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n  vec3 position;\n  vec3 normal;\n  vec3 viewDir;\n};\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  vec3 u_Emissive;\n\n  #ifdef USE_LIGHT\n    #ifdef USE_BUMPMAP\n      float u_BumpScale;\n    #endif\n\n    #ifdef NUM_AMBIENT_LIGHTS\n      vec3 u_AmbientLightColor;\n    #endif\n\n    #ifdef NUM_DIR_LIGHTS\n      DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n    #endif\n  #endif\n};\n\nlayout(location = MODEL_MATRIX0) in vec4 a_ModelMatrix0;\nlayout(location = MODEL_MATRIX1) in vec4 a_ModelMatrix1;\nlayout(location = MODEL_MATRIX2) in vec4 a_ModelMatrix2;\nlayout(location = MODEL_MATRIX3) in vec4 a_ModelMatrix3;\nlayout(location = PACKED_COLOR) in vec4 a_PackedColor;\nlayout(location = PACKED_STYLE1) in vec4 a_StylePacked1;\nlayout(location = PACKED_STYLE2) in vec4 a_StylePacked2;\nlayout(location = PICKING_COLOR) in vec4 a_PickingColor;\n\nout vec4 v_PickingResult;\nout vec4 v_Color;\nout vec4 v_StrokeColor;\nout vec4 v_StylePacked1;\nout vec4 v_StylePacked2;\n\n#define COLOR_SCALE 1. / 255.\nvoid setPickingColor(vec3 pickingColor) {\n  v_PickingResult.rgb = pickingColor * COLOR_SCALE;\n}\n\nvec2 unpack_float(const float packedValue) {\n  int packedIntValue = int(packedValue);\n  int v0 = packedIntValue / 256;\n  return vec2(v0, packedIntValue - v0 * 256);\n}\nvec4 decode_color(const vec2 encodedColor) {\n  return vec4(\n    unpack_float(encodedColor[0]) / 255.0,\n    unpack_float(encodedColor[1]) / 255.0\n  );\n}\nvec4 project(vec4 pos, mat4 pm, mat4 vm, mat4 mm) {\n  return pm * vm * mm * pos;\n}\n\nlayout(location = POSITION) in vec3 a_Position;\nlayout(location = NORMAL) in vec3 a_Normal;\n\n#ifdef USE_UV\n  layout(location = UV) in vec2 a_Uv;\n  out vec2 v_Uv;\n#endif\n\n#ifdef USE_WIREFRAME\n  layout(location = BARYCENTRIC) in vec3 a_Barycentric;\n  out vec3 v_Barycentric;\n#endif\n\nout vec3 v_ViewPosition;\nout vec3 v_Normal;\n\nvoid main() {\n  vec4 a_Color = decode_color(a_PackedColor.xy);\nvec4 a_StrokeColor = decode_color(a_PackedColor.zw);\n\nmat4 u_ModelMatrix = mat4(a_ModelMatrix0, a_ModelMatrix1, a_ModelMatrix2, a_ModelMatrix3);\nvec4 u_StrokeColor = a_StrokeColor;\nfloat u_Opacity = a_StylePacked1.x;\nfloat u_FillOpacity = a_StylePacked1.y;\nfloat u_StrokeOpacity = a_StylePacked1.z;\nfloat u_StrokeWidth = a_StylePacked1.w;\nfloat u_ZIndex = a_PickingColor.w;\nvec2 u_Anchor = a_StylePacked2.yz;\nfloat u_IncreasedLineWidthForHitTesting = a_StylePacked2.w;\n\nsetPickingColor(a_PickingColor.xyz);\n\nv_Color = a_Color;\nv_StrokeColor = a_StrokeColor;\nv_StylePacked1 = a_StylePacked1;\nv_StylePacked2 = a_StylePacked2;\n\n// #ifdef CLIPSPACE_NEAR_ZERO\n//     gl_Position.z = (gl_Position.z + gl_Position.w) * 0.5;\n// #endif\n\n  vec4 position = vec4(a_Position, 1.0);\n\n  gl_Position = project(position, u_ProjectionMatrix, u_ViewMatrix, u_ModelMatrix);\n\n  vec4 mvPosition = u_ViewMatrix * u_ModelMatrix * position;\n  v_ViewPosition = - mvPosition.xyz;\n\n  // v_ViewPosition = vec3(mvPosition) / mvPosition.w;\n\n  mat3 normalWorld = mat3(transposeMat3(inverseMat3(mat3(u_ViewMatrix * u_ModelMatrix))));\n  v_Normal = normalize(normalWorld * a_Normal);\n\n  #ifdef USE_UV\n  v_Uv = a_Uv;\n#endif\n\n  #ifdef USE_WIREFRAME\n  v_Barycentric = a_Barycentric;\n#endif\n\n}",fragmentShader:"#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n  #define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( float x ) { return x*x; }\nfloat pow3( float x ) { return x*x*x; }\nfloat pow4( float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( vec2 uv ) {\n  const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n  highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n  return fract( sin( sn ) * c );\n}\n\nmat3 transposeMat3(mat3 inMatrix) {\n  vec3 i0 = inMatrix[0];\n  vec3 i1 = inMatrix[1];\n  vec3 i2 = inMatrix[2];\n\n  mat3 outMatrix = mat3(\n    vec3(i0.x, i1.x, i2.x),\n    vec3(i0.y, i1.y, i2.y),\n    vec3(i0.z, i1.z, i2.z)\n    );\n\n  return outMatrix;\n}\n\n// https://github.com/glslify/glsl-inverse/blob/master/index.glsl\nmat3 inverseMat3(mat3 inMatrix) {\n  float a00 = inMatrix[0][0], a01 = inMatrix[0][1], a02 = inMatrix[0][2];\n  float a10 = inMatrix[1][0], a11 = inMatrix[1][1], a12 = inMatrix[1][2];\n  float a20 = inMatrix[2][0], a21 = inMatrix[2][1], a22 = inMatrix[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n          b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n          b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nstruct DirectionalLight {\n  vec3 direction;\n  float intensity;\n  vec3 color;\n};\n\nstruct IncidentLight {\n  vec3 color;\n  vec3 direction;\n  bool visible;\n};\n\nstruct ReflectedLight {\n  vec3 directDiffuse;\n  vec3 directSpecular;\n  vec3 indirectDiffuse;\n  vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n  vec3 position;\n  vec3 normal;\n  vec3 viewDir;\n};\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  vec3 u_Emissive;\n\n  #ifdef USE_LIGHT\n    #ifdef USE_BUMPMAP\n      float u_BumpScale;\n    #endif\n\n    #ifdef NUM_AMBIENT_LIGHTS\n      vec3 u_AmbientLightColor;\n    #endif\n\n    #ifdef NUM_DIR_LIGHTS\n      DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n    #endif\n  #endif\n};\n\nin vec4 v_PickingResult;\nin vec4 v_Color;\nin vec4 v_StrokeColor;\nin vec4 v_StylePacked1;\nin vec4 v_StylePacked2;\n#ifdef USE_UV\n  in vec2 v_Uv;\n#endif\n#ifdef USE_MAP\n  uniform sampler2D u_Map;\n#endif\n#if defined(USE_BUMPMAP) && defined(USE_LIGHT)\n  uniform sampler2D u_BumpMap;\n\n  // Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n  // http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n  // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n  vec2 dHdxy_fwd() {\n    vec2 dSTdx = dFdx( v_Uv );\n    vec2 dSTdy = dFdy( v_Uv );\n\n    float Hll = u_BumpScale * texture(SAMPLER_2D(u_BumpMap), v_Uv ).x;\n    float dBx = u_BumpScale * texture(SAMPLER_2D(u_BumpMap), v_Uv + dSTdx ).x - Hll;\n    float dBy = u_BumpScale * texture(SAMPLER_2D(u_BumpMap), v_Uv + dSTdy ).x - Hll;\n\n    return vec2( dBx, dBy );\n  }\n\n  vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\n    // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n    vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n    vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n    vec3 vN = surf_norm;\t\t// normalized\n\n    vec3 R1 = cross( vSigmaY, vN );\n    vec3 R2 = cross( vN, vSigmaX );\n\n    float fDet = dot( vSigmaX, R1 ) * faceDirection;\n\n    vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n    return normalize( abs( fDet ) * surf_norm - vGrad );\n  }\n#endif\n#ifdef USE_SPECULARMAP\n  uniform sampler2D u_SpecularMap;\n#endif\nvec3 BRDF_Lambert(vec3 diffuseColor) {\n  return RECIPROCAL_PI * diffuseColor;\n}\n\nvec3 F_Schlick(\n  vec3 f0,\n  float f90,\n  float dotVH\n) {\n  // Original approximation by Christophe Schlick '94\n  // float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n  // Optimized variant (presented by Epic at SIGGRAPH '13)\n  // https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n  float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n  return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\n\nfloat G_BlinnPhong_Implicit( /* float dotNL, float dotNV */ ) {\n  // geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n  return 0.25;\n}\n\nfloat D_BlinnPhong(\n  float shininess,\n  float dotNH\n) {\n  return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\n\nvec3 BRDF_BlinnPhong(\n  vec3 lightDir,\n  vec3 viewDir,\n  vec3 normal,\n  vec3 specularColor,\n  float shininess\n) {\n  vec3 halfDir = normalize( lightDir + viewDir );\n\n  float dotNH = saturate( dot( normal, halfDir ) );\n  float dotVH = saturate( dot( viewDir, halfDir ) );\n\n  vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\n  float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n  float D = D_BlinnPhong( shininess, dotNH );\n\n  return F * ( G * D );\n}\n\n#ifdef USE_WIREFRAME\n  in vec3 v_Barycentric;\n\n  float edgeFactor() {\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * u_WireframeLineWidth, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n  }\n#endif\n\n#ifdef USE_FOG\n  #define FOGMODE_NONE 0.\n  #define FOGMODE_EXP 1.\n  #define FOGMODE_EXP2 2.\n  #define FOGMODE_LINEAR 3.\n\n  // in float v_FogDepth;\n\n  float dBlendModeFogFactor = 1.0;\n\n  vec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    // float depth = v_FogDepth;\n    float fogFactor;\n    float fogStart = u_FogInfos.y;\n    float fogEnd = u_FogInfos.z;\n    float fogDensity = u_FogInfos.w;\n\n    if (u_FogInfos.x == FOGMODE_NONE) {\n      fogFactor = 1.0;\n    } else if (u_FogInfos.x == FOGMODE_EXP) {\n      fogFactor = exp(-depth * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_EXP2) {\n      fogFactor = exp(-depth * depth * fogDensity * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_LINEAR) {\n      fogFactor = (fogEnd - depth) / (fogEnd - fogStart);\n    }\n\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    return mix(u_FogColor * dBlendModeFogFactor, color, fogFactor);\n  }\n#endif\n\n#ifdef USE_LIGHT\n  void getDirectionalLightInfo(\n    DirectionalLight directionalLight, \n    GeometricContext geometry,\n    out IncidentLight light\n  ) {\n    light.color = directionalLight.color * directionalLight.intensity;\n    light.direction = normalize(directionalLight.direction);\n    light.visible = true;\n  }\n\n  vec3 getAmbientLightIrradiance( vec3 ambientLightColor ) {\n    vec3 irradiance = ambientLightColor;\n    return irradiance;\n  }\n#endif\nstruct LambertMaterial {\n  vec3 diffuseColor;\n  float specularStrength;\n};\n\nvoid RE_Direct_Lambert(\n  IncidentLight directLight,\n  GeometricContext geometry,\n  LambertMaterial material,\n  inout ReflectedLight reflectedLight\n) {\n  float dotNL = saturate(dot(geometry.normal, directLight.direction));\n  vec3 irradiance = dotNL * directLight.color;\n\n  reflectedLight.directDiffuse += irradiance * BRDF_Lambert(material.diffuseColor);\n}\n\nvoid RE_IndirectDiffuse_Lambert(\n  vec3 irradiance,\n  GeometricContext geometry,\n  LambertMaterial material,\n  inout ReflectedLight reflectedLight\n) {\n  reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert(material.diffuseColor);\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n\nin vec3 v_ViewPosition;\nin vec3 v_Normal;\n\nout vec4 outputColor;\n\nvoid main() {\n  vec4 u_Color = v_Color;\nvec4 u_StrokeColor = v_StrokeColor;\nfloat u_Opacity = v_StylePacked1.x;\nfloat u_FillOpacity = v_StylePacked1.y;\nfloat u_StrokeOpacity = v_StylePacked1.z;\nfloat u_StrokeWidth = v_StylePacked1.w;\nfloat u_Visible = v_StylePacked2.x;\nvec3 u_PickingColor = v_PickingResult.xyz;\n\nif (u_Visible < 0.5) {\n    discard;\n}\n\n  // diffusemap\n  #ifdef USE_MAP\n  #ifdef USE_PATTERN\n    vec4 texelColor = texture(SAMPLER_2D(u_Map), v_Uv);\n    u_Color = texelColor;\n  #else\n    vec4 texelColor = texture(SAMPLER_2D(u_Map), v_Uv);\n    u_Color = texelColor;\n  #endif\n#endif\n  // specularmap\n  float specularStrength = 1.0;\n\n#ifdef USE_SPECULARMAP\n  vec4 texelSpecular = texture(SAMPLER_2D(u_SpecularMap), v_Uv);\n  specularStrength = texelSpecular.r;\n#endif\n  // bumpmap & normalmap\n  float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\nvec3 normal = normalize(v_Normal);\n#ifdef USE_DOUBLESIDE\n  normal = normal * faceDirection;\n#endif\n\n// #ifdef USE_TANGENT\n//   vec3 tangent = normalize( vTangent );\n//   vec3 bitangent = normalize( vBitangent );\n\n//   #ifdef DOUBLE_SIDED\n//     tangent = tangent * faceDirection;\n//     bitangent = bitangent * faceDirection;\n//   #endif\n\n// #if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n// mat3 vTBN = mat3( tangent, bitangent, normal );\n\n// #endif\n// #endif\n  #ifdef OBJECTSPACE_NORMALMAP\n  // normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n  // #ifdef FLIP_SIDED\n  //   normal = - normal;\n  // #endif\n\n  // #ifdef DOUBLE_SIDED\n  //   normal = normal * faceDirection;\n  // #endif\n\n  // normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n  // vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n  // mapN.xy *= normalScale;\n\n  // #ifdef USE_TANGENT\n  //   normal = normalize( vTBN * mapN );\n  // #else\n  //   normal = perturbNormal2Arb( - v_ViewPosition, normal, mapN, faceDirection );\n  // #endif\n\n#elif defined(USE_BUMPMAP) && defined(USE_LIGHT)\n  normal = perturbNormalArb( - v_ViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif\n\n  if (u_IsPicking > 0.5) {\n    if (u_PickingColor.x == 0.0 && u_PickingColor.y == 0.0 && u_PickingColor.z == 0.0) {\n      discard;\n    }\n    outputColor = vec4(u_PickingColor, 1.0);\n  } else {\n    outputColor = u_Color;\n    outputColor.a = outputColor.a * u_Opacity;\n\n    vec4 diffuseColor = outputColor;\n    ReflectedLight reflectedLight = ReflectedLight(vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ));\n    vec3 totalEmissiveRadiance = u_Emissive;\n\n    // calculate lighting accumulation\n    LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;\n    GeometricContext geometry;\ngeometry.position = - v_ViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = u_IsOrtho == 1.0 ? vec3(0, 0, 1) : normalize(v_ViewPosition);\n\nIncidentLight directLight;\n#if defined( NUM_DIR_LIGHTS ) && ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n  DirectionalLight directionalLight;\n  #if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n    DirectionalLightShadow directionalLightShadow;\n  #endif\n\n  #pragma unroll_loop_start\n  for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n    directionalLight = directionalLights[ i ];\n\n    getDirectionalLightInfo( directionalLight, geometry, directLight );\n\n    #if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n      directionalLightShadow = directionalLightShadows[ i ];\n      directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n    #endif\n\n    RE_Direct( directLight, geometry, material, reflectedLight );\n  }\n  #pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n  vec3 iblIrradiance = vec3(0.0);\n  vec3 ambient = vec3(0.0);\n  #ifdef NUM_AMBIENT_LIGHTS\n    ambient = u_AmbientLightColor;\n  #endif\n  vec3 irradiance = getAmbientLightIrradiance(ambient);\n\n  // irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n  // #if ( NUM_HEMI_LIGHTS > 0 )\n  //   #pragma unroll_loop_start\n  //   for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n  //     irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n  //   }\n  //   #pragma unroll_loop_end\n  // #endif\n#endif\n\n#if defined( RE_IndirectSpecular )\n  vec3 radiance = vec3( 0.0 );\n  vec3 clearcoatRadiance = vec3( 0.0 );\n#endif\n\n    #if defined( RE_IndirectDiffuse )\n  RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n\n#if defined( RE_IndirectSpecular )\n  RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif\n\n    vec3 outgoingLight = reflectedLight.directDiffuse +\n      reflectedLight.indirectDiffuse + \n      totalEmissiveRadiance;\n\n    outputColor = vec4(outgoingLight, diffuseColor.a);\n\n    #ifdef USE_WIREFRAME\n  vec3 color = mix(outputColor.xyz, u_WireframeLineColor, (1.0 - edgeFactor()));\n  outputColor.xyz = color;\n#endif\n    #ifdef USE_FOG\n  outputColor.rgb = addFog(outputColor.rgb);\n#endif\n  }\n}",emissive:"black",bumpScale:1,doubleSide:!1},r))||this,_=a.bumpMap,E=a.doubleSide,c=t.parseColor(a.emissive);return a.setUniforms(((i={u_Placeholder:null})[Ct.EMISSIVE]=[Number(c.r)/255,Number(c.g)/255,Number(c.b)/255],i)),_&&(a.bumpMap=_),a.doubleSide=E,a.defines=o(o({},a.defines),{USE_LIGHT:!0}),a}return i(n,e),Object.defineProperty(n.prototype,"emissive",{get:function(){return this.props.emissive},set:function(e){var n;this.props.emissive=e;var r=t.parseColor(e);this.setUniforms(((n={})[Ct.EMISSIVE]=[Number(r.r)/255,Number(r.g)/255,Number(r.b)/255],n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"bumpMap",{get:function(){return this.props.bumpMap},set:function(e){var t;this.props.map!==e&&(this.props.bumpMap=e,this.programDirty=!0),this.defines.USE_BUMPMAP=!!e,this.setUniforms(((t={})[Ct.BUMP_MAP]=e,t[Ct.BUMP_SCALE]=this.bumpScale,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"bumpScale",{get:function(){return this.props.bumpScale},set:function(e){var t;this.props.bumpScale=e,this.setUniforms(((t={})[Ct.BUMP_SCALE]=e,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"doubleSide",{get:function(){return this.props.doubleSide},set:function(e){this.props.doubleSide=e,this.defines.USE_DOUBLESIDE=e},enumerable:!1,configurable:!0}),n}(gt);!function(e){e.MAP="u_Map",e.PLACE_HOLDER="u_Placeholder",e.SIZE="u_Size"}(Ft||(Ft={}));var Bt=function(t){function n(n,r){var i,a=t.call(this,n,o({vertexShader:"#define GLSLIFY 1\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  float u_Size;\n  vec4 u_Placeholder;\n};\n\nlayout(location = MODEL_MATRIX0) in vec4 a_ModelMatrix0;\nlayout(location = MODEL_MATRIX1) in vec4 a_ModelMatrix1;\nlayout(location = MODEL_MATRIX2) in vec4 a_ModelMatrix2;\nlayout(location = MODEL_MATRIX3) in vec4 a_ModelMatrix3;\nlayout(location = PACKED_COLOR) in vec4 a_PackedColor;\nlayout(location = PACKED_STYLE1) in vec4 a_StylePacked1;\nlayout(location = PACKED_STYLE2) in vec4 a_StylePacked2;\nlayout(location = PICKING_COLOR) in vec4 a_PickingColor;\n\nout vec4 v_PickingResult;\nout vec4 v_Color;\nout vec4 v_StrokeColor;\nout vec4 v_StylePacked1;\nout vec4 v_StylePacked2;\n\n#define COLOR_SCALE 1. / 255.\nvoid setPickingColor(vec3 pickingColor) {\n  v_PickingResult.rgb = pickingColor * COLOR_SCALE;\n}\n\nvec2 unpack_float(const float packedValue) {\n  int packedIntValue = int(packedValue);\n  int v0 = packedIntValue / 256;\n  return vec2(v0, packedIntValue - v0 * 256);\n}\nvec4 decode_color(const vec2 encodedColor) {\n  return vec4(\n    unpack_float(encodedColor[0]) / 255.0,\n    unpack_float(encodedColor[1]) / 255.0\n  );\n}\nvec4 project(vec4 pos, mat4 pm, mat4 vm, mat4 mm) {\n  return pm * vm * mm * pos;\n}\n\nlayout(location = POSITION) in vec3 a_Position;\n\n#ifdef USE_UV\n  layout(location = UV) in vec2 a_Uv;\n  out vec2 v_Uv;\n#endif\n\n#ifdef USE_WIREFRAME\n  layout(location = BARYCENTRIC) in vec3 a_Barycentric;\n  out vec3 v_Barycentric;\n#endif\n\nvoid main() {\n  vec4 a_Color = decode_color(a_PackedColor.xy);\nvec4 a_StrokeColor = decode_color(a_PackedColor.zw);\n\nmat4 u_ModelMatrix = mat4(a_ModelMatrix0, a_ModelMatrix1, a_ModelMatrix2, a_ModelMatrix3);\nvec4 u_StrokeColor = a_StrokeColor;\nfloat u_Opacity = a_StylePacked1.x;\nfloat u_FillOpacity = a_StylePacked1.y;\nfloat u_StrokeOpacity = a_StylePacked1.z;\nfloat u_StrokeWidth = a_StylePacked1.w;\nfloat u_ZIndex = a_PickingColor.w;\nvec2 u_Anchor = a_StylePacked2.yz;\nfloat u_IncreasedLineWidthForHitTesting = a_StylePacked2.w;\n\nsetPickingColor(a_PickingColor.xyz);\n\nv_Color = a_Color;\nv_StrokeColor = a_StrokeColor;\nv_StylePacked1 = a_StylePacked1;\nv_StylePacked2 = a_StylePacked2;\n\n// #ifdef CLIPSPACE_NEAR_ZERO\n//     gl_Position.z = (gl_Position.z + gl_Position.w) * 0.5;\n// #endif\n\n  gl_PointSize = u_Size;\n  gl_Position = project(vec4(a_Position, 1.0), u_ProjectionMatrix, u_ViewMatrix, u_ModelMatrix);\n\n  #ifdef USE_UV\n  v_Uv = a_Uv;\n#endif\n\n  #ifdef USE_WIREFRAME\n  v_Barycentric = a_Barycentric;\n#endif\n\n}",fragmentShader:"#define GLSLIFY 1\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n  #define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( float x ) { return x*x; }\nfloat pow3( float x ) { return x*x*x; }\nfloat pow4( float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( vec2 uv ) {\n  const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n  highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n  return fract( sin( sn ) * c );\n}\n\nmat3 transposeMat3(mat3 inMatrix) {\n  vec3 i0 = inMatrix[0];\n  vec3 i1 = inMatrix[1];\n  vec3 i2 = inMatrix[2];\n\n  mat3 outMatrix = mat3(\n    vec3(i0.x, i1.x, i2.x),\n    vec3(i0.y, i1.y, i2.y),\n    vec3(i0.z, i1.z, i2.z)\n    );\n\n  return outMatrix;\n}\n\n// https://github.com/glslify/glsl-inverse/blob/master/index.glsl\nmat3 inverseMat3(mat3 inMatrix) {\n  float a00 = inMatrix[0][0], a01 = inMatrix[0][1], a02 = inMatrix[0][2];\n  float a10 = inMatrix[1][0], a11 = inMatrix[1][1], a12 = inMatrix[1][2];\n  float a20 = inMatrix[2][0], a21 = inMatrix[2][1], a22 = inMatrix[2][2];\n\n  float b01 = a22 * a11 - a12 * a21;\n  float b11 = -a22 * a10 + a12 * a20;\n  float b21 = a21 * a10 - a11 * a20;\n\n  float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n          b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n          b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nstruct DirectionalLight {\n  vec3 direction;\n  float intensity;\n  vec3 color;\n};\n\nstruct IncidentLight {\n  vec3 color;\n  vec3 direction;\n  bool visible;\n};\n\nstruct ReflectedLight {\n  vec3 directDiffuse;\n  vec3 directSpecular;\n  vec3 indirectDiffuse;\n  vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n  vec3 position;\n  vec3 normal;\n  vec3 viewDir;\n};\nlayout(std140) uniform ub_SceneParams {\n  mat4 u_ProjectionMatrix;\n  mat4 u_ViewMatrix;\n  vec3 u_CameraPosition;\n  float u_DevicePixelRatio;\n  vec2 u_Viewport;\n  float u_IsOrtho;\n  float u_IsPicking;\n};\nlayout(std140) uniform ub_MaterialParams {\n  #ifdef USE_WIREFRAME\n    vec3 u_WireframeLineColor;\n    float u_WireframeLineWidth;\n  #endif\n\n  #ifdef USE_FOG\n    vec4 u_FogInfos;\n    vec3 u_FogColor;\n  #endif\n\n  float u_Size;\n  vec4 u_Placeholder;\n};\n\nin vec4 v_PickingResult;\nin vec4 v_Color;\nin vec4 v_StrokeColor;\nin vec4 v_StylePacked1;\nin vec4 v_StylePacked2;\n#ifdef USE_MAP\n  uniform sampler2D u_Map;\n#endif\n#ifdef USE_FOG\n  #define FOGMODE_NONE 0.\n  #define FOGMODE_EXP 1.\n  #define FOGMODE_EXP2 2.\n  #define FOGMODE_LINEAR 3.\n\n  // in float v_FogDepth;\n\n  float dBlendModeFogFactor = 1.0;\n\n  vec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    // float depth = v_FogDepth;\n    float fogFactor;\n    float fogStart = u_FogInfos.y;\n    float fogEnd = u_FogInfos.z;\n    float fogDensity = u_FogInfos.w;\n\n    if (u_FogInfos.x == FOGMODE_NONE) {\n      fogFactor = 1.0;\n    } else if (u_FogInfos.x == FOGMODE_EXP) {\n      fogFactor = exp(-depth * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_EXP2) {\n      fogFactor = exp(-depth * depth * fogDensity * fogDensity);\n    } else if (u_FogInfos.x == FOGMODE_LINEAR) {\n      fogFactor = (fogEnd - depth) / (fogEnd - fogStart);\n    }\n\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    return mix(u_FogColor * dBlendModeFogFactor, color, fogFactor);\n  }\n#endif\n\nout vec4 outputColor;\n\nvoid main() {\n  vec4 u_Color = v_Color;\nvec4 u_StrokeColor = v_StrokeColor;\nfloat u_Opacity = v_StylePacked1.x;\nfloat u_FillOpacity = v_StylePacked1.y;\nfloat u_StrokeOpacity = v_StylePacked1.z;\nfloat u_StrokeWidth = v_StylePacked1.w;\nfloat u_Visible = v_StylePacked2.x;\nvec3 u_PickingColor = v_PickingResult.xyz;\n\nif (u_Visible < 0.5) {\n    discard;\n}\n  #ifdef USE_MAP\n  vec2 uv = vec2(gl_PointCoord.x, 1.0 - gl_PointCoord.y);\n\tvec4 mapTexel = texture(SAMPLER_2D(u_Map), uv);\n  u_Color *= mapTexel;\n#endif\n\n  if (u_IsPicking > 0.5) {\n    if (u_PickingColor.x == 0.0 && u_PickingColor.y == 0.0 && u_PickingColor.z == 0.0) {\n      discard;\n    }\n    outputColor = vec4(u_PickingColor, 1.0);\n  } else {\n    outputColor = u_Color;\n    outputColor.a = outputColor.a * u_Opacity;\n    vec4 diffuseColor = outputColor;\n\n    vec3 outgoingLight = diffuseColor.rgb;\n    \n    outputColor = vec4(outgoingLight, diffuseColor.a);\n\n    #ifdef USE_FOG\n  outputColor.rgb = addFog(outputColor.rgb);\n#endif\n  }\n}",cullMode:e.CullMode.BACK},r))||this;a.defines=o(o({},a.defines),{USE_UV:!0,USE_MAP:!1,USE_WIREFRAME:!1,USE_FOG:!1,USE_LIGHT:!1});var _=r||{},E=_.map,c=_.size;return E&&(a.map=E),a.setUniforms(((i={})[Ft.PLACE_HOLDER]=[0,0,0,0],i[Ft.SIZE]=c||1,i)),a}return i(n,t),Object.defineProperty(n.prototype,"map",{get:function(){return this.props.map},set:function(e){var t;this.props.map!==e&&(this.props.map=e,this.programDirty=!0),this.setUniforms(((t={})[Ft.MAP]=e,t))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"size",{get:function(){return this.props.size},set:function(e){var t;this.props.size=e,this.setUniforms(((t={})[Ft.SIZE]=e,t))},enumerable:!1,configurable:!0}),n}(n.Material),Ut=function(e){function t(){var t=e.apply(this,function(e,t,n){if(n||2===arguments.length)for(var r,i=0,o=t.length;o>i;i++)!r&&i in t||(r||(r=Array.prototype.slice.call(t,0,i)),r[i]=t[i]);return e.concat(r||Array.prototype.slice.call(t))}([],l(arguments),!1))||this;return t.name="3d",t}return i(t,e),t.prototype.init=function(){},t.prototype.destroy=function(){},t}(t.AbstractRendererPlugin);Object.defineProperty(e,"BufferGeometry",{enumerable:!0,get:function(){return n.BufferGeometry}}),Object.defineProperty(e,"Fog",{enumerable:!0,get:function(){return n.Fog}}),Object.defineProperty(e,"FogType",{enumerable:!0,get:function(){return n.FogType}}),Object.defineProperty(e,"Light",{enumerable:!0,get:function(){return n.Light}}),Object.defineProperty(e,"Material",{enumerable:!0,get:function(){return n.Material}}),Object.defineProperty(e,"Mesh",{enumerable:!0,get:function(){return n.Mesh}}),Object.defineProperty(e,"ShaderMaterial",{enumerable:!0,get:function(){return n.ShaderMaterial}}),Object.defineProperty(e,"VertexAttributeBufferIndex",{enumerable:!0,get:function(){return n.VertexAttributeBufferIndex}}),Object.defineProperty(e,"VertexAttributeLocation",{enumerable:!0,get:function(){return n.VertexAttributeLocation}}),e.AmbientLight=It,e.CapsuleGeometry=ht,e.ConeGeometry=vt,e.CubeGeometry=Tt,e.CylinderGeometry=Nt,e.DirectionalLight=mt,e.MeshBasicMaterial=gt,e.MeshLambertMaterial=Pt,e.MeshPhongMaterial=Ot,e.PlaneGeometry=Mt,e.Plugin=Ut,e.PointMaterial=Bt,e.ProceduralGeometry=st,e.SphereGeometry=pt,e.TorusGeometry=St}));
//# sourceMappingURL=index.umd.min.js.map
