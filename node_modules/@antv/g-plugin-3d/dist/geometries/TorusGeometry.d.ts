import type { Device } from '@antv/g-device-api';
import { ProceduralGeometry } from './ProceduralGeometry';
export interface TorusGeometryProps {
    tubeRadius: number;
    ringRadius: number;
    segments: number;
    sides: number;
}
export declare class TorusGeometry extends ProceduralGeometry<TorusGeometryProps> {
    constructor(device: Device, props?: Partial<TorusGeometryProps>);
    get tubeRadius(): number;
    set tubeRadius(v: number);
    get ringRadius(): number;
    set ringRadius(v: number);
    get segments(): number;
    set segments(v: number);
    get sides(): number;
    set sides(v: number);
    createTopology(): {
        indices: number[];
        positions: number[];
        normals: number[];
        uvs: number[];
        uv1s: number[];
    };
}
