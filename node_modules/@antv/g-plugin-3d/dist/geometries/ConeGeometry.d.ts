import type { Device } from '@antv/g-device-api';
import { ProceduralGeometry } from './ProceduralGeometry';
export interface ConeGeometryProps {
    /**
     * The base radius of the cone
     */
    baseRadius: number;
    /**
     * The peak radius of the cone
     */
    peakRadius: number;
    /**
     * The length of the body of the cylinder
     */
    height: number;
    /**
     * The number of divisions along the length of the cylinder
     */
    heightSegments: number;
    /**
     * The number of divisions around the tubular body of the cylinder
     */
    capSegments: number;
}
export declare class ConeGeometry extends ProceduralGeometry<ConeGeometryProps> {
    constructor(device: Device, props?: Partial<ConeGeometryProps>);
    get baseRadius(): number;
    set baseRadius(v: number);
    get peakRadius(): number;
    set peakRadius(v: number);
    get height(): number;
    set height(v: number);
    get heightSegments(): number;
    set heightSegments(v: number);
    get capSegments(): number;
    set capSegments(v: number);
    createTopology(): {
        indices: number[];
        positions: number[];
        normals: number[];
        uvs: number[];
        uv1s: number[];
    };
}
