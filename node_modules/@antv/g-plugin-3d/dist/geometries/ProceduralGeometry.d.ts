import { AABB } from '@antv/g-lite';
import { BufferGeometry } from '@antv/g-plugin-device-renderer';
import type { Device } from '@antv/g-device-api';
import { mat4 } from 'gl-matrix';
export interface Topology {
    indices: number[];
    positions: number[];
    normals: number[];
    uvs: number[];
    uv1s: number[];
}
export declare abstract class ProceduralGeometry<GeometryProps> extends BufferGeometry<GeometryProps> {
    constructor(device: Device, props?: Partial<GeometryProps>);
    protected topology: Topology;
    /**
     * flip Y, since +Y is down in G's world coords
     */
    protected flipYMatrix: mat4;
    /**
     * create geometry attributes
     */
    protected abstract createTopology(): Topology;
    protected applyMa4Position(mat: mat4, positions: ArrayBufferView): void;
    protected applyMa4Normal(mat: mat4, normals: ArrayBufferView): void;
    protected rebuildPosition(): void;
    applyMat4(mat: mat4): void;
    computeBoundingBox(): AABB;
    build(): void;
}
