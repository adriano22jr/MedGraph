import type { RenderPass } from '@antv/g-device-api';
import type { RenderCache } from './RenderCache';
import type { RenderInst } from './RenderInst';
export declare const renderInstCompareNone: any;
export declare function renderInstCompareSortKey(a: RenderInst, b: RenderInst): number;
export declare enum RenderInstExecutionOrder {
    Forwards = 0,
    Backwards = 1
}
export type RenderInstCompareFunc = (a: RenderInst, b: RenderInst) => number;
export declare class RenderInstList {
    renderInsts: RenderInst[];
    compareFunction: RenderInstCompareFunc | null;
    executionOrder: RenderInstExecutionOrder;
    private usePostSort;
    constructor(compareFunction?: RenderInstCompareFunc | null, executionOrder?: RenderInstExecutionOrder);
    /**
     * Determine whether to use post-sorting, based on some heuristics.
     */
    checkUsePostSort(): void;
    /**
     * Insert a render inst to the list. This directly inserts the render inst to
     * the position specified by the compare function, so the render inst must be
     * fully constructed at this point.
     */
    private insertSorted;
    submitRenderInst(renderInst: RenderInst): void;
    ensureSorted(): void;
    drawOnPassRendererNoReset(cache: RenderCache, passRenderer: RenderPass): void;
    reset(): void;
    drawOnPassRenderer(cache: RenderCache, passRenderer: RenderPass): void;
}
