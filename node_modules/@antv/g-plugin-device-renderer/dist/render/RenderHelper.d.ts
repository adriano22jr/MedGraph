import { RendererParameters, ToneMapping } from '../interfaces';
import type { Device } from '@antv/g-device-api';
import { DynamicUniformBuffer } from './DynamicUniformBuffer';
import { RenderCache } from './RenderCache';
import { RenderGraph } from './RenderGraph';
import type { RenderInst } from './RenderInst';
import { RenderInstManager } from './RenderInstManager';
export declare class RenderHelper {
    private parameters;
    renderCache: RenderCache;
    renderGraph: RenderGraph;
    renderInstManager: RenderInstManager;
    uniformBuffer: DynamicUniformBuffer;
    private device;
    constructor(parameters: RendererParameters);
    getDevice(): Device;
    setDevice(device: Device): void;
    pushTemplateRenderInst(): RenderInst;
    prepareToRender(): void;
    destroy(): void;
    getCache(): RenderCache;
    getDefines(): {
        USE_TONEMAPPING: boolean;
        toneMapping: ToneMapping;
    };
}
