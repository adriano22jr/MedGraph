import type { GlyphMetrics, StyleGlyph } from './AlphaImage';
import { AlphaImage } from './AlphaImage';
type Rect = {
    x: number;
    y: number;
    w: number;
    h: number;
};
export type GlyphPosition = {
    rect: Rect;
    metrics: GlyphMetrics;
};
export type GlyphPositions = Record<string, Record<number, GlyphPosition>>;
/**
 * Merge SDFs into a large squared atlas with `potpack`,
 * because on WebGL1 context, all textures are resized to a power of two to produce the best quality.
 *
 * @see https://doc.babylonjs.com/advanced_topics/webGL2#power-of-two-textures
 */
export default class GlyphAtlas {
    image: AlphaImage;
    positions: GlyphPositions;
    constructor(stacks: Record<string, Record<number, StyleGlyph>>);
}
export {};
