import type { DisplayObject, Text } from '../shapes';
export declare function setMockMeasureTextWidth(mock: (text: string, fontSize: number) => number): void;
/**
 * 计算文本在画布中的宽度
 */
export declare const measureTextWidth: {
    (...args: any[]): any;
    cache: {
        clear: (isPartial?: number | undefined) => void;
        has: (key: any) => boolean;
        get: (key: any) => any;
        set: (key: any, value: any) => void;
    };
};
export declare const getFont: (textShape: Text) => {
    fontSize: number;
    fontFamily: string;
    fontWeight: number | "unset" | "initial" | "inherit" | "normal" | "bold" | "bolder" | "lighter";
    fontStyle: "unset" | "initial" | "inherit" | "normal" | "italic" | "oblique";
    fontVariant: string | undefined;
};
export declare function textOf(node: DisplayObject): Text | null;
export declare function applyToText(node: DisplayObject, style: Record<string, any>): void;
