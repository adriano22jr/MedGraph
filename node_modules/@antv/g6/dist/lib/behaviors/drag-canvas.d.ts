import type { RuntimeContext } from '../runtime/types';
import type { IKeyboardEvent, IPointerEvent, Vector2, ViewportAnimationEffectTiming } from '../types';
import type { ShortcutKey } from '../utils/shortcut';
import type { BaseBehaviorOptions } from './base-behavior';
import { BaseBehavior } from './base-behavior';
/**
 * <zh/> 拖拽画布交互配置项
 *
 * <en/> Drag canvas behavior options
 */
export interface DragCanvasOptions extends BaseBehaviorOptions {
    /**
     * <zh/> 是否启用拖拽动画，仅在使用按键移动时有效
     *
     * <en/> Whether to enable the animation of dragging, only valid when using key movement
     */
    animation?: ViewportAnimationEffectTiming;
    /**
     * <zh/> 是否启用拖拽画布的功能
     *
     * <en/> Whether to enable the function of dragging the canvas
     * @defaultValue true
     */
    enable?: boolean | ((event: IPointerEvent | IKeyboardEvent) => boolean);
    /**
     * <zh/> 触发拖拽的方式，默认使用指针按下拖拽
     *
     * <en/> The way to trigger dragging, default to dragging with the pointer pressed
     */
    trigger?: {
        up: ShortcutKey;
        down: ShortcutKey;
        left: ShortcutKey;
        right: ShortcutKey;
    };
    /**
     * <zh/> 触发一次按键移动的距离
     *
     * <en/> The distance of a single key movement
     * @defaultValue 10
     */
    sensitivity?: number;
    /**
     * <zh/> 完成拖拽时的回调
     *
     * <en/> Callback when dragging is completed
     */
    onFinish?: () => void;
}
/**
 * <zh/> 拖拽画布交互
 *
 * <en/> Drag canvas behavior
 */
export declare class DragCanvas extends BaseBehavior<DragCanvasOptions> {
    static defaultOptions: Partial<DragCanvasOptions>;
    private shortcut;
    private defaultCursor;
    constructor(context: RuntimeContext, options: DragCanvasOptions);
    /**
     * <zh/> 更新配置
     *
     * <en/> Update options
     * @param options - <zh/> 配置项 | <en/> Options
     * @internal
     */
    update(options: Partial<DragCanvasOptions>): void;
    private bindEvents;
    private onDrag;
    private onTranslate;
    /**
     * <zh/> 平移画布
     *
     * <en/> Translate canvas
     * @param offset - <zh/> 平移距离 | <en/> Translation distance
     * @param animation - <zh/> 动画配置 | <en/> Animation configuration
     * @internal
     */
    protected translate(offset: Vector2, animation?: ViewportAnimationEffectTiming): Promise<void>;
    private validate;
    private unbindEvents;
    destroy(): void;
}
