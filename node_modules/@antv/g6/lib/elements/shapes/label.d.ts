import { DisplayObjectConfig, Group, RectStyleProps, TextStyleProps } from '@antv/g';
import type { Padding } from '../../types/padding';
import type { Prefix } from '../../types/prefix';
import { BaseShape } from './base-shape';
export interface LabelStyleProps extends TextStyleProps, Prefix<'background', RectStyleProps> {
    /**
     * <zh/> 是否显示背景
     *
     * <en/> Whether to show background
     */
    background?: boolean;
    /**
     * <zh/> 标签内边距
     *
     * <en/> Label padding
     * @defaultValue 0
     */
    padding?: Padding;
}
type ParsedLabelStyleProps = Required<LabelStyleProps>;
type LabelOptions = DisplayObjectConfig<LabelStyleProps>;
export declare class Label extends BaseShape<LabelStyleProps> {
    static defaultStyleProps: Partial<LabelStyleProps>;
    constructor(options: LabelOptions);
    protected isTextStyle(key: string): boolean;
    protected isBackgroundStyle(key: string): boolean;
    protected getTextStyle(attributes: ParsedLabelStyleProps): TextStyleProps;
    protected getBackgroundStyle(attributes: ParsedLabelStyleProps): false | RectStyleProps;
    render(attributes?: ParsedLabelStyleProps, container?: Group): void;
    getGeometryBounds(): import("@antv/g").AABB;
}
export {};
