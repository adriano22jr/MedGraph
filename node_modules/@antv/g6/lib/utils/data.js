"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEmptyData = exports.cloneElementData = exports.mergeElementsData = void 0;
const util_1 = require("@antv/util");
/**
 * <zh/> 合并两个 节点/边/Combo 的数据
 *
 * <en/> Merge the data of two nodes/edges/combos
 * @param original - <zh/> 原始数据 | <en/> original data
 * @param modified - <zh/> 待合并的数据 | <en/> data to be merged
 * @returns <zh/> 合并后的数据 | <en/> merged data
 * @remarks
 * <zh/> 只会合并第一层的数据，data、style 下的二级数据会被覆盖
 *
 * <en/> Only the first level of data will be merged, the second level of data under data and style will be overwritten
 */
function mergeElementsData(original, modified) {
    const { data: originalData, style: originalStyle, ...originalAttrs } = original;
    const { data: modifiedData, style: modifiedStyle, ...modifiedAttrs } = modified;
    const result = {
        ...originalAttrs,
        ...modifiedAttrs,
    };
    if (originalData || modifiedData) {
        Object.assign(result, { data: { ...originalData, ...modifiedData } });
    }
    if (originalStyle || modifiedStyle) {
        Object.assign(result, { style: { ...originalStyle, ...modifiedStyle } });
    }
    return result;
}
exports.mergeElementsData = mergeElementsData;
/**
 * <zh/> 克隆元素数据
 *
 * <en/> Clone clement data
 * @param data - <zh/> 待克隆的数据 | <en/> data to be cloned
 * @returns <zh/> 克隆后的数据 | <en/> cloned data
 * @remarks
 * <zh/> 只会克隆到第二层（data、style）
 *
 * <en/> Only clone to the second level (data, style)
 */
function cloneElementData(data) {
    const { data: customData, style, ...restAttrs } = data;
    const clonedData = restAttrs;
    if (customData)
        clonedData.data = { ...customData };
    if (style)
        clonedData.style = { ...style };
    return clonedData;
}
exports.cloneElementData = cloneElementData;
/**
 * <zh/> 判断数据是否为空
 *
 * <en/> Determine if the data is empty
 * @param data - <zh/> 图数据 | <en/> graph data
 * @returns <zh/> 是否为空 | <en/> is empty
 */
function isEmptyData(data) {
    return !(0, util_1.get)(data, ['nodes', 'length']) && !(0, util_1.get)(data, ['edges', 'length']) && !(0, util_1.get)(data, ['combos', 'length']);
}
exports.isEmptyData = isEmptyData;
//# sourceMappingURL=data.js.map