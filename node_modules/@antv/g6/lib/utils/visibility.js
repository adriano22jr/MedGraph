"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setVisibility = void 0;
const cache_1 = require("./cache");
const shape_1 = require("./shape");
const PropertyKey = 'visibility';
/**
 * <zh/> 设置图形实例的可见性
 *
 * <en/> Set the visibility of the shape instance
 * @param shape - <zh/> 图形实例 | <en/> shape instance
 * @param visibility - <zh/> 可见性 | <en/> visibility
 * @remarks
 * <zh/> 在设置 enableCSSParsing 为 false 的情况下，复合图形无法继承父属性，因此需要对所有子图形应用相同的可见性
 *
 * <en/> After setting enableCSSParsing to false, the compound shape cannot inherit the parent attribute, so the same visibility needs to be applied to all child shapes
 */
function setVisibility(shape, visibility) {
    const shapes = [shape, ...(0, shape_1.getDescendantShapes)(shape)];
    shapes.forEach((sp) => {
        if (!(0, cache_1.hasCachedStyle)(sp, PropertyKey))
            (0, cache_1.cacheStyle)(sp, PropertyKey);
        const cachedVisibility = (0, cache_1.getCachedStyle)(sp, PropertyKey);
        // 如果子图形为隐藏状态，始终保持隐藏状态
        // If the child shape is hidden, keep it hidden
        if (shape !== sp && cachedVisibility === 'hidden')
            return;
        sp.style.visibility = visibility;
    });
}
exports.setVisibility = setVisibility;
//# sourceMappingURL=visibility.js.map