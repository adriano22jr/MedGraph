"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BUILT_IN_EXTENSIONS = void 0;
const animations_1 = require("../animations");
const behaviors_1 = require("../behaviors");
const elements_1 = require("../elements");
const layouts_1 = require("../layouts");
const palettes_1 = require("../palettes");
const plugins_1 = require("../plugins");
const themes_1 = require("../themes");
const transforms_1 = require("../transforms");
/**
 * <zh/> 内置插件统一在这里注册。
 * <en/> Built-in extensions are registered here.
 */
exports.BUILT_IN_EXTENSIONS = {
    animation: {
        'combo-collapse': animations_1.ComboCollapse,
        'combo-expand': animations_1.ComboExpand,
        'node-collapse': animations_1.NodeCollapse,
        'node-expand': animations_1.NodeExpand,
        'path-in': animations_1.PathIn,
        'path-out': animations_1.PathOut,
        fade: animations_1.Fade,
        translate: animations_1.Translate,
    },
    behavior: {
        'zoom-canvas': behaviors_1.ZoomCanvas,
        'drag-canvas': behaviors_1.DragCanvas,
        'drag-element': behaviors_1.DragElement,
        'drag-element-force': behaviors_1.DragElementForce,
        'scroll-canvas': behaviors_1.ScrollCanvas,
        'collapse-expand': behaviors_1.CollapseExpand,
        'click-select': behaviors_1.ClickSelect,
        'hover-activate': behaviors_1.HoverActivate,
        'focus-element': behaviors_1.FocusElement,
        'create-edge': behaviors_1.CreateEdge,
        'brush-select': behaviors_1.BrushSelect,
        'lasso-select': behaviors_1.LassoSelect,
    },
    combo: {
        circle: elements_1.CircleCombo,
        rect: elements_1.RectCombo,
    },
    edge: {
        cubic: elements_1.Cubic,
        line: elements_1.Line,
        polyline: elements_1.Polyline,
        quadratic: elements_1.Quadratic,
        'cubic-horizontal': elements_1.CubicHorizontal,
        'cubic-vertical': elements_1.CubicVertical,
    },
    layout: {
        'antv-dagre': layouts_1.AntVDagreLayout,
        'combo-combined': layouts_1.ComboCombinedLayout,
        'compact-box': layouts_1.compactBox,
        'force-atlas2': layouts_1.ForceAtlas2Layout,
        circular: layouts_1.CircularLayout,
        concentric: layouts_1.ConcentricLayout,
        'd3-force': layouts_1.D3ForceLayout,
        dagre: layouts_1.DagreLayout,
        dendrogram: layouts_1.dendrogram,
        force: layouts_1.ForceLayout,
        fruchterman: layouts_1.FruchtermanLayout,
        grid: layouts_1.GridLayout,
        indented: layouts_1.indented,
        mds: layouts_1.MDSLayout,
        mindmap: layouts_1.mindmap,
        radial: layouts_1.RadialLayout,
        random: layouts_1.RandomLayout,
    },
    node: {
        circle: elements_1.Circle,
        diamond: elements_1.Diamond,
        ellipse: elements_1.Ellipse,
        hexagon: elements_1.Hexagon,
        html: elements_1.HTML,
        image: elements_1.Image,
        rect: elements_1.Rect,
        star: elements_1.Star,
        donut: elements_1.Donut,
        triangle: elements_1.Triangle,
    },
    palette: {
        spectral: palettes_1.spectral,
        tableau: palettes_1.tableau,
        oranges: palettes_1.oranges,
        greens: palettes_1.greens,
        blues: palettes_1.blues,
    },
    theme: {
        dark: themes_1.dark,
        light: themes_1.light,
    },
    plugin: {
        'bubble-sets': plugins_1.BubbleSets,
        'grid-line': plugins_1.GridLine,
        background: plugins_1.Background,
        contextmenu: plugins_1.Contextmenu,
        fullscreen: plugins_1.Fullscreen,
        history: plugins_1.History,
        hull: plugins_1.Hull,
        legend: plugins_1.Legend,
        timebar: plugins_1.Timebar,
        toolbar: plugins_1.Toolbar,
        tooltip: plugins_1.Tooltip,
        watermark: plugins_1.Watermark,
    },
    transform: {
        'update-related-edges': transforms_1.UpdateRelatedEdge,
        'arrange-draw-order': transforms_1.ArrangeDrawOrder,
        'collapse-expand-combo': transforms_1.CollapseExpandCombo,
        'collapse-expand-node': transforms_1.CollapseExpandNode,
        'process-parallel-edges': transforms_1.ProcessParallelEdges,
        'get-edge-actual-ends': transforms_1.GetEdgeActualEnds,
    },
};
//# sourceMappingURL=build-in.js.map