import { isFunction } from '@antv/util';
import { CommonEvent } from '../constants';
import { ELEMENT_TYPES } from '../constants/element';
import { BaseBehavior } from './base-behavior';
/**
 * <zh/> 聚焦元素交互行为
 *
 * <en/> Focus element behavior
 * @remarks
 * <zh/> 点击元素时，将元素聚焦到视图中心。
 *
 * <en/> When an element is clicked, the element is focused to the center of the view.
 */
export class FocusElement extends BaseBehavior {
    static defaultOptions = {
        animation: {
            easing: 'ease-in',
            duration: 500,
        },
        enable: true,
    };
    constructor(context, options) {
        super(context, Object.assign({}, FocusElement.defaultOptions, options));
        this.bindEvents();
    }
    bindEvents() {
        const { graph } = this.context;
        this.unbindEvents();
        ELEMENT_TYPES.forEach((type) => {
            graph.on(`${type}:${CommonEvent.CLICK}`, this.focus);
        });
    }
    focus = async (event) => {
        if (!this.validate(event))
            return;
        const { graph } = this.context;
        await graph.focusElement(event.target.id, this.options.animation);
    };
    validate(event) {
        if (this.destroyed)
            return false;
        const { enable } = this.options;
        if (isFunction(enable))
            return enable(event);
        return !!enable;
    }
    unbindEvents() {
        const { graph } = this.context;
        ELEMENT_TYPES.forEach((type) => {
            graph.off(`${type}:${CommonEvent.CLICK}`, this.focus);
        });
    }
    destroy() {
        this.unbindEvents();
        super.destroy();
    }
}
//# sourceMappingURL=focus-element.js.map