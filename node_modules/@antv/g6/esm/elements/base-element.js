import { BaseShape } from './shapes';
export class BaseElement extends BaseShape {
    get parsedAttributes() {
        return this.attributes;
    }
    /**
     * <zh/> 动画帧执行函数
     *
     * <en/> Animation frame execution function
     */
    onframe() { }
    animate(keyframes, options) {
        const animation = super.animate(keyframes, options);
        if (animation) {
            animation.onframe = () => this.onframe();
            animation.finished.then(() => this.onframe());
        }
        return animation;
    }
    /**
     * <zh/> 在元素完成创建并执行完入场动画后调用
     *
     * <en/> Called after the element is created and the entrance animation is completed
     * @override
     */
    onCreate() { }
    /**
     * <zh/> 在元素更新并执行完过渡动画后调用
     *
     * <en/> Called after the element is updated and the transition animation is completed
     * @override
     */
    onUpdate() { }
    /**
     * <zh/> 在元素完成退场动画并销毁后调用
     *
     * <en/> Called after the element completes the exit animation and is destroyed
     * @override
     */
    onDestroy() { }
}
//# sourceMappingURL=base-element.js.map