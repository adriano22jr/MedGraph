import type { DisplayObjectConfig, Group } from '@antv/g';
import { BaseShape } from './base-shape';
import type { LabelStyleProps } from './label';
export interface BadgeStyleProps extends LabelStyleProps {
}
type ParsedBadgeStyleProps = Required<BadgeStyleProps>;
type BadgeOptions = DisplayObjectConfig<BadgeStyleProps>;
export declare class Badge extends BaseShape<BadgeStyleProps> {
    static defaultStyleProps: Partial<BadgeStyleProps>;
    constructor(options: BadgeOptions);
    protected getBadgeStyle(attributes: ParsedBadgeStyleProps): Omit<Required<BadgeStyleProps>, "x" | "y" | "z" | "zIndex" | "class" | "transform" | "transformOrigin" | "context" | "className">;
    render(attributes?: ParsedBadgeStyleProps, container?: Group): void;
    getGeometryBounds(): import("@antv/g").AABB;
}
export {};
