import { Polygon as GPolygon } from '@antv/g';
import { getPolygonIntersectPoint } from '../../utils/point';
import { BaseNode } from '../nodes/base-node';
/**
 * Abstract class for polygon nodes,i.e triangle, diamond, hexagon, etc.
 */
export class Polygon extends BaseNode {
    constructor(options) {
        super(options);
    }
    get parsedAttributes() {
        return this.attributes;
    }
    drawKeyShape(attributes, container) {
        return this.upsert('key', GPolygon, this.getKeyStyle(attributes), container);
    }
    getKeyStyle(attributes) {
        const keyStyle = super.getKeyStyle(attributes);
        return { ...keyStyle, points: this.getPoints(attributes) };
    }
    getIntersectPoint(point) {
        const { points } = this.getKeyStyle(this.parsedAttributes);
        const center = [+(this.attributes?.x || 0), +(this.attributes?.y || 0)];
        return getPolygonIntersectPoint(point, center, points).point;
    }
}
//# sourceMappingURL=polygon.js.map